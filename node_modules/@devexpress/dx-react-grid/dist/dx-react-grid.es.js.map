{"version":3,"file":"dx-react-grid.es.js","sources":["../src/plugins/grid-core.jsx","../src/grid.jsx","../src/plugins/column-chooser.jsx","../src/plugins/filtering-state.jsx","../src/plugins/integrated-filtering.jsx","../src/plugins/editing-state.jsx","../src/plugins/paging-state.jsx","../src/plugins/integrated-paging.jsx","../src/plugins/custom-paging.jsx","../src/plugins/grouping-state.jsx","../src/plugins/integrated-grouping.jsx","../src/plugins/custom-grouping.jsx","../src/plugins/selection-state.jsx","../src/plugins/integrated-selection.jsx","../src/plugins/sorting-state.jsx","../src/plugins/integrated-sorting.jsx","../src/plugins/drag-drop-provider.jsx","../src/plugins/table-column-reordering.jsx","../src/plugins/table.jsx","../src/plugins/table-selection.jsx","../src/plugins/row-detail-state.jsx","../src/plugins/table-row-detail.jsx","../src/plugins/table-group-row.jsx","../src/plugins/table-header-row.jsx","../src/plugins/table-band-header.jsx","../src/plugins/table-filter-row.jsx","../src/plugins/table-edit-row.jsx","../src/plugins/table-edit-column.jsx","../src/plugins/table-column-resizing.jsx","../src/plugins/paging-panel.jsx","../src/components/group-panel-layout/item-layout.jsx","../src/components/group-panel-layout.jsx","../src/plugins/grouping-panel.jsx","../src/plugins/data-type-provider.jsx","../src/plugins/table-column-visibility.jsx","../src/plugins/toolbar.jsx","../src/plugins/tree-data-state.jsx","../src/plugins/custom-tree-data.jsx","../src/plugins/table-tree-column.jsx","../src/plugins/search-state.jsx","../src/plugins/search-panel.jsx","../src/plugins/table-fixed-columns.jsx","../src/plugins/summary-state.jsx","../src/plugins/integrated-summary.jsx","../src/plugins/custom-summary.jsx","../src/plugins/table-summary-row.jsx","../src/components/table-layout.jsx","../src/components/table-layout/column-group.jsx","../src/components/table-layout/virtual-table-layout.jsx","../src/components/table-layout/row-layout.jsx","../src/components/table-layout/rows-block-layout.jsx","../src/components/table-layout/static-table-layout.jsx","../src/utils/virtual-table.jsx"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Plugin, Getter, Template, TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport { rowIdGetter, cellValueGetter } from '@devexpress/dx-grid-core';\n\nexport class GridCore extends React.PureComponent {\n  render() {\n    const {\n      rows,\n      columns,\n      getRowId,\n      getCellValue,\n      rootComponent: Root,\n    } = this.props;\n\n    return (\n      <Plugin>\n        <Getter name=\"rows\" value={rows} />\n        <Getter name=\"getRowId\" value={rowIdGetter(getRowId, rows)} />\n        <Getter name=\"columns\" value={columns} />\n        <Getter name=\"getCellValue\" value={cellValueGetter(getCellValue, columns)} />\n        <Template name=\"root\">\n          <Root>\n            <TemplatePlaceholder name=\"header\" />\n            <TemplatePlaceholder name=\"body\" />\n            <TemplatePlaceholder name=\"footer\" />\n          </Root>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nGridCore.propTypes = {\n  rows: PropTypes.array.isRequired,\n  getRowId: PropTypes.func,\n  getCellValue: PropTypes.func,\n  columns: PropTypes.array.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n};\n\nGridCore.defaultProps = {\n  getRowId: undefined,\n  getCellValue: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { PluginHost } from '@devexpress/dx-react-core';\nimport { GridCore } from './plugins/grid-core';\n\nexport const Grid = ({\n  rows,\n  columns,\n  getRowId,\n  getCellValue,\n  rootComponent,\n  children,\n}) => (\n  <PluginHost>\n    <GridCore\n      rows={rows}\n      columns={columns}\n      getRowId={getRowId}\n      getCellValue={getCellValue}\n      rootComponent={rootComponent}\n    />\n    {children}\n  </PluginHost>\n);\n\nGrid.propTypes = {\n  rows: PropTypes.array.isRequired,\n  getRowId: PropTypes.func,\n  getCellValue: PropTypes.func,\n  columns: PropTypes.array.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nGrid.defaultProps = {\n  getRowId: undefined,\n  getCellValue: undefined,\n  children: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Template, TemplatePlaceholder, Plugin, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport { columnChooserItems } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'TableColumnVisibility' },\n  { name: 'Toolbar' },\n];\nexport class ColumnChooser extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false,\n    };\n\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleHide = this.handleHide.bind(this);\n    this.setButtonRef = this.setButtonRef.bind(this);\n  }\n\n  setButtonRef(button) {\n    this.button = button;\n  }\n\n  handleToggle() {\n    const { visible } = this.state;\n    this.setState({ visible: !visible });\n  }\n\n  handleHide() {\n    this.setState({ visible: false });\n  }\n\n  render() {\n    const {\n      overlayComponent: Overlay,\n      containerComponent: Container,\n      itemComponent: Item,\n      toggleButtonComponent: ToggleButton,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n    const { visible } = this.state;\n\n    return (\n      <Plugin\n        name=\"ColumnChooser\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {(\n              { columns, hiddenColumnNames, isColumnTogglingEnabled },\n              { toggleColumnVisibility },\n            ) => (\n              <React.Fragment>\n                <ToggleButton\n                  buttonRef={this.setButtonRef}\n                  onToggle={this.handleToggle}\n                  getMessage={getMessage}\n                  active={visible}\n                />\n                <Overlay\n                  visible={visible}\n                  target={this.button}\n                  onHide={this.handleHide}\n                >\n                  <Container>\n                    {columnChooserItems(columns, hiddenColumnNames)\n                      .map((item) => {\n                        const { name: columnName } = item.column;\n                        const togglingEnabled = isColumnTogglingEnabled(columnName);\n                        return (\n                          <Item\n                            key={columnName}\n                            item={item}\n                            disabled={!togglingEnabled}\n                            onToggle={() => toggleColumnVisibility(columnName)}\n                          />\n                        );\n                      })}\n                  </Container>\n                </Overlay>\n              </React.Fragment>\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nColumnChooser.propTypes = {\n  overlayComponent: PropTypes.func.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  itemComponent: PropTypes.func.isRequired,\n  toggleButtonComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nColumnChooser.defaultProps = {\n  messages: {},\n};\n\nColumnChooser.components = {\n  overlayComponent: 'Overlay',\n  containerComponent: 'Container',\n  itemComponent: 'Item',\n  toggleButtonComponent: 'ToggleButton',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Action, Plugin, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport {\n  changeColumnFilter,\n  getColumnExtensionValueGetter,\n  filterExpression,\n} from '@devexpress/dx-grid-core';\n\nconst columnExtensionValueGetter = (columnExtensions, defaultValue) => getColumnExtensionValueGetter(columnExtensions, 'filteringEnabled', defaultValue);\nconst filterExpressionComputed = (\n  { filters, filterExpression: filterExpressionValue },\n) => filterExpression(filters, filterExpressionValue);\n\nexport class FilteringState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filters: props.filters || props.defaultFilters,\n    };\n    const stateHelper = createStateHelper(\n      this,\n      {\n        filters: () => {\n          const { onFiltersChange } = this.props;\n          return onFiltersChange;\n        },\n      },\n    );\n\n    this.changeColumnFilter = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'filters', changeColumnFilter);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      filters = prevState.filters,\n    } = nextProps;\n\n    return {\n      filters,\n    };\n  }\n\n  render() {\n    const { filters } = this.state;\n    const { columnExtensions, columnFilteringEnabled } = this.props;\n\n    return (\n      <Plugin\n        name=\"FilteringState\"\n      >\n        <Getter name=\"filters\" value={filters} />\n        <Getter name=\"filterExpression\" computed={filterExpressionComputed} />\n        <Getter\n          name=\"isColumnFilteringEnabled\"\n          value={columnExtensionValueGetter(columnExtensions, columnFilteringEnabled)}\n        />\n        <Action name=\"changeColumnFilter\" action={this.changeColumnFilter} />\n      </Plugin>\n    );\n  }\n}\n\nFilteringState.propTypes = {\n  filters: PropTypes.array,\n  defaultFilters: PropTypes.array,\n  onFiltersChange: PropTypes.func,\n  columnExtensions: PropTypes.array,\n  columnFilteringEnabled: PropTypes.bool,\n};\n\nFilteringState.defaultProps = {\n  filters: undefined,\n  defaultFilters: [],\n  onFiltersChange: undefined,\n  columnExtensions: undefined,\n  columnFilteringEnabled: true,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport {\n  filteredRows,\n  filteredCollapsedRowsGetter,\n  unwrappedFilteredRows,\n  getColumnExtension,\n  defaultFilterPredicate,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'FilteringState', optional: true },\n  { name: 'SearchState', optional: true },\n];\n\nconst getCollapsedRowsComputed = ({ rows }) => filteredCollapsedRowsGetter(rows);\nconst unwrappedRowsComputed = ({ rows }) => unwrappedFilteredRows(rows);\n\nexport class IntegratedFiltering extends React.PureComponent {\n  render() {\n    const { columnExtensions } = this.props;\n    const getColumnPredicate = columnName => getColumnExtension(\n      columnExtensions, columnName,\n    ).predicate;\n\n    const rowsComputed = ({\n      rows,\n      filterExpression,\n      getCellValue,\n      getRowLevelKey,\n      getCollapsedRows,\n    }) => filteredRows(\n      rows,\n      filterExpression,\n      getCellValue,\n      getColumnPredicate,\n      getRowLevelKey,\n      getCollapsedRows,\n    );\n\n    return (\n      <Plugin\n        name=\"IntegratedFiltering\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsComputed} />\n        <Getter name=\"getCollapsedRows\" computed={getCollapsedRowsComputed} />\n        <Getter name=\"rows\" computed={unwrappedRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nIntegratedFiltering.defaultPredicate = defaultFilterPredicate;\n\nIntegratedFiltering.propTypes = {\n  columnExtensions: PropTypes.array,\n};\n\nIntegratedFiltering.defaultProps = {\n  columnExtensions: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Action, Plugin, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport {\n  createRowChangeGetter,\n  startEditRows,\n  stopEditRows,\n  addRow,\n  changeAddedRow,\n  cancelAddedRows,\n  addedRowsByIds,\n  changeRow,\n  cancelChanges,\n  changedRowsByIds,\n  deleteRows,\n  cancelDeletedRows,\n  getColumnExtensionValueGetter,\n} from '@devexpress/dx-grid-core';\n\nconst columnExtensionValueGetter = (columnExtensions, defaultValue) => getColumnExtensionValueGetter(columnExtensions, 'editingEnabled', defaultValue);\n\nexport class EditingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const rowChanges = props.rowChanges || props.defaultRowChanges;\n    const addedRows = props.addedRows || props.defaultAddedRows;\n    const getRowChanges = () => {\n      const { rowChanges: stateRowChanges } = this.state;\n      return stateRowChanges;\n    };\n    const getAddedRows = () => {\n      const { addedRows: stateAddedRows } = this.state;\n      return stateAddedRows;\n    };\n\n    this.state = {\n      editingRowIds: props.editingRowIds || props.defaultEditingRowIds,\n      addedRows,\n      rowChanges,\n      deletedRowIds: props.deletedRowIds || props.defaultDeletedRowIds,\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        editingRowIds: () => {\n          const { onEditingRowIdsChange } = this.props;\n          return onEditingRowIdsChange;\n        },\n        addedRows: () => {\n          const { onAddedRowsChange } = this.props;\n          return onAddedRowsChange;\n        },\n        rowChanges: () => {\n          const { onRowChangesChange } = this.props;\n          return onRowChangesChange;\n        },\n        deletedRowIds: () => {\n          const { onDeletedRowIdsChange } = this.props;\n          return onDeletedRowIdsChange;\n        },\n      },\n    );\n\n    this.startEditRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingRowIds', startEditRows);\n    this.stopEditRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingRowIds', stopEditRows);\n\n    this.changeRow = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'rowChanges', changeRow);\n    this.cancelChangedRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'rowChanges', cancelChanges);\n    this.commitChangedRows = ({ rowIds }) => {\n      const { onCommitChanges } = this.props;\n      onCommitChanges({\n        changed: changedRowsByIds(getRowChanges(), rowIds),\n      });\n      this.cancelChangedRows({ rowIds });\n    };\n\n    this.addRow = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedRows', addRow);\n    this.changeAddedRow = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedRows', changeAddedRow);\n    this.cancelAddedRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedRows', cancelAddedRows);\n    this.commitAddedRows = ({ rowIds }) => {\n      const { onCommitChanges } = this.props;\n      onCommitChanges({\n        added: addedRowsByIds(getAddedRows(), rowIds),\n      });\n      this.cancelAddedRows({ rowIds });\n    };\n\n    this.deleteRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'deletedRowIds', deleteRows);\n    this.cancelDeletedRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'deletedRowIds', cancelDeletedRows);\n    this.commitDeletedRows = ({ rowIds }) => {\n      const { onCommitChanges } = this.props;\n      onCommitChanges({ deleted: rowIds });\n      this.cancelDeletedRows({ rowIds });\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      editingRowIds = prevState.editingRowIds,\n      rowChanges = prevState.rowChanges,\n      addedRows = prevState.addedRows,\n      deletedRowIds = prevState.deletedRowIds,\n    } = nextProps;\n\n    return {\n      editingRowIds,\n      rowChanges,\n      addedRows,\n      deletedRowIds,\n    };\n  }\n\n  render() {\n    const { createRowChange, columnExtensions, columnEditingEnabled } = this.props;\n    const {\n      editingRowIds, rowChanges, addedRows, deletedRowIds,\n    } = this.state;\n\n    return (\n      <Plugin\n        name=\"EditingState\"\n      >\n        <Getter\n          name=\"createRowChange\"\n          value={createRowChangeGetter(createRowChange, columnExtensions)}\n        />\n\n        <Getter name=\"editingRowIds\" value={editingRowIds} />\n        <Action name=\"startEditRows\" action={this.startEditRows} />\n        <Action name=\"stopEditRows\" action={this.stopEditRows} />\n\n        <Getter name=\"rowChanges\" value={rowChanges} />\n        <Action name=\"changeRow\" action={this.changeRow} />\n        <Action name=\"cancelChangedRows\" action={this.cancelChangedRows} />\n        <Action name=\"commitChangedRows\" action={this.commitChangedRows} />\n\n        <Getter name=\"addedRows\" value={addedRows} />\n        <Action name=\"addRow\" action={this.addRow} />\n        <Action name=\"changeAddedRow\" action={this.changeAddedRow} />\n        <Action name=\"cancelAddedRows\" action={this.cancelAddedRows} />\n        <Action name=\"commitAddedRows\" action={this.commitAddedRows} />\n\n        <Getter name=\"deletedRowIds\" value={deletedRowIds} />\n        <Action name=\"deleteRows\" action={this.deleteRows} />\n        <Action name=\"cancelDeletedRows\" action={this.cancelDeletedRows} />\n        <Action name=\"commitDeletedRows\" action={this.commitDeletedRows} />\n\n        <Getter\n          name=\"isColumnEditingEnabled\"\n          value={columnExtensionValueGetter(columnExtensions, columnEditingEnabled)}\n        />\n      </Plugin>\n    );\n  }\n}\n\nEditingState.propTypes = {\n  createRowChange: PropTypes.func,\n  columnEditingEnabled: PropTypes.bool,\n  columnExtensions: PropTypes.array,\n\n  editingRowIds: PropTypes.array,\n  defaultEditingRowIds: PropTypes.array,\n  onEditingRowIdsChange: PropTypes.func,\n\n  addedRows: PropTypes.array,\n  defaultAddedRows: PropTypes.array,\n  onAddedRowsChange: PropTypes.func,\n\n  rowChanges: PropTypes.object,\n  defaultRowChanges: PropTypes.object,\n  onRowChangesChange: PropTypes.func,\n\n  deletedRowIds: PropTypes.array,\n  defaultDeletedRowIds: PropTypes.array,\n  onDeletedRowIdsChange: PropTypes.func,\n\n  onCommitChanges: PropTypes.func.isRequired,\n};\n\nEditingState.defaultProps = {\n  createRowChange: undefined,\n  columnEditingEnabled: true,\n  columnExtensions: undefined,\n\n  editingRowIds: undefined,\n  defaultEditingRowIds: [],\n  onEditingRowIdsChange: undefined,\n\n  rowChanges: undefined,\n  defaultRowChanges: {},\n  onRowChangesChange: undefined,\n\n  addedRows: undefined,\n  defaultAddedRows: [],\n  onAddedRowsChange: undefined,\n\n  deletedRowIds: undefined,\n  defaultDeletedRowIds: [],\n  onDeletedRowIdsChange: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Action, Plugin, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport { setCurrentPage, setPageSize } from '@devexpress/dx-grid-core';\n\nexport class PagingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentPage: props.currentPage || props.defaultCurrentPage,\n      pageSize: props.pageSize !== undefined ? props.pageSize : props.defaultPageSize,\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        currentPage: () => {\n          const { onCurrentPageChange } = this.props;\n          return onCurrentPageChange;\n        },\n        pageSize: () => {\n          const { onPageSizeChange } = this.props;\n          return onPageSizeChange;\n        },\n      },\n    );\n\n    this.setCurrentPage = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'currentPage', setCurrentPage);\n    this.setPageSize = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'pageSize', setPageSize);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      currentPage = prevState.currentPage,\n      pageSize = prevState.pageSize,\n    } = nextProps;\n\n    return {\n      currentPage,\n      pageSize,\n    };\n  }\n\n  render() {\n    const { pageSize, currentPage } = this.state;\n\n    return (\n      <Plugin\n        name=\"PagingState\"\n      >\n        <Getter name=\"currentPage\" value={currentPage} />\n        <Getter name=\"pageSize\" value={pageSize} />\n        <Action name=\"setCurrentPage\" action={this.setCurrentPage} />\n        <Action name=\"setPageSize\" action={this.setPageSize} />\n      </Plugin>\n    );\n  }\n}\n\nPagingState.propTypes = {\n  pageSize: PropTypes.number,\n  defaultPageSize: PropTypes.number,\n  onPageSizeChange: PropTypes.func,\n  currentPage: PropTypes.number,\n  defaultCurrentPage: PropTypes.number,\n  onCurrentPageChange: PropTypes.func,\n};\n\nPagingState.defaultProps = {\n  pageSize: undefined,\n  defaultPageSize: 10,\n  onPageSizeChange: undefined,\n  currentPage: undefined,\n  defaultCurrentPage: 0,\n  onCurrentPageChange: undefined,\n};\n","import * as React from 'react';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport {\n  paginatedRows, rowsWithPageHeaders, rowCount, currentPage,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'PagingState' },\n];\n\nconst rowsWithHeadersComputed = (\n  { rows, pageSize, getRowLevelKey },\n) => rowsWithPageHeaders(rows, pageSize, getRowLevelKey);\nconst totalCountComputed = ({ rows }) => rowCount(rows);\nconst paginatedRowsComputed = (\n  { rows, pageSize, currentPage: page },\n) => paginatedRows(rows, pageSize, page);\nconst currentPageComputed = (\n  { currentPage: page, totalCount, pageSize }, { setCurrentPage },\n) => currentPage(page, totalCount, pageSize, setCurrentPage);\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class IntegratedPaging extends React.PureComponent {\n  render() {\n    return (\n      <Plugin\n        name=\"IntegratedPaging\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsWithHeadersComputed} />\n        <Getter name=\"totalCount\" computed={totalCountComputed} />\n        <Getter name=\"currentPage\" computed={currentPageComputed} />\n        <Getter name=\"rows\" computed={paginatedRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\n\nconst pluginDependencies = [\n  { name: 'PagingState' },\n];\n\nexport class CustomPaging extends React.PureComponent {\n  render() {\n    const { totalCount } = this.props;\n\n    return (\n      <Plugin\n        name=\"CustomPaging\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"totalCount\" value={totalCount} />\n      </Plugin>\n    );\n  }\n}\n\nCustomPaging.propTypes = {\n  totalCount: PropTypes.number,\n};\n\nCustomPaging.defaultProps = {\n  totalCount: 0,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Action, Plugin, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport {\n  changeColumnGrouping,\n  toggleExpandedGroups,\n  draftColumnGrouping,\n  cancelColumnGroupingDraft,\n  getColumnExtensionValueGetter,\n  adjustSortIndex,\n} from '@devexpress/dx-grid-core';\n\nconst dependencies = [\n  { name: 'SortingState', optional: true },\n];\n\nconst columnExtensionValueGetter = (\n  columnExtensions, defaultValue,\n) => getColumnExtensionValueGetter(columnExtensions, 'groupingEnabled', defaultValue);\n\nexport class GroupingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      grouping: props.grouping || props.defaultGrouping,\n      draftGrouping: null,\n      expandedGroups: props.expandedGroups || props.defaultExpandedGroups,\n    };\n\n    this.stateHelper = createStateHelper(\n      this,\n      {\n        grouping: () => {\n          const { onGroupingChange } = this.props;\n          return onGroupingChange;\n        },\n        expandedGroups: () => {\n          const { onExpandedGroupsChange } = this.props;\n          return onExpandedGroupsChange;\n        },\n      },\n    );\n\n    this.changeColumnGrouping = this.changeColumnGrouping.bind(this);\n    this.toggleGroupExpanded = this.stateHelper.applyReducer\n      .bind(this.stateHelper, toggleExpandedGroups);\n    this.draftColumnGrouping = this.stateHelper.applyReducer\n      .bind(this.stateHelper, draftColumnGrouping);\n    this.cancelColumnGroupingDraft = this.stateHelper.applyReducer\n      .bind(this.stateHelper, cancelColumnGroupingDraft);\n    this.changeColumnSorting = this.changeColumnSorting.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      grouping = prevState.grouping,\n      expandedGroups = prevState.expandedGroups,\n    } = nextProps;\n\n    return {\n      grouping,\n      expandedGroups,\n    };\n  }\n\n  changeColumnSorting(\n    { columnName, keepOther, ...restParams },\n    { sorting },\n    { changeColumnSorting },\n  ) {\n    const { grouping } = this.state;\n    const groupingIndex = grouping\n      .findIndex(columnGrouping => columnGrouping.columnName === columnName);\n    if (groupingIndex === -1) {\n      changeColumnSorting({\n        columnName,\n        keepOther: keepOther || grouping.map(columnGrouping => columnGrouping.columnName),\n        ...restParams,\n      });\n      return false;\n    }\n\n    const sortIndex = adjustSortIndex(groupingIndex, grouping, sorting);\n    changeColumnSorting({\n      columnName,\n      keepOther: true,\n      sortIndex,\n      ...restParams,\n    });\n    return false;\n  }\n\n  changeColumnGrouping({ columnName, groupIndex }, getters, actions) {\n    this.stateHelper.applyReducer(\n      changeColumnGrouping,\n      { columnName, groupIndex },\n      (nextState, state) => {\n        const { grouping } = nextState;\n        const { grouping: prevGrouping } = state;\n        const { sorting } = getters;\n        const { changeColumnSorting } = actions;\n\n        if (!sorting) return;\n\n        const columnSortingIndex = sorting\n          .findIndex(columnSorting => columnSorting.columnName === columnName);\n        const prevGroupingIndex = prevGrouping\n          .findIndex(columnGrouping => columnGrouping.columnName === columnName);\n        const groupingIndex = grouping\n          .findIndex(columnGrouping => columnGrouping.columnName === columnName);\n\n        if (columnSortingIndex === -1\n          || (prevGroupingIndex === prevGrouping.length - 1 && groupingIndex === -1)) return;\n\n        const sortIndex = adjustSortIndex(\n          groupingIndex === -1 ? grouping.length : groupingIndex,\n          grouping,\n          sorting,\n        );\n\n        if (columnSortingIndex === sortIndex) return;\n\n        changeColumnSorting({\n          keepOther: true,\n          sortIndex,\n          ...sorting[columnSortingIndex],\n        });\n      },\n    );\n  }\n\n  render() {\n    const { grouping, draftGrouping, expandedGroups } = this.state;\n    const { columnExtensions, columnGroupingEnabled } = this.props;\n\n    return (\n      <Plugin\n        name=\"GroupingState\"\n        dependencies={dependencies}\n      >\n        <Getter name=\"grouping\" value={grouping} />\n        <Getter name=\"draftGrouping\" value={draftGrouping || grouping} />\n        <Getter\n          name=\"isColumnGroupingEnabled\"\n          value={columnExtensionValueGetter(columnExtensions, columnGroupingEnabled)}\n        />\n        <Action name=\"changeColumnGrouping\" action={this.changeColumnGrouping} />\n        <Action name=\"draftColumnGrouping\" action={this.draftColumnGrouping} />\n        <Action name=\"cancelColumnGroupingDraft\" action={this.cancelColumnGroupingDraft} />\n\n        <Getter name=\"expandedGroups\" value={expandedGroups} />\n        <Action name=\"toggleGroupExpanded\" action={this.toggleGroupExpanded} />\n\n        <Action name=\"changeColumnSorting\" action={this.changeColumnSorting} />\n      </Plugin>\n    );\n  }\n}\n\nGroupingState.propTypes = {\n  grouping: PropTypes.array,\n  defaultGrouping: PropTypes.array,\n  onGroupingChange: PropTypes.func,\n  expandedGroups: PropTypes.array,\n  defaultExpandedGroups: PropTypes.array,\n  onExpandedGroupsChange: PropTypes.func,\n  columnExtensions: PropTypes.array,\n  columnGroupingEnabled: PropTypes.bool,\n};\n\nGroupingState.defaultProps = {\n  grouping: undefined,\n  defaultGrouping: [],\n  onGroupingChange: undefined,\n  expandedGroups: undefined,\n  defaultExpandedGroups: [],\n  onExpandedGroupsChange: undefined,\n  columnExtensions: undefined,\n  columnGroupingEnabled: true,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport {\n  groupRowChecker,\n  groupRowLevelKeyGetter,\n  groupCollapsedRowsGetter,\n  groupedRows,\n  expandedGroupRows,\n  getColumnExtension,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'GroupingState' },\n];\n\nconst getCollapsedRowsComputed = (\n  { getCollapsedRows },\n) => groupCollapsedRowsGetter(getCollapsedRows);\nconst expandedGroupedRowsComputed = (\n  { rows, grouping, expandedGroups },\n) => expandedGroupRows(rows, grouping, expandedGroups);\n\nexport class IntegratedGrouping extends React.PureComponent {\n  render() {\n    const { columnExtensions } = this.props;\n    const getColumnCriteria = columnName => getColumnExtension(\n      columnExtensions, columnName,\n    ).criteria;\n\n    const groupedRowsComputed = (\n      { rows, grouping, getCellValue },\n    ) => groupedRows(rows, grouping, getCellValue, getColumnCriteria);\n\n    return (\n      <Plugin\n        name=\"IntegratedGrouping\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"isGroupRow\" value={groupRowChecker} />\n        <Getter name=\"getRowLevelKey\" value={groupRowLevelKeyGetter} />\n        <Getter name=\"getCollapsedRows\" computed={getCollapsedRowsComputed} />\n        <Getter name=\"rows\" computed={groupedRowsComputed} />\n        <Getter name=\"rows\" computed={expandedGroupedRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nIntegratedGrouping.propTypes = {\n  columnExtensions: PropTypes.array,\n};\n\nIntegratedGrouping.defaultProps = {\n  columnExtensions: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport {\n  groupRowChecker,\n  groupRowLevelKeyGetter,\n  groupCollapsedRowsGetter,\n  customGroupingRowIdGetter,\n  customGroupedRows,\n  expandedGroupRows,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'GroupingState' },\n];\n\nconst getCollapsedRowsComputed = (\n  { getCollapsedRows },\n) => groupCollapsedRowsGetter(getCollapsedRows);\nconst expandedGroupedRowsComputed = (\n  { rows, grouping, expandedGroups },\n) => expandedGroupRows(rows, grouping, expandedGroups);\nconst getRowIdComputed = ({ getRowId, rows }) => customGroupingRowIdGetter(getRowId, rows);\n\nexport class CustomGrouping extends React.PureComponent {\n  render() {\n    const {\n      getChildGroups,\n      grouping: appliedGrouping,\n      expandedGroups: appliedExpandedGroups,\n    } = this.props;\n    const groupedRowsComputed = (\n      { rows, grouping },\n    ) => customGroupedRows(rows, grouping, getChildGroups);\n\n    return (\n      <Plugin\n        name=\"CustomGrouping\"\n        dependencies={pluginDependencies}\n      >\n        {appliedGrouping && (\n          <Getter name=\"grouping\" value={appliedGrouping} />\n        )}\n        {appliedExpandedGroups && (\n          <Getter name=\"expandedGroups\" value={appliedExpandedGroups} />\n        )}\n        <Getter name=\"isGroupRow\" value={groupRowChecker} />\n        <Getter name=\"getRowLevelKey\" value={groupRowLevelKeyGetter} />\n        <Getter name=\"getCollapsedRows\" computed={getCollapsedRowsComputed} />\n        <Getter name=\"rows\" computed={groupedRowsComputed} />\n        <Getter name=\"getRowId\" computed={getRowIdComputed} />\n        <Getter name=\"rows\" computed={expandedGroupedRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nCustomGrouping.propTypes = {\n  getChildGroups: PropTypes.func.isRequired,\n  grouping: PropTypes.array,\n  expandedGroups: PropTypes.array,\n};\n\nCustomGrouping.defaultProps = {\n  grouping: undefined,\n  expandedGroups: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Action, Plugin, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport { toggleSelection } from '@devexpress/dx-grid-core';\n\nexport class SelectionState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selection: props.selection || props.defaultSelection,\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        selection: () => {\n          const { onSelectionChange } = this.props;\n          return onSelectionChange;\n        },\n      },\n    );\n\n    this.toggleSelection = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'selection', toggleSelection);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      selection = prevState.selection,\n    } = nextProps;\n\n    return {\n      selection,\n    };\n  }\n\n  render() {\n    const { selection } = this.state;\n\n    return (\n      <Plugin\n        name=\"SelectionState\"\n      >\n        <Getter name=\"selection\" value={selection} />\n        <Action name=\"toggleSelection\" action={this.toggleSelection} />\n      </Plugin>\n    );\n  }\n}\n\nSelectionState.propTypes = {\n  selection: PropTypes.array,\n  defaultSelection: PropTypes.array,\n  onSelectionChange: PropTypes.func,\n};\n\nSelectionState.defaultProps = {\n  selection: undefined,\n  defaultSelection: [],\n  onSelectionChange: undefined,\n};\n","import * as React from 'react';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport {\n  rowsWithAvailableToSelect,\n  someSelected,\n  allSelected,\n  unwrapSelectedRows,\n} from '@devexpress/dx-grid-core';\n\nconst rowsWithAvailableToSelectComputed = (\n  { rows, getRowId, isGroupRow },\n) => rowsWithAvailableToSelect(rows, getRowId, isGroupRow);\nconst allSelectedComputed = ({ rows, selection }) => allSelected(rows, selection);\nconst someSelectedComputed = ({ rows, selection }) => someSelected(rows, selection);\nconst selectAllAvailableComputed = ({ rows: { availableToSelect } }) => !!availableToSelect.length;\nconst toggleSelectAll = (state, { rows: { availableToSelect } }, { toggleSelection }) => {\n  toggleSelection({ rowIds: availableToSelect, state });\n};\nconst unwrapRowsComputed = ({ rows }) => unwrapSelectedRows(rows);\n\nconst pluginDependencies = [\n  { name: 'SelectionState' },\n];\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class IntegratedSelection extends React.PureComponent {\n  render() {\n    return (\n      <Plugin\n        name=\"IntegratedSelection\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsWithAvailableToSelectComputed} />\n        <Getter name=\"allSelected\" computed={allSelectedComputed} />\n        <Getter name=\"someSelected\" computed={someSelectedComputed} />\n        <Getter name=\"selectAllAvailable\" computed={selectAllAvailableComputed} />\n        <Action name=\"toggleSelectAll\" action={toggleSelectAll} />\n        <Getter name=\"rows\" computed={unwrapRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Action, Plugin, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport {\n  changeColumnSorting,\n  getColumnExtensionValueGetter,\n  getPersistentSortedColumns,\n  calculateKeepOther,\n} from '@devexpress/dx-grid-core';\n\nconst columnExtensionValueGetter = (columnExtensions, defaultValue) => getColumnExtensionValueGetter(columnExtensions, 'sortingEnabled', defaultValue);\n\nexport class SortingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sorting: props.sorting || props.defaultSorting,\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        sorting: () => {\n          const { onSortingChange } = this.props;\n          return onSortingChange;\n        },\n      },\n    );\n\n    this.changeColumnSorting = stateHelper.applyReducer\n      .bind(stateHelper, (prevState, payload) => {\n        const { sorting = prevState.sorting } = this.props;\n        const persistentSortedColumns = getPersistentSortedColumns(sorting, props.columnExtensions);\n        const keepOther = calculateKeepOther(\n          prevState.sorting, payload.keepOther, persistentSortedColumns,\n        );\n        return changeColumnSorting(prevState, { ...payload, keepOther });\n      });\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      sorting = prevState.sorting,\n    } = nextProps;\n\n    return {\n      sorting,\n    };\n  }\n\n  render() {\n    const { sorting } = this.state;\n    const { columnExtensions, columnSortingEnabled } = this.props;\n\n    return (\n      <Plugin\n        name=\"SortingState\"\n      >\n        <Getter name=\"sorting\" value={sorting} />\n        <Getter\n          name=\"isColumnSortingEnabled\"\n          value={columnExtensionValueGetter(columnExtensions, columnSortingEnabled)}\n        />\n        <Action name=\"changeColumnSorting\" action={this.changeColumnSorting} />\n      </Plugin>\n    );\n  }\n}\n\nSortingState.propTypes = {\n  sorting: PropTypes.array,\n  defaultSorting: PropTypes.array,\n  onSortingChange: PropTypes.func,\n  columnExtensions: PropTypes.array,\n  columnSortingEnabled: PropTypes.bool,\n};\n\nSortingState.defaultProps = {\n  sorting: undefined,\n  defaultSorting: [],\n  onSortingChange: undefined,\n  columnExtensions: undefined,\n  columnSortingEnabled: true,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport { sortedRows, getColumnExtension } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'SortingState' },\n];\n\nexport class IntegratedSorting extends React.PureComponent {\n  render() {\n    const { columnExtensions } = this.props;\n    const getColumnCompare = columnName => getColumnExtension(columnExtensions, columnName).compare;\n\n    const rowsComputed = ({\n      rows, sorting, getCellValue, isGroupRow, getRowLevelKey,\n    }) => sortedRows(rows, sorting, getCellValue, getColumnCompare, isGroupRow, getRowLevelKey);\n\n    return (\n      <Plugin\n        name=\"IntegratedSorting\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nIntegratedSorting.propTypes = {\n  columnExtensions: PropTypes.array,\n};\n\nIntegratedSorting.defaultProps = {\n  columnExtensions: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Plugin, Getter, Template, TemplatePlaceholder,\n  TemplateConnector,\n  DragDropProvider as DragDropProviderCore,\n} from '@devexpress/dx-react-core';\n\nconst getTargetColumns = (payload, columns) => payload\n  .filter(item => item.type === 'column')\n  .map(item => columns.find(column => column.name === item.columnName));\n\nexport class DragDropProvider extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      payload: null,\n      clientOffset: null,\n    };\n\n    this.change = ({ payload, clientOffset }) => this.setState({ payload, clientOffset });\n  }\n\n  render() {\n    const {\n      containerComponent: Container,\n      columnComponent: Column,\n    } = this.props;\n    const {\n      payload,\n      clientOffset,\n    } = this.state;\n\n    return (\n      <Plugin\n        name=\"DragDropProvider\"\n      >\n        <Getter name=\"draggingEnabled\" value />\n        <Template name=\"root\">\n          <DragDropProviderCore\n            onChange={this.change}\n          >\n            <TemplatePlaceholder />\n          </DragDropProviderCore>\n          {payload && (\n            <TemplateConnector>\n              {({ columns }) => (\n                <Container\n                  clientOffset={clientOffset}\n                >\n                  {getTargetColumns(payload, columns)\n                    .map(column => (\n                      <Column\n                        key={column.name}\n                        column={column}\n                      />\n                    ))\n                  }\n                </Container>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nDragDropProvider.propTypes = {\n  containerComponent: PropTypes.func.isRequired,\n  columnComponent: PropTypes.func.isRequired,\n};\n\nDragDropProvider.components = {\n  containerComponent: 'Container',\n  columnComponent: 'Column',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter,\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  DropTarget,\n  withComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  TABLE_DATA_TYPE,\n  TABLE_REORDERING_TYPE,\n  orderedColumns,\n  changeColumnOrder,\n  getTableTargetColumnIndex,\n  tableHeaderRowsWithReordering,\n  draftOrder as draftOrderComputed,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'Table' },\n];\n\nconst tableHeaderRowsComputed = (\n  { tableHeaderRows },\n) => tableHeaderRowsWithReordering(tableHeaderRows);\n\nclass TableColumnReorderingRaw extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      order: props.defaultOrder,\n      sourceColumnIndex: -1,\n      targetColumnIndex: -1,\n    };\n\n    this.onOver = this.handleOver.bind(this);\n    this.onLeave = this.handleLeave.bind(this);\n    this.onDrop = this.handleDrop.bind(this);\n  }\n\n  getState() {\n    const { order: orderState } = this.state;\n    const {\n      order = orderState,\n    } = this.props;\n    return {\n      ...this.state,\n      order,\n    };\n  }\n\n  getDraftOrder() {\n    const { order, sourceColumnIndex, targetColumnIndex } = this.getState();\n    return draftOrderComputed(order, sourceColumnIndex, targetColumnIndex);\n  }\n\n  getAvailableColumns() {\n    return this.getDraftOrder()\n      .filter(columnName => !!this.cellDimensionGetters[columnName]);\n  }\n\n  cacheCellDimensions() {\n    this.cellDimensions = (this.cellDimensions && this.cellDimensions.length)\n      ? this.cellDimensions\n      : this.getAvailableColumns()\n        .map(columnName => this.cellDimensionGetters[columnName]());\n  }\n\n  resetCellDimensions() {\n    this.cellDimensions = [];\n  }\n\n  ensureCellDimensionGetters(tableColumns) {\n    Object.keys(this.cellDimensionGetters)\n      .forEach((columnName) => {\n        const columnIndex = tableColumns\n          .findIndex(({ type, column }) => type === TABLE_DATA_TYPE && column.name === columnName);\n        if (columnIndex === -1) {\n          delete this.cellDimensionGetters[columnName];\n        }\n      });\n  }\n\n  storeCellDimensionsGetter(tableColumn, getter, tableColumns) {\n    if (tableColumn.type === TABLE_DATA_TYPE) {\n      this.cellDimensionGetters[tableColumn.column.name] = getter;\n    }\n    this.ensureCellDimensionGetters(tableColumns);\n  }\n\n  handleOver({ payload, clientOffset: { x } }) {\n    const sourceColumnName = payload[0].columnName;\n    const availableColumns = this.getAvailableColumns();\n    const relativeSourceColumnIndex = availableColumns.indexOf(sourceColumnName);\n\n    if (relativeSourceColumnIndex === -1) return;\n\n    this.cacheCellDimensions();\n    const { cellDimensions } = this;\n\n    const overlappedColumns = cellDimensions\n      .filter(({ left, right }) => left <= x && x <= right);\n\n    if (overlappedColumns.length > 1) return;\n\n    const relativeTargetIndex = getTableTargetColumnIndex(\n      cellDimensions,\n      relativeSourceColumnIndex,\n      x,\n    );\n\n    if (relativeTargetIndex === -1) return;\n\n    const {\n      sourceColumnIndex: prevSourceColumnIndex,\n      targetColumnIndex: prevTargetColumnIndex,\n    } = this.getState();\n    const draftOrder = this.getDraftOrder();\n    const targetColumnIndex = draftOrder.indexOf(availableColumns[relativeTargetIndex]);\n\n    if (targetColumnIndex === prevTargetColumnIndex) return;\n\n    const sourceColumnIndex = prevSourceColumnIndex === -1\n      ? draftOrder.indexOf(sourceColumnName)\n      : prevSourceColumnIndex;\n\n    this.setState({\n      sourceColumnIndex,\n      targetColumnIndex,\n    });\n  }\n\n  handleLeave() {\n    this.setState({\n      sourceColumnIndex: -1,\n      targetColumnIndex: -1,\n    });\n\n    this.resetCellDimensions();\n  }\n\n  handleDrop() {\n    const { sourceColumnIndex, targetColumnIndex, order } = this.getState();\n    const { onOrderChange } = this.props;\n\n    if (sourceColumnIndex === -1 && targetColumnIndex === -1) return;\n\n    const nextOrder = changeColumnOrder(order, {\n      sourceColumnName: order[sourceColumnIndex],\n      targetColumnName: order[targetColumnIndex],\n    });\n\n    this.setState({\n      order: nextOrder,\n      sourceColumnIndex: -1,\n      targetColumnIndex: -1,\n    });\n\n    if (onOrderChange) {\n      onOrderChange(nextOrder);\n    }\n\n    this.resetCellDimensions();\n  }\n\n  render() {\n    const {\n      tableContainerComponent: Container,\n      rowComponent: Row,\n      cellComponent: Cell,\n    } = this.props;\n\n    const columnsComputed = (\n      { tableColumns },\n    ) => orderedColumns(tableColumns, this.getDraftOrder());\n\n    this.cellDimensionGetters = {};\n\n    return (\n      <Plugin\n        name=\"TableColumnReordering\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={columnsComputed} />\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n        <Template name=\"table\">\n          {params => (\n            <Container\n              {...params}\n              onOver={this.onOver}\n              onLeave={this.onLeave}\n              onDrop={this.onDrop}\n            >\n              <TemplatePlaceholder />\n            </Container>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => tableRow.type === TABLE_REORDERING_TYPE}\n        >\n          {params => (\n            <Row {...params} />\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => tableRow.type === TABLE_REORDERING_TYPE}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ tableColumns }) => (\n                <Cell\n                  {...params}\n                  getCellDimensions={getter => this.storeCellDimensionsGetter(\n                    params.tableColumn, getter, tableColumns,\n                  )}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableColumnReorderingRaw.propTypes = {\n  order: PropTypes.arrayOf(PropTypes.string),\n  defaultOrder: PropTypes.arrayOf(PropTypes.string),\n  onOrderChange: PropTypes.func,\n  tableContainerComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n};\n\nTableColumnReorderingRaw.defaultProps = {\n  order: undefined,\n  defaultOrder: [],\n  onOrderChange: undefined,\n};\n\nTableColumnReorderingRaw.components = {\n  tableContainerComponent: 'TableContainer',\n  rowComponent: 'Row',\n  cellComponent: 'Cell',\n};\n\nconst TableContainer = ({\n  onOver, onLeave, onDrop, children, // eslint-disable-line react/prop-types\n}) => (\n  <DropTarget\n    onOver={onOver}\n    onLeave={onLeave}\n    onDrop={onDrop}\n  >\n    {children}\n  </DropTarget>\n);\n\nexport const TableColumnReordering = withComponents({ TableContainer })(TableColumnReorderingRaw);\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { memoize, getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Getter,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  Plugin,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithDataRows,\n  tableRowsWithDataRows,\n  tableCellColSpanGetter,\n  isNoDataTableRow,\n  isNoDataTableCell,\n  isDataTableCell,\n  isHeaderStubTableCell,\n  isDataTableRow,\n  TABLE_DATA_TYPE,\n  TABLE_NODATA_TYPE,\n} from '@devexpress/dx-grid-core';\n\nconst RowPlaceholder = props => <TemplatePlaceholder name=\"tableRow\" params={props} />;\nconst CellPlaceholder = props => <TemplatePlaceholder name=\"tableCell\" params={props} />;\n\nconst tableHeaderRows = [];\nconst tableBodyRowsComputed = ({ rows, getRowId }) => tableRowsWithDataRows(rows, getRowId);\nconst tableFooterRows = [];\n\nconst defaultMessages = {\n  noData: 'No data',\n};\n\nexport class Table extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.tableColumnsComputed = memoize(\n      columnExtensions => ({\n        columns,\n      }) => tableColumnsWithDataRows(columns, columnExtensions),\n    );\n  }\n\n  render() {\n    const {\n      layoutComponent: Layout,\n      cellComponent: Cell,\n      rowComponent: Row,\n      noDataRowComponent: NoDataRow,\n      noDataCellComponent: NoDataCell,\n      stubRowComponent: StubRow,\n      stubCellComponent: StubCell,\n      stubHeaderCellComponent: StubHeaderCell,\n      columnExtensions,\n      messages,\n      containerComponent,\n      tableComponent,\n      headComponent,\n      bodyComponent,\n      footerComponent,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n    const tableColumnsComputed = this.tableColumnsComputed(columnExtensions);\n\n    return (\n      <Plugin\n        name=\"Table\"\n      >\n        <Getter name=\"tableHeaderRows\" value={tableHeaderRows} />\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Getter name=\"tableFooterRows\" value={tableFooterRows} />\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Getter name=\"getTableCellColSpan\" value={tableCellColSpanGetter} />\n\n        <Template name=\"body\">\n          <TemplatePlaceholder name=\"table\" />\n        </Template>\n        <Template name=\"table\">\n          <TemplateConnector>\n            {({\n              tableHeaderRows: headerRows,\n              tableBodyRows: bodyRows,\n              tableFooterRows: footerRows,\n              tableColumns: columns,\n              getTableCellColSpan,\n            }) => (\n              <Layout\n                tableComponent={tableComponent}\n                headComponent={headComponent}\n                bodyComponent={bodyComponent}\n                footerComponent={footerComponent}\n                containerComponent={containerComponent}\n                headerRows={headerRows}\n                bodyRows={bodyRows}\n                footerRows={footerRows}\n                columns={columns}\n                rowComponent={RowPlaceholder}\n                cellComponent={CellPlaceholder}\n                getCellColSpan={getTableCellColSpan}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n        <Template name=\"tableCell\">\n          {params => (\n            <TemplateConnector>\n              {(\n                { tableHeaderRows: headerRows },\n              ) => (isHeaderStubTableCell(params.tableRow, headerRows)\n                ? <StubHeaderCell {...params} />\n                : <StubCell {...params} />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isDataTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ getCellValue }) => {\n                const columnName = params.tableColumn.column.name;\n                const value = getCellValue(params.tableRow.row, columnName);\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueFormatter\"\n                    params={{\n                      row: params.tableRow.row,\n                      column: params.tableColumn.column,\n                      value,\n                    }}\n                  >\n                    {content => (\n                      <Cell\n                        {...params}\n                        row={params.tableRow.row}\n                        column={params.tableColumn.column}\n                        value={value}\n                      >\n                        {content}\n                      </Cell>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => isNoDataTableRow(tableRow)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ tableColumns }) => {\n                if (isNoDataTableCell(params.tableColumn, tableColumns)) {\n                  return (\n                    <NoDataCell\n                      {...params}\n                      getMessage={getMessage}\n                    />\n                  );\n                }\n                return null;\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template name=\"tableRow\">\n          {params => (\n            <StubRow {...params} />\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isDataTableRow(tableRow)}\n        >\n          {params => (\n            <Row\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isNoDataTableRow(tableRow)}\n        >\n          {params => <NoDataRow {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTable.COLUMN_TYPE = TABLE_DATA_TYPE;\nTable.ROW_TYPE = TABLE_DATA_TYPE;\nTable.NODATA_ROW_TYPE = TABLE_NODATA_TYPE;\n\nTable.propTypes = {\n  layoutComponent: PropTypes.func.isRequired,\n  tableComponent: PropTypes.func.isRequired,\n  headComponent: PropTypes.func.isRequired,\n  bodyComponent: PropTypes.func.isRequired,\n  footerComponent: PropTypes.func.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  noDataCellComponent: PropTypes.func.isRequired,\n  noDataRowComponent: PropTypes.func.isRequired,\n  stubRowComponent: PropTypes.func.isRequired,\n  stubCellComponent: PropTypes.func.isRequired,\n  stubHeaderCellComponent: PropTypes.func.isRequired,\n  columnExtensions: PropTypes.array,\n  messages: PropTypes.shape({\n    noData: PropTypes.string,\n  }),\n};\n\nTable.defaultProps = {\n  columnExtensions: undefined,\n  messages: {},\n};\n\nTable.components = {\n  tableComponent: 'Table',\n  headComponent: 'TableHead',\n  bodyComponent: 'TableBody',\n  footerComponent: 'TableFooter',\n  containerComponent: 'Container',\n  layoutComponent: 'Layout',\n  rowComponent: 'Row',\n  cellComponent: 'Cell',\n  noDataRowComponent: 'NoDataRow',\n  noDataCellComponent: 'NoDataCell',\n  stubRowComponent: 'StubRow',\n  stubCellComponent: 'StubCell',\n  stubHeaderCellComponent: 'StubHeaderCell',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Template, Plugin,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  TABLE_SELECT_TYPE,\n  tableColumnsWithSelection,\n  isSelectTableCell,\n  isSelectAllTableCell,\n  isDataTableRow,\n} from '@devexpress/dx-grid-core';\n\nexport class TableSelection extends React.PureComponent {\n  render() {\n    const {\n      highlightRow,\n      selectByRowClick,\n      showSelectionColumn,\n      showSelectAll,\n      headerCellComponent: HeaderCell,\n      cellComponent: Cell,\n      rowComponent: Row,\n      selectionColumnWidth,\n    } = this.props;\n\n    const tableColumnsComputed = (\n      { tableColumns },\n    ) => tableColumnsWithSelection(tableColumns, selectionColumnWidth);\n\n    return (\n      <Plugin\n        name=\"TableSelection\"\n        dependencies={[\n          { name: 'Table' },\n          { name: 'SelectionState' },\n          { name: 'IntegratedSelection', optional: !showSelectAll },\n        ]}\n      >\n        {showSelectionColumn && (\n          <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        )}\n\n        {(showSelectionColumn && showSelectAll) && (\n          <Template\n            name=\"tableCell\"\n            predicate={({ tableRow, tableColumn }) => isSelectAllTableCell(tableRow, tableColumn)}\n          >\n            {params => (\n              <TemplateConnector>\n                {({ selectAllAvailable, allSelected, someSelected }, { toggleSelectAll }) => (\n                  <HeaderCell\n                    {...params}\n                    disabled={!selectAllAvailable}\n                    allSelected={allSelected}\n                    someSelected={someSelected}\n                    onToggle={select => toggleSelectAll(select)}\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </Template>\n        )}\n        {showSelectionColumn && (\n          <Template\n            name=\"tableCell\"\n            predicate={({ tableRow, tableColumn }) => isSelectTableCell(tableRow, tableColumn)}\n          >\n            {params => (\n              <TemplateConnector>\n                {({ selection }, { toggleSelection }) => (\n                  <Cell\n                    {...params}\n                    row={params.tableRow.row}\n                    selected={selection.indexOf(params.tableRow.rowId) !== -1}\n                    onToggle={() => toggleSelection({ rowIds: [params.tableRow.rowId] })}\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </Template>\n        )}\n        {(highlightRow || selectByRowClick) && (\n          <Template\n            name=\"tableRow\"\n            predicate={({ tableRow }) => isDataTableRow(tableRow)}\n          >\n            {params => (\n              <TemplateConnector>\n                {({ selection }, { toggleSelection }) => (\n                  <Row\n                    {...params}\n                    selectByRowClick={selectByRowClick}\n                    selected={highlightRow && selection.indexOf(params.tableRow.rowId) !== -1}\n                    onToggle={() => toggleSelection({ rowIds: [params.tableRow.rowId] })}\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </Template>\n        )}\n      </Plugin>\n    );\n  }\n}\n\nTableSelection.COLUMN_TYPE = TABLE_SELECT_TYPE;\n\nTableSelection.propTypes = {\n  headerCellComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  highlightRow: PropTypes.bool,\n  selectByRowClick: PropTypes.bool,\n  showSelectAll: PropTypes.bool,\n  showSelectionColumn: PropTypes.bool,\n  selectionColumnWidth: PropTypes.number.isRequired,\n};\n\nTableSelection.defaultProps = {\n  highlightRow: false,\n  selectByRowClick: false,\n  showSelectAll: false,\n  showSelectionColumn: true,\n};\n\nTableSelection.components = {\n  rowComponent: 'Row',\n  cellComponent: 'Cell',\n  headerCellComponent: 'HeaderCell',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Action, Plugin, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport { toggleDetailRowExpanded } from '@devexpress/dx-grid-core';\n\nexport class RowDetailState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expandedRowIds: props.expandedRowIds || props.defaultExpandedRowIds,\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        expandedRowIds: () => {\n          const { onExpandedRowIdsChange } = this.props;\n          return onExpandedRowIdsChange;\n        },\n      },\n    );\n\n    this.toggleDetailRowExpanded = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'expandedRowIds', toggleDetailRowExpanded);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      expandedRowIds = prevState.expandedRowIds,\n    } = nextProps;\n\n    return {\n      expandedRowIds,\n    };\n  }\n\n  render() {\n    const { expandedRowIds } = this.state;\n\n    return (\n      <Plugin\n        name=\"RowDetailState\"\n      >\n        <Getter name=\"expandedDetailRowIds\" value={expandedRowIds} />\n        <Action name=\"toggleDetailRowExpanded\" action={this.toggleDetailRowExpanded} />\n      </Plugin>\n    );\n  }\n}\n\nRowDetailState.propTypes = {\n  expandedRowIds: PropTypes.array,\n  defaultExpandedRowIds: PropTypes.array,\n  onExpandedRowIdsChange: PropTypes.func,\n};\n\nRowDetailState.defaultProps = {\n  expandedRowIds: undefined,\n  defaultExpandedRowIds: [],\n  onExpandedRowIdsChange: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Template, Plugin, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  tableRowsWithExpandedDetail,\n  tableDetailCellColSpanGetter,\n  isDetailRowExpanded,\n  tableColumnsWithDetail,\n  isDetailToggleTableCell,\n  isDetailTableRow,\n  isDetailTableCell,\n  TABLE_DETAIL_TYPE,\n} from '@devexpress/dx-grid-core';\n\nconst getCellColSpanComputed = (\n  { getTableCellColSpan },\n) => tableDetailCellColSpanGetter(getTableCellColSpan);\n\nconst pluginDependencies = [\n  { name: 'RowDetailState' },\n  { name: 'Table' },\n];\n\nexport class TableRowDetail extends React.PureComponent {\n  render() {\n    const {\n      rowHeight,\n      contentComponent: Content,\n      toggleCellComponent: ToggleCell,\n      cellComponent: Cell,\n      rowComponent: Row,\n      toggleColumnWidth,\n    } = this.props;\n\n    const tableColumnsComputed = (\n      { tableColumns },\n    ) => tableColumnsWithDetail(tableColumns, toggleColumnWidth);\n    const tableBodyRowsComputed = (\n      { tableBodyRows, expandedDetailRowIds },\n    ) => tableRowsWithExpandedDetail(tableBodyRows, expandedDetailRowIds, rowHeight);\n\n    return (\n      <Plugin\n        name=\"TableRowDetail\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Getter name=\"getTableCellColSpan\" computed={getCellColSpanComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isDetailToggleTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ expandedDetailRowIds }, { toggleDetailRowExpanded }) => (\n                <ToggleCell\n                  {...params}\n                  row={params.tableRow.row}\n                  expanded={isDetailRowExpanded(expandedDetailRowIds, params.tableRow.rowId)}\n                  onToggle={() => toggleDetailRowExpanded({ rowId: params.tableRow.rowId })}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => isDetailTableRow(tableRow)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ tableColumns }) => {\n                if (isDetailTableCell(params.tableColumn, tableColumns)) {\n                  return (\n                    <Cell\n                      {...params}\n                      row={params.tableRow.row}\n                    >\n                      <Content row={params.tableRow.row} />\n                    </Cell>\n                  );\n                }\n                return null;\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isDetailTableRow(tableRow)}\n        >\n          {params => (\n            <Row\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableRowDetail.ROW_TYPE = TABLE_DETAIL_TYPE;\nTableRowDetail.COLUMN_TYPE = TABLE_DETAIL_TYPE;\n\nTableRowDetail.propTypes = {\n  contentComponent: PropTypes.func,\n  toggleCellComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  toggleColumnWidth: PropTypes.number.isRequired,\n  rowHeight: PropTypes.number,\n};\n\nTableRowDetail.defaultProps = {\n  contentComponent: () => null,\n  rowHeight: undefined,\n};\n\nTableRowDetail.components = {\n  rowComponent: 'Row',\n  cellComponent: 'Cell',\n  toggleCellComponent: 'ToggleCell',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Template, Plugin, TemplatePlaceholder, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithGrouping,\n  tableRowsWithGrouping,\n  tableGroupCellColSpanGetter,\n  isGroupTableCell,\n  isGroupIndentTableCell,\n  isGroupTableRow,\n  TABLE_GROUP_TYPE,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'GroupingState' },\n  { name: 'Table' },\n  { name: 'DataTypeProvider', optional: true },\n];\n\nconst tableBodyRowsComputed = (\n  { tableBodyRows, isGroupRow },\n) => tableRowsWithGrouping(tableBodyRows, isGroupRow);\nconst getCellColSpanComputed = (\n  { getTableCellColSpan },\n) => tableGroupCellColSpanGetter(getTableCellColSpan);\n\nconst showColumnWhenGroupedGetter = (showColumnsWhenGrouped, columnExtensions = []) => {\n  const map = columnExtensions.reduce((acc, columnExtension) => {\n    acc[columnExtension.columnName] = columnExtension.showWhenGrouped;\n    return acc;\n  }, {});\n\n  return columnName => map[columnName] || showColumnsWhenGrouped;\n};\n\nexport class TableGroupRow extends React.PureComponent {\n  render() {\n    const {\n      cellComponent: GroupCell,\n      contentComponent: Content,\n      iconComponent: Icon,\n      rowComponent: GroupRow,\n      indentCellComponent: GroupIndentCell,\n      indentColumnWidth,\n      showColumnsWhenGrouped,\n      columnExtensions,\n    } = this.props;\n\n    const tableColumnsComputed = ({\n      columns, tableColumns, grouping, draftGrouping,\n    }) => tableColumnsWithGrouping(\n      columns,\n      tableColumns,\n      grouping,\n      draftGrouping,\n      indentColumnWidth,\n      showColumnWhenGroupedGetter(showColumnsWhenGrouped, columnExtensions),\n    );\n\n    return (\n      <Plugin\n        name=\"TableGroupRow\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Getter name=\"getTableCellColSpan\" computed={getCellColSpanComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => isGroupTableRow(tableRow)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ grouping, expandedGroups }, { toggleGroupExpanded }) => {\n                if (isGroupTableCell(params.tableRow, params.tableColumn)) {\n                  return (\n                    <TemplatePlaceholder\n                      name=\"valueFormatter\"\n                      params={{\n                        column: params.tableColumn.column,\n                        value: params.tableRow.row.value,\n                      }}\n                    >\n                      {content => (\n                        <GroupCell\n                          {...params}\n                          contentComponent={Content}\n                          iconComponent={Icon}\n                          row={params.tableRow.row}\n                          column={params.tableColumn.column}\n                          expanded={expandedGroups.indexOf(params.tableRow.row.compoundKey) !== -1}\n                          onToggle={\n                            () => toggleGroupExpanded({ groupKey: params.tableRow.row.compoundKey })\n                          }\n                        >\n                          {content}\n                        </GroupCell>\n                      )}\n                    </TemplatePlaceholder>\n                  );\n                }\n                if (isGroupIndentTableCell(params.tableRow, params.tableColumn, grouping)) {\n                  if (GroupIndentCell) {\n                    return (\n                      <GroupIndentCell\n                        {...params}\n                        row={params.tableRow.row}\n                        column={params.tableColumn.column}\n                      />\n                    );\n                  }\n                  return <TemplatePlaceholder />;\n                }\n                return null;\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isGroupTableRow(tableRow)}\n        >\n          {params => (\n            <GroupRow\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableGroupRow.ROW_TYPE = TABLE_GROUP_TYPE;\nTableGroupRow.COLUMN_TYPE = TABLE_GROUP_TYPE;\n\nTableGroupRow.propTypes = {\n  cellComponent: PropTypes.func.isRequired,\n  contentComponent: PropTypes.func.isRequired,\n  iconComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  indentCellComponent: PropTypes.func,\n  indentColumnWidth: PropTypes.number.isRequired,\n  showColumnsWhenGrouped: PropTypes.bool,\n  columnExtensions: PropTypes.array,\n};\n\nTableGroupRow.defaultProps = {\n  indentCellComponent: null,\n  showColumnsWhenGrouped: false,\n  columnExtensions: undefined,\n};\n\nTableGroupRow.components = {\n  rowComponent: 'Row',\n  cellComponent: 'Cell',\n  contentComponent: 'Content',\n  iconComponent: 'Icon',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Template, Plugin, TemplateConnector, TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  getColumnSortingDirection,\n  tableRowsWithHeading,\n  isHeadingTableCell,\n  isHeadingTableRow,\n  TABLE_DATA_TYPE,\n  TABLE_HEADING_TYPE,\n} from '@devexpress/dx-grid-core';\n\nconst tableHeaderRowsComputed = ({ tableHeaderRows }) => tableRowsWithHeading(tableHeaderRows);\n\nexport class TableHeaderRow extends React.PureComponent {\n  render() {\n    const {\n      showSortingControls,\n      showGroupingControls,\n      cellComponent: HeaderCell,\n      rowComponent: HeaderRow,\n      contentComponent: Content,\n      sortLabelComponent: SortLabel,\n      groupButtonComponent: GroupButton,\n      titleComponent: Title,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n\n    return (\n      <Plugin\n        name=\"TableHeaderRow\"\n        dependencies={[\n          { name: 'Table' },\n          { name: 'SortingState', optional: !showSortingControls },\n          { name: 'GroupingState', optional: !showGroupingControls },\n          { name: 'DragDropProvider', optional: true },\n          { name: 'TableColumnResizing', optional: true },\n        ]}\n      >\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isHeadingTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({\n                sorting, tableColumns, draggingEnabled, tableColumnResizingEnabled,\n                isColumnSortingEnabled, isColumnGroupingEnabled,\n              }, {\n                changeColumnSorting, changeColumnGrouping,\n                changeTableColumnWidth, draftTableColumnWidth, cancelTableColumnWidthDraft,\n              }) => {\n                const { name: columnName, title: columnTitle } = params.tableColumn.column;\n                const atLeastOneDataColumn = tableColumns\n                  .filter(({ type }) => type === TABLE_DATA_TYPE).length > 1;\n                const sortingEnabled = isColumnSortingEnabled\n                  && isColumnSortingEnabled(columnName);\n                const groupingEnabled = isColumnGroupingEnabled\n                  && isColumnGroupingEnabled(columnName)\n                  && atLeastOneDataColumn;\n\n                return (\n                  <HeaderCell\n                    {...params}\n                    column={params.tableColumn.column}\n                    getMessage={getMessage}\n                    draggingEnabled={draggingEnabled && atLeastOneDataColumn}\n                    resizingEnabled={tableColumnResizingEnabled}\n                    onWidthChange={({ shift }) => changeTableColumnWidth({ columnName, shift })}\n                    onWidthDraft={({ shift }) => draftTableColumnWidth({ columnName, shift })}\n                    onWidthDraftCancel={() => cancelTableColumnWidthDraft()}\n                    // @deprecated\n                    sortingEnabled={sortingEnabled}\n                    // @deprecated\n                    groupingEnabled={groupingEnabled}\n                    // @deprecated\n                    showSortingControls={showSortingControls}\n                    // @deprecated\n                    showGroupingControls={showGroupingControls}\n                    // @deprecated\n                    sortingDirection={showSortingControls && sorting !== undefined\n                      ? getColumnSortingDirection(sorting, columnName) : undefined}\n                    // @deprecated\n                    onSort={\n                      ({ direction, keepOther }) => changeColumnSorting({\n                        columnName, direction, keepOther,\n                      })}\n                    // @deprecated\n                    onGroup={() => changeColumnGrouping({ columnName })}\n                    // @deprecated\n                    before={(\n                      <TemplatePlaceholder\n                        name=\"tableHeaderCellBefore\"\n                        params={{\n                          column: params.tableColumn.column,\n                        }}\n                      />\n                    )}\n                  >\n                    <TemplatePlaceholder\n                      name=\"tableHeaderCellBefore\"\n                      params={{\n                        column: params.tableColumn.column,\n                      }}\n                    />\n                    <Content\n                      column={params.tableColumn.column}\n                      align={params.tableColumn.align}\n                    >\n                      {showSortingControls ? (\n                        <SortLabel\n                          column={params.tableColumn.column}\n                          align={params.tableColumn.align}\n                          direction={getColumnSortingDirection(sorting, columnName)}\n                          disabled={!sortingEnabled}\n                          onSort={({ direction, keepOther }) => {\n                            changeColumnSorting({ columnName, direction, keepOther });\n                          }}\n                          getMessage={getMessage}\n                        >\n                          <Title>\n                            {columnTitle || columnName}\n                          </Title>\n                        </SortLabel>\n                      ) : (\n                        <Title>\n                          {columnTitle || columnName}\n                        </Title>\n                      )}\n                    </Content>\n                    {showGroupingControls ? (\n                      <GroupButton\n                        disabled={!groupingEnabled}\n                        onGroup={() => changeColumnGrouping({ columnName })}\n                      />\n                    ) : null}\n                  </HeaderCell>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isHeadingTableRow(tableRow)}\n        >\n          {params => <HeaderRow {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableHeaderRow.ROW_TYPE = TABLE_HEADING_TYPE;\n\nTableHeaderRow.propTypes = {\n  showSortingControls: PropTypes.bool,\n  showGroupingControls: PropTypes.bool,\n  cellComponent: PropTypes.func.isRequired,\n  contentComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  titleComponent: PropTypes.func.isRequired,\n  sortLabelComponent: PropTypes.func.isRequired,\n  groupButtonComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nTableHeaderRow.defaultProps = {\n  showSortingControls: false,\n  showGroupingControls: false,\n  messages: null,\n};\n\nTableHeaderRow.components = {\n  cellComponent: 'Cell',\n  rowComponent: 'Row',\n  contentComponent: 'Content',\n  sortLabelComponent: 'SortLabel',\n  titleComponent: 'Title',\n  groupButtonComponent: 'GroupButton',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Template, Plugin,\n  TemplateConnector, TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport {\n  getBandComponent, tableHeaderColumnChainsWithBands,\n  isBandedTableRow, isBandedOrHeaderRow,\n  tableRowsWithBands, isHeadingTableCell,\n  BAND_GROUP_CELL, BAND_HEADER_CELL,\n  BAND_EMPTY_CELL, BAND_DUPLICATE_RENDER,\n  TABLE_BAND_TYPE,\n} from '@devexpress/dx-grid-core';\n\nconst CellPlaceholder = props => <TemplatePlaceholder params={props} />;\n\nexport class TableBandHeader extends React.PureComponent {\n  render() {\n    const {\n      cellComponent: Cell,\n      rowComponent: Row,\n      bandedHeaderCellComponent: HeaderCell,\n      invisibleCellComponent: InvisibleCell,\n      columnBands,\n    } = this.props;\n\n    const tableHeaderRowsComputed = ({ tableHeaderRows, tableColumns }) => tableRowsWithBands(\n      tableHeaderRows, columnBands, tableColumns,\n    );\n    const tableHeaderColumnChainsComputed = ({\n      tableHeaderRows, tableColumns,\n    }) => tableHeaderColumnChainsWithBands(\n      tableHeaderRows, tableColumns, columnBands,\n    );\n\n    return (\n      <Plugin\n        name=\"TableBandHeader\"\n        dependencies={[\n          { name: 'Table' },\n          { name: 'TableHeaderRow' },\n          { name: 'TableSelection', optional: true },\n          { name: 'TableEditColumn', optional: true },\n        ]}\n      >\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n        <Getter name=\"tableHeaderColumnChains\" computed={tableHeaderColumnChainsComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => isBandedOrHeaderRow(tableRow)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({\n                tableColumns,\n                tableHeaderRows,\n                tableHeaderColumnChains,\n              }) => {\n                const bandComponent = getBandComponent(\n                  params,\n                  tableHeaderRows, tableColumns,\n                  columnBands, tableHeaderColumnChains,\n                );\n                switch (bandComponent.type) {\n                  case BAND_DUPLICATE_RENDER:\n                    return <TemplatePlaceholder />;\n                  case BAND_EMPTY_CELL:\n                    return <InvisibleCell />;\n                  case BAND_GROUP_CELL: {\n                    const { value, ...payload } = bandComponent.payload;\n                    return (\n                      <Cell {...params} {...payload}>\n                        {value}\n                      </Cell>\n                    );\n                  }\n                  case BAND_HEADER_CELL:\n                    return (\n                      <TemplatePlaceholder\n                        name=\"tableCell\"\n                        params={{ ...params, ...bandComponent.payload }}\n                      />\n                    );\n                  default:\n                    return null;\n                }\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isHeadingTableCell(tableRow, tableColumn)}\n        >\n          {params => <HeaderCell component={CellPlaceholder} {...params} />}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isBandedTableRow(tableRow)}\n        >\n          {params => <Row {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableBandHeader.ROW_TYPE = TABLE_BAND_TYPE;\n\nTableBandHeader.propTypes = {\n  columnBands: PropTypes.array.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  bandedHeaderCellComponent: PropTypes.func.isRequired,\n  invisibleCellComponent: PropTypes.func.isRequired,\n};\n\nTableBandHeader.components = {\n  cellComponent: 'Cell',\n  rowComponent: 'Row',\n  bandedHeaderCellComponent: 'BandedHeaderCell',\n  invisibleCellComponent: 'InvisibleCell',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Template, TemplatePlaceholder, TemplateConnector, Plugin,\n} from '@devexpress/dx-react-core';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  getColumnFilterConfig,\n  tableHeaderRowsWithFilter,\n  isFilterTableCell,\n  isFilterTableRow,\n  getColumnFilterOperations,\n  isFilterValueEmpty,\n  getSelectedFilterOperation,\n  TABLE_FILTER_TYPE,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'FilteringState' },\n  { name: 'Table' },\n  { name: 'DataTypeProvider', optional: true },\n];\n\nconst defaultMessages = {\n  filterPlaceholder: 'Filter...',\n  contains: 'Contains',\n  notContains: 'Does not contain',\n  startsWith: 'Starts with',\n  endsWith: 'Ends with',\n  equal: 'Equals',\n  notEqual: 'Does not equal',\n  greaterThan: 'Greater than',\n  greaterThanOrEqual: 'Greater than or equal to',\n  lessThan: 'Less than',\n  lessThanOrEqual: 'Less than or equal to',\n};\n\nexport class TableFilterRow extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filterOperations: {},\n    };\n  }\n\n  render() {\n    const {\n      rowHeight,\n      showFilterSelector,\n      cellComponent: FilterCell,\n      rowComponent: FilterRow,\n      filterSelectorComponent: FilterSelector,\n      iconComponent,\n      toggleButtonComponent,\n      editorComponent: EditorComponent,\n      messages,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n\n    const tableHeaderRowsComputed = (\n      { tableHeaderRows },\n    ) => tableHeaderRowsWithFilter(tableHeaderRows, rowHeight);\n\n    return (\n      <Plugin\n        name=\"TableFilterRow\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isFilterTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(\n                { filters, isColumnFilteringEnabled, getAvailableFilterOperations },\n                { changeColumnFilter },\n              ) => {\n                const { filterOperations } = this.state;\n                const { name: columnName } = params.tableColumn.column;\n                const filter = getColumnFilterConfig(filters, columnName);\n                const onFilter = config => changeColumnFilter({ columnName, config });\n                const columnFilterOperations = getColumnFilterOperations(\n                  getAvailableFilterOperations, columnName,\n                );\n                const selectedFilterOperation = getSelectedFilterOperation(\n                  filterOperations, columnName, filter, columnFilterOperations,\n                );\n                const handleFilterOperationChange = (value) => {\n                  this.setState({\n                    filterOperations: {\n                      ...filterOperations,\n                      [columnName]: value,\n                    },\n                  });\n                  if (filter && !isFilterValueEmpty(filter.value)) {\n                    onFilter({ value: filter.value, operation: value });\n                  }\n                };\n                const handleFilterValueChange = value => onFilter(!isFilterValueEmpty(value)\n                  ? { value, operation: selectedFilterOperation }\n                  : null);\n                const filteringEnabled = isColumnFilteringEnabled(columnName);\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueEditor\"\n                    params={{\n                      column: params.tableColumn.column,\n                      value: filter ? filter.value : undefined,\n                      onValueChange: handleFilterValueChange,\n                    }}\n                  >\n                    {content => (\n                      <FilterCell\n                        {...params}\n                        getMessage={getMessage}\n                        column={params.tableColumn.column}\n                        filter={filter}\n                        filteringEnabled={filteringEnabled}\n                        onFilter={onFilter}\n                      >\n                        {showFilterSelector\n                          ? (\n                            <FilterSelector\n                              toggleButtonComponent={toggleButtonComponent}\n                              iconComponent={iconComponent}\n                              value={selectedFilterOperation}\n                              availableValues={columnFilterOperations}\n                              onChange={handleFilterOperationChange}\n                              disabled={!filteringEnabled}\n                              getMessage={getMessage}\n                            />\n                          ) : null\n                        }\n                        {content || (\n                          <EditorComponent\n                            value={filter ? filter.value : undefined}\n                            disabled={!filteringEnabled}\n                            getMessage={getMessage}\n                            onChange={handleFilterValueChange}\n                          />\n                        )}\n                      </FilterCell>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isFilterTableRow(tableRow)}\n        >\n          {params => <FilterRow {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableFilterRow.ROW_TYPE = TABLE_FILTER_TYPE;\n\nTableFilterRow.propTypes = {\n  rowHeight: PropTypes.any,\n  showFilterSelector: PropTypes.bool,\n  messages: PropTypes.shape({\n    filterPlaceholder: PropTypes.string,\n    contains: PropTypes.string,\n    notContains: PropTypes.string,\n    startsWith: PropTypes.string,\n    endsWith: PropTypes.string,\n    equal: PropTypes.string,\n    notEqual: PropTypes.string,\n    greaterThan: PropTypes.string,\n    greaterThanOrEqual: PropTypes.string,\n    lessThan: PropTypes.string,\n    lessThanOrEqual: PropTypes.string,\n  }),\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  filterSelectorComponent: PropTypes.func.isRequired,\n  toggleButtonComponent: PropTypes.func.isRequired,\n  iconComponent: PropTypes.func.isRequired,\n  editorComponent: PropTypes.func.isRequired,\n};\n\nTableFilterRow.defaultProps = {\n  rowHeight: undefined,\n  showFilterSelector: false,\n  messages: {},\n};\n\nTableFilterRow.components = {\n  rowComponent: 'Row',\n  cellComponent: 'Cell',\n  filterSelectorComponent: 'FilterSelector',\n  iconComponent: 'Icon',\n  editorComponent: 'Editor',\n  toggleButtonComponent: 'ToggleButton',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Template, TemplatePlaceholder, TemplateConnector, Plugin,\n} from '@devexpress/dx-react-core';\nimport {\n  getRowChange,\n  tableRowsWithEditing,\n  isEditTableRow,\n  isAddedTableRow,\n  isEditTableCell,\n  TABLE_EDIT_TYPE,\n  TABLE_ADDED_TYPE,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n  { name: 'Table' },\n  { name: 'DataTypeProvider', optional: true },\n];\n\nexport class TableEditRow extends React.PureComponent {\n  render() {\n    const {\n      cellComponent: EditCell,\n      rowComponent: EditRow,\n      rowHeight,\n    } = this.props;\n\n    const tableBodyRowsComputed = (\n      { tableBodyRows, editingRowIds, addedRows },\n    ) => tableRowsWithEditing(tableBodyRows, editingRowIds, addedRows, rowHeight);\n\n    return (\n      <Plugin\n        name=\"TableEditRow\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isEditTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({\n                getCellValue,\n                createRowChange,\n                rowChanges,\n                isColumnEditingEnabled,\n              }, {\n                changeAddedRow,\n                changeRow,\n              }) => {\n                const { rowId, row } = params.tableRow;\n                const { column } = params.tableColumn;\n                const { name: columnName } = column;\n\n                const isNew = isAddedTableRow(params.tableRow);\n                const changedRow = isNew\n                  ? row\n                  : { ...row, ...getRowChange(rowChanges, rowId) };\n\n                const value = getCellValue(changedRow, columnName);\n                const onValueChange = (newValue) => {\n                  const changeArgs = {\n                    rowId,\n                    change: createRowChange(changedRow, newValue, columnName),\n                  };\n                  if (isNew) {\n                    changeAddedRow(changeArgs);\n                  } else {\n                    changeRow(changeArgs);\n                  }\n                };\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueEditor\"\n                    params={{\n                      column,\n                      row,\n                      value,\n                      onValueChange,\n                    }}\n                  >\n                    {content => (\n                      <EditCell\n                        {...params}\n                        row={row}\n                        column={column}\n                        value={value}\n                        editingEnabled={isColumnEditingEnabled(columnName)}\n                        onValueChange={onValueChange}\n                      >\n                        {content}\n                      </EditCell>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => (isEditTableRow(tableRow) || isAddedTableRow(tableRow))}\n        >\n          {params => (\n            <EditRow\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableEditRow.ADDED_ROW_TYPE = TABLE_ADDED_TYPE;\nTableEditRow.EDIT_ROW_TYPE = TABLE_EDIT_TYPE;\n\nTableEditRow.propTypes = {\n  rowHeight: PropTypes.any,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n};\n\nTableEditRow.defaultProps = {\n  rowHeight: undefined,\n};\n\nTableEditRow.components = {\n  rowComponent: 'Row',\n  cellComponent: 'Cell',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Getter, Template, Plugin, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  TABLE_EDIT_COMMAND_TYPE,\n  tableColumnsWithEditing,\n  isHeadingEditCommandsTableCell,\n  isEditCommandsTableCell,\n  isAddedTableRow,\n  isEditTableRow,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n  { name: 'Table' },\n];\n\nconst defaultMessages = {\n  addCommand: 'New',\n  editCommand: 'Edit',\n  deleteCommand: 'Delete',\n  commitCommand: 'Save',\n  cancelCommand: 'Cancel',\n};\n\nexport class TableEditColumn extends React.PureComponent {\n  render() {\n    const {\n      cellComponent: Cell,\n      headerCellComponent: HeaderCell,\n      commandComponent: Command,\n      showAddCommand,\n      showEditCommand,\n      showDeleteCommand,\n      width,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n    const tableColumnsComputed = ({ tableColumns }) => tableColumnsWithEditing(tableColumns, width);\n\n    return (\n      <Plugin\n        name=\"TableEditColumn\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={(\n            { tableRow, tableColumn },\n          ) => isHeadingEditCommandsTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(getters, actions) => (\n                <HeaderCell {...params}>\n                  {showAddCommand && (\n                    <Command\n                      id=\"add\"\n                      text={getMessage('addCommand')}\n                      onExecute={() => actions.addRow()}\n                    />\n                  )}\n                </HeaderCell>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isEditCommandsTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(getters, actions) => {\n                const isEdit = isEditTableRow(params.tableRow);\n                const isNew = isAddedTableRow(params.tableRow);\n                const isEditing = isEdit || isNew;\n                const rowIds = [params.tableRow.rowId];\n                return (\n                  <Cell\n                    {...params}\n                    row={params.tableRow.row}\n                  >\n                    {showEditCommand && !isEditing && (\n                      <Command\n                        id=\"edit\"\n                        text={getMessage('editCommand')}\n                        onExecute={() => actions.startEditRows({ rowIds })}\n                      />\n                    )}\n                    {showDeleteCommand && !isEditing && (\n                      <Command\n                        id=\"delete\"\n                        text={getMessage('deleteCommand')}\n                        onExecute={() => {\n                          actions.deleteRows({ rowIds });\n                          actions.commitDeletedRows({ rowIds });\n                        }}\n                      />\n                    )}\n                    {isEditing && (\n                      <Command\n                        id=\"commit\"\n                        text={getMessage('commitCommand')}\n                        onExecute={() => {\n                          if (isNew) {\n                            actions.commitAddedRows({ rowIds });\n                          } else {\n                            actions.stopEditRows({ rowIds });\n                            actions.commitChangedRows({ rowIds });\n                          }\n                        }}\n                      />\n                    )}\n                    {isEditing && (\n                      <Command\n                        id=\"cancel\"\n                        text={getMessage('cancelCommand')}\n                        onExecute={() => {\n                          if (isNew) {\n                            actions.cancelAddedRows({ rowIds });\n                          } else {\n                            actions.stopEditRows({ rowIds });\n                            actions.cancelChangedRows({ rowIds });\n                          }\n                        }}\n                      />\n                    )}\n                  </Cell>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableEditColumn.COLUMN_TYPE = TABLE_EDIT_COMMAND_TYPE;\n\nTableEditColumn.propTypes = {\n  cellComponent: PropTypes.func.isRequired,\n  headerCellComponent: PropTypes.func.isRequired,\n  commandComponent: PropTypes.func.isRequired,\n  showAddCommand: PropTypes.bool,\n  showEditCommand: PropTypes.bool,\n  showDeleteCommand: PropTypes.bool,\n  width: PropTypes.number,\n  messages: PropTypes.shape({\n    addCommand: PropTypes.string,\n    editCommand: PropTypes.string,\n    deleteCommand: PropTypes.string,\n    commitCommand: PropTypes.string,\n    cancelCommand: PropTypes.string,\n  }),\n};\n\nTableEditColumn.defaultProps = {\n  showAddCommand: false,\n  showEditCommand: false,\n  showDeleteCommand: false,\n  width: 140,\n  messages: {},\n};\n\nTableEditColumn.components = {\n  cellComponent: 'Cell',\n  headerCellComponent: 'HeaderCell',\n  commandComponent: 'Command',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { memoize } from '@devexpress/dx-core';\nimport {\n  Plugin, Getter, Action, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithWidths,\n  tableColumnsWithDraftWidths,\n  changeTableColumnWidth,\n  draftTableColumnWidth,\n  cancelTableColumnWidthDraft,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'Table' },\n];\n\nexport class TableColumnResizing extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columnWidths: props.columnWidths || props.defaultColumnWidths,\n      draftColumnWidths: [],\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        columnWidths: () => {\n          const { onColumnWidthsChange } = this.props;\n          return onColumnWidthsChange;\n        },\n      },\n    );\n\n    this.tableColumnsComputed = memoize(\n      columnWidths => ({ tableColumns }) => tableColumnsWithWidths(tableColumns, columnWidths),\n    );\n    this.tableColumnsDraftComputed = memoize(\n      draftColumnWidths => (\n        { tableColumns },\n      ) => tableColumnsWithDraftWidths(tableColumns, draftColumnWidths),\n    );\n\n    this.changeTableColumnWidth = stateHelper.applyReducer.bind(\n      stateHelper, (prevState, payload) => {\n        const { minColumnWidth } = this.props;\n        return changeTableColumnWidth(\n          prevState,\n          { ...payload, minColumnWidth },\n        );\n      },\n    );\n    this.draftTableColumnWidth = stateHelper.applyReducer.bind(\n      stateHelper, (prevState, payload) => {\n        const { minColumnWidth } = this.props;\n        return draftTableColumnWidth(\n          prevState,\n          { ...payload, minColumnWidth },\n        );\n      },\n    );\n    this.cancelTableColumnWidthDraft = stateHelper.applyReducer.bind(\n      stateHelper, cancelTableColumnWidthDraft,\n    );\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      columnWidths = prevState.columnWidths,\n    } = nextProps;\n\n    return {\n      columnWidths,\n    };\n  }\n\n  render() {\n    const { columnWidths, draftColumnWidths } = this.state;\n\n    const tableColumnsComputed = this.tableColumnsComputed(columnWidths);\n    const tableColumnsDraftComputed = this.tableColumnsDraftComputed(draftColumnWidths);\n\n    return (\n      <Plugin\n        name=\"TableColumnResizing\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumnResizingEnabled\" value />\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Getter name=\"tableColumns\" computed={tableColumnsDraftComputed} />\n        <Action name=\"changeTableColumnWidth\" action={this.changeTableColumnWidth} />\n        <Action name=\"draftTableColumnWidth\" action={this.draftTableColumnWidth} />\n        <Action name=\"cancelTableColumnWidthDraft\" action={this.cancelTableColumnWidthDraft} />\n      </Plugin>\n    );\n  }\n}\n\nTableColumnResizing.propTypes = {\n  defaultColumnWidths: PropTypes.array,\n  columnWidths: PropTypes.array,\n  onColumnWidthsChange: PropTypes.func,\n  minColumnWidth: PropTypes.number.isRequired,\n};\n\nTableColumnResizing.defaultProps = {\n  defaultColumnWidths: [],\n  columnWidths: undefined,\n  onColumnWidthsChange: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Template, TemplatePlaceholder, Plugin,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport { pageCount } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'PagingState' },\n];\n\nconst defaultMessages = {\n  showAll: 'All',\n  info: ({ from, to, count }) => `${from}${from < to ? `-${to}` : ''} of ${count}`,\n};\n\nexport class PagingPanel extends React.PureComponent {\n  render() {\n    const {\n      containerComponent: Pager,\n      pageSizes,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n\n    return (\n      <Plugin\n        name=\"PagingPanel\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"footer\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ currentPage, pageSize, totalCount }, { setCurrentPage, setPageSize }) => (\n              <Pager\n                currentPage={currentPage}\n                pageSize={pageSize}\n                totalCount={totalCount}\n                totalPages={pageCount(totalCount, pageSize)}\n                pageSizes={pageSizes}\n                getMessage={getMessage}\n                onCurrentPageChange={setCurrentPage}\n                onPageSizeChange={setPageSize}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nPagingPanel.propTypes = {\n  pageSizes: PropTypes.arrayOf(PropTypes.number),\n  containerComponent: PropTypes.func.isRequired,\n  messages: PropTypes.shape({\n    showAll: PropTypes.string,\n    info: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]),\n  }),\n};\n\nPagingPanel.defaultProps = {\n  pageSizes: [],\n  messages: {},\n};\n\nPagingPanel.components = {\n  containerComponent: 'Container',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { DragSource } from '@devexpress/dx-react-core';\n\nexport class ItemLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dragging: false,\n    };\n  }\n\n  render() {\n    const {\n      item,\n      itemComponent: Item,\n      draggingEnabled,\n      onDragStart,\n      onDragEnd,\n    } = this.props;\n    const { dragging } = this.state;\n\n    const itemElement = <Item item={{ ...item, draft: dragging || item.draft }} />;\n\n    return (draggingEnabled ? (\n      <DragSource\n        payload={[{ type: 'column', columnName: item.column.name }]}\n        onStart={() => {\n          this.setState({ dragging: true });\n          onDragStart();\n        }}\n        onEnd={() => {\n          this.setState({ dragging: false });\n          onDragEnd();\n        }}\n      >\n        {itemElement}\n      </DragSource>\n    ) : (\n      itemElement\n    ));\n  }\n}\n\nItemLayout.propTypes = {\n  item: PropTypes.shape({\n    column: PropTypes.object,\n    draft: PropTypes.bool,\n  }).isRequired,\n  itemComponent: PropTypes.func.isRequired,\n  draggingEnabled: PropTypes.bool,\n  onDragStart: PropTypes.func,\n  onDragEnd: PropTypes.func,\n};\n\nItemLayout.defaultProps = {\n  draggingEnabled: false,\n  onDragStart: () => {},\n  onDragEnd: () => {},\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport { DropTarget } from '@devexpress/dx-react-core';\nimport { getGroupCellTargetIndex } from '@devexpress/dx-grid-core';\nimport { ItemLayout } from './group-panel-layout/item-layout';\n\nexport class GroupPanelLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sourceColumnName: null,\n      targetItemIndex: -1,\n    };\n    this.handleDragEvent = (eventHandler, { payload, ...restArgs }) => {\n      const { isColumnGroupingEnabled } = this.props;\n      const { columnName } = payload[0];\n\n      if (isColumnGroupingEnabled(columnName)) {\n        eventHandler({ payload, ...restArgs });\n      }\n    };\n    this.onEnter = ({ payload }) => {\n      this.setState({\n        sourceColumnName: payload[0].columnName,\n      });\n    };\n    this.onOver = ({ clientOffset }) => {\n      const { onGroupDraft, items } = this.props;\n      const { sourceColumnName, targetItemIndex: prevTargetItemIndex } = this.state;\n      // eslint-disable-next-line react/no-find-dom-node\n      const itemGeometries = this.itemRefs.map(ref => findDOMNode(ref).getBoundingClientRect());\n      const sourceItemIndex = items.findIndex(({ column }) => column.name === sourceColumnName);\n      const targetItemIndex = getGroupCellTargetIndex(\n        itemGeometries,\n        sourceItemIndex,\n        clientOffset,\n      );\n\n      if (prevTargetItemIndex === targetItemIndex) return;\n\n      onGroupDraft({\n        columnName: sourceColumnName,\n        groupIndex: targetItemIndex,\n      });\n      this.setState({ targetItemIndex });\n    };\n    this.onLeave = () => {\n      const { onGroupDraft } = this.props;\n      const { sourceColumnName } = this.state;\n      if (!this.draggingColumnName) {\n        this.resetState();\n        return;\n      }\n      onGroupDraft({\n        columnName: sourceColumnName,\n        groupIndex: -1,\n      });\n      this.setState({\n        targetItemIndex: -1,\n      });\n    };\n    this.onDrop = () => {\n      const { onGroup } = this.props;\n      const { sourceColumnName, targetItemIndex } = this.state;\n      this.resetState();\n      onGroup({\n        columnName: sourceColumnName,\n        groupIndex: targetItemIndex,\n      });\n    };\n    this.onDragStart = (columnName) => {\n      this.draggingColumnName = columnName;\n    };\n    this.onDragEnd = () => {\n      this.draggingColumnName = null;\n      const { sourceColumnName, targetItemIndex } = this.state;\n      const { onGroup } = this.props;\n      if (sourceColumnName && targetItemIndex === -1) {\n        onGroup({\n          columnName: sourceColumnName,\n        });\n      }\n      this.resetState();\n    };\n  }\n\n  resetState() {\n    const { onGroupDraftCancel } = this.props;\n    onGroupDraftCancel();\n    this.setState({\n      sourceColumnName: null,\n      targetItemIndex: -1,\n    });\n  }\n\n  render() {\n    const {\n      items,\n      emptyMessageComponent: EmptyMessage,\n      containerComponent: Container,\n      itemComponent: Item,\n      draggingEnabled,\n      isColumnGroupingEnabled,\n    } = this.props;\n\n    this.itemRefs = [];\n\n    const groupPanel = (items.length ? (\n      <Container>\n        {items.map((item) => {\n          const { name: columnName } = item.column;\n          return (\n            <ItemLayout\n              key={columnName}\n              ref={element => element && this.itemRefs.push(element)}\n              item={item}\n              itemComponent={Item}\n              draggingEnabled={draggingEnabled && isColumnGroupingEnabled(columnName)}\n              onDragStart={() => this.onDragStart(columnName)}\n              onDragEnd={this.onDragEnd}\n            />\n          );\n        })}\n      </Container>\n    ) : (\n      <EmptyMessage />\n    ));\n\n    return draggingEnabled\n      ? (\n        <DropTarget\n          onEnter={args => this.handleDragEvent(this.onEnter, args)}\n          onOver={args => this.handleDragEvent(this.onOver, args)}\n          onLeave={args => this.handleDragEvent(this.onLeave, args)}\n          onDrop={args => this.handleDragEvent(this.onDrop, args)}\n        >\n          {groupPanel}\n        </DropTarget>\n      )\n      : groupPanel;\n  }\n}\n\nGroupPanelLayout.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    column: PropTypes.object,\n    draft: PropTypes.bool,\n  })).isRequired,\n  onGroup: PropTypes.func,\n  itemComponent: PropTypes.func.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  emptyMessageComponent: PropTypes.func.isRequired,\n  draggingEnabled: PropTypes.bool,\n  isColumnGroupingEnabled: PropTypes.func,\n  onGroupDraft: PropTypes.func,\n  onGroupDraftCancel: PropTypes.func,\n};\n\nGroupPanelLayout.defaultProps = {\n  onGroup: () => {},\n  draggingEnabled: false,\n  isColumnGroupingEnabled: () => {},\n  onGroupDraft: () => {},\n  onGroupDraftCancel: () => {},\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Template, TemplatePlaceholder, Plugin, TemplateConnector, withComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  groupingPanelItems,\n  getColumnSortingDirection,\n} from '@devexpress/dx-grid-core';\nimport { GroupPanelLayout as Layout } from '../components/group-panel-layout';\n\nconst defaultMessages = {\n  groupByColumn: 'Drag a column header here to group by that column',\n};\n\nclass GroupingPanelRaw extends React.PureComponent {\n  render() {\n    const {\n      layoutComponent: LayoutComponent,\n      containerComponent: Container,\n      itemComponent: Item,\n      emptyMessageComponent: EmptyMessage,\n      showSortingControls,\n      showGroupingControls,\n      messages,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n\n    const EmptyMessagePlaceholder = () => (\n      <EmptyMessage\n        getMessage={getMessage}\n      />\n    );\n\n    const ItemPlaceholder = ({ item }) => {\n      const { name: columnName } = item.column;\n\n      return (\n        <TemplateConnector>\n          {(\n            { sorting, isColumnSortingEnabled, isColumnGroupingEnabled },\n            { changeColumnGrouping, changeColumnSorting },\n          ) => {\n            const sortingEnabled = isColumnSortingEnabled && isColumnSortingEnabled(columnName);\n            const groupingEnabled = isColumnGroupingEnabled && isColumnGroupingEnabled(columnName);\n\n            return (\n              <Item\n                item={item}\n                sortingEnabled={sortingEnabled}\n                groupingEnabled={groupingEnabled}\n                showSortingControls={showSortingControls}\n                sortingDirection={showSortingControls\n                  ? getColumnSortingDirection(sorting, columnName) : undefined}\n                showGroupingControls={showGroupingControls}\n                onGroup={() => changeColumnGrouping({ columnName })}\n                onSort={(\n                  { direction, keepOther },\n                ) => changeColumnSorting({ columnName, direction, keepOther })}\n              />\n            );\n          }}\n        </TemplateConnector>\n      );\n    };\n\n    return (\n      <Plugin\n        name=\"GroupingPanel\"\n        dependencies={[\n          { name: 'GroupingState' },\n          { name: 'Toolbar' },\n          { name: 'SortingState', optional: !showSortingControls },\n        ]}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplateConnector>\n            {({\n              columns, grouping, draftGrouping, draggingEnabled, isColumnGroupingEnabled,\n            }, {\n              changeColumnGrouping, draftColumnGrouping, cancelColumnGroupingDraft,\n            }) => (\n              <LayoutComponent\n                items={groupingPanelItems(columns, grouping, draftGrouping)}\n                isColumnGroupingEnabled={isColumnGroupingEnabled}\n                draggingEnabled={draggingEnabled}\n                onGroup={changeColumnGrouping}\n                onGroupDraft={draftColumnGrouping}\n                onGroupDraftCancel={cancelColumnGroupingDraft}\n                itemComponent={ItemPlaceholder}\n                emptyMessageComponent={EmptyMessagePlaceholder}\n                containerComponent={Container}\n              />\n            )}\n          </TemplateConnector>\n          <TemplatePlaceholder />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nGroupingPanelRaw.propTypes = {\n  showSortingControls: PropTypes.bool,\n  showGroupingControls: PropTypes.bool,\n  layoutComponent: PropTypes.func.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  itemComponent: PropTypes.func.isRequired,\n  emptyMessageComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nGroupingPanelRaw.defaultProps = {\n  showSortingControls: false,\n  showGroupingControls: false,\n  messages: {},\n};\n\nGroupingPanelRaw.components = {\n  layoutComponent: 'Layout',\n  containerComponent: 'Container',\n  itemComponent: 'Item',\n  emptyMessageComponent: 'EmptyMessage',\n};\n\nexport const GroupingPanel = withComponents({ Layout })(GroupingPanelRaw);\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Plugin, Template, Getter } from '@devexpress/dx-react-core';\nimport { getAvailableFilterOperationsGetter } from '@devexpress/dx-grid-core';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class DataTypeProvider extends React.PureComponent {\n  render() {\n    const {\n      for: columnNames,\n      formatterComponent: Formatter,\n      editorComponent: Editor,\n      availableFilterOperations,\n    } = this.props;\n\n    const getAvailableFilterOperationsComputed = (\n      { getAvailableFilterOperations },\n    ) => getAvailableFilterOperationsGetter(\n      getAvailableFilterOperations,\n      availableFilterOperations,\n      columnNames,\n    );\n\n    return (\n      <Plugin name=\"DataTypeProvider\">\n        <Getter name=\"getAvailableFilterOperations\" computed={getAvailableFilterOperationsComputed} />\n        {Formatter\n          ? (\n            <Template\n              name=\"valueFormatter\"\n              predicate={({ column }) => columnNames.includes(column.name)}\n            >\n              {params => <Formatter {...params} />}\n            </Template>\n          )\n          : null\n        }\n        {Editor\n          ? (\n            <Template\n              name=\"valueEditor\"\n              predicate={({ column }) => columnNames.includes(column.name)}\n            >\n              {params => <Editor {...params} />}\n            </Template>\n          )\n          : null\n        }\n      </Plugin>\n    );\n  }\n}\n\nDataTypeProvider.propTypes = {\n  for: PropTypes.arrayOf(PropTypes.string).isRequired,\n  formatterComponent: PropTypes.func,\n  editorComponent: PropTypes.func,\n  availableFilterOperations: PropTypes.arrayOf(PropTypes.string),\n};\n\nDataTypeProvider.defaultProps = {\n  formatterComponent: undefined,\n  editorComponent: undefined,\n  availableFilterOperations: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Action,\n  Getter,\n  Plugin,\n  Template,\n  TemplateConnector,\n  TemplatePlaceholder,\n  createStateHelper,\n} from '@devexpress/dx-react-core';\nimport {\n  toggleColumn,\n  visibleTableColumns,\n  tableDataColumnsExist,\n  getColumnExtensionValueGetter,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'Table' },\n];\n\nconst defaultMessages = {\n  noColumns: 'Nothing to show',\n};\n\nconst visibleTableColumnsComputed = (\n  { tableColumns, hiddenColumnNames },\n) => visibleTableColumns(tableColumns, hiddenColumnNames);\n\nconst columnExtensionValueGetter = (columnExtensions, defaultValue) => getColumnExtensionValueGetter(columnExtensions, 'togglingEnabled', defaultValue);\n\nexport class TableColumnVisibility extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hiddenColumnNames: props.hiddenColumnNames || props.defaultHiddenColumnNames,\n    };\n    const stateHelper = createStateHelper(\n      this,\n      {\n        hiddenColumnNames: () => {\n          const { onHiddenColumnNamesChange } = this.props;\n          return onHiddenColumnNamesChange;\n        },\n      },\n    );\n\n    this.toggleColumnVisibility = stateHelper.applyFieldReducer.bind(stateHelper, 'hiddenColumnNames', toggleColumn);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      hiddenColumnNames = prevState.hiddenColumnNames,\n    } = nextProps;\n\n    return {\n      hiddenColumnNames,\n    };\n  }\n\n  render() {\n    const {\n      emptyMessageComponent: EmptyMessage,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n    const { hiddenColumnNames } = this.state;\n    const { columnExtensions, columnTogglingEnabled } = this.props;\n\n    return (\n      <Plugin\n        name=\"TableColumnVisibility\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"hiddenColumnNames\" value={hiddenColumnNames} />\n        <Getter name=\"tableColumns\" computed={visibleTableColumnsComputed} />\n        <Getter\n          name=\"isColumnTogglingEnabled\"\n          value={columnExtensionValueGetter(columnExtensions, columnTogglingEnabled)}\n        />\n        <Action\n          name=\"toggleColumnVisibility\"\n          action={this.toggleColumnVisibility}\n        />\n\n        <Template name=\"table\">\n          {params => (\n            <TemplateConnector>\n              {({ tableColumns }) => (tableDataColumnsExist(tableColumns)\n                ? <TemplatePlaceholder />\n                : (\n                  <EmptyMessage\n                    getMessage={getMessage}\n                    {...params}\n                  />\n                )\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableColumnVisibility.propTypes = {\n  hiddenColumnNames: PropTypes.arrayOf(PropTypes.string),\n  defaultHiddenColumnNames: PropTypes.arrayOf(PropTypes.string),\n  emptyMessageComponent: PropTypes.func.isRequired,\n  onHiddenColumnNamesChange: PropTypes.func,\n  messages: PropTypes.object,\n  columnExtensions: PropTypes.array,\n  columnTogglingEnabled: PropTypes.bool,\n};\n\nTableColumnVisibility.defaultProps = {\n  hiddenColumnNames: undefined,\n  defaultHiddenColumnNames: [],\n  onHiddenColumnNamesChange: undefined,\n  messages: {},\n  columnExtensions: undefined,\n  columnTogglingEnabled: true,\n};\n\nTableColumnVisibility.components = {\n  emptyMessageComponent: 'EmptyMessage',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport {\n  Template,\n  Plugin,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\n\nexport class Toolbar extends React.PureComponent {\n  render() {\n    const {\n      rootComponent: Root,\n      flexibleSpaceComponent: FlexibleSpaceComponent,\n    } = this.props;\n    return (\n      <Plugin\n        name=\"Toolbar\"\n      >\n        <Template name=\"header\">\n          <Root>\n            <TemplatePlaceholder name=\"toolbarContent\" />\n          </Root>\n          <TemplatePlaceholder />\n        </Template>\n        <Template name=\"toolbarContent\">\n          <FlexibleSpaceComponent />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nToolbar.propTypes = {\n  rootComponent: PropTypes.func.isRequired,\n  flexibleSpaceComponent: PropTypes.func.isRequired,\n};\n\nToolbar.components = {\n  rootComponent: 'Root',\n  flexibleSpaceComponent: 'FlexibleSpace',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Action, Plugin, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport { toggleRowExpanded } from '@devexpress/dx-grid-core';\n\nexport class TreeDataState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expandedRowIds: props.expandedRowIds || props.defaultExpandedRowIds,\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        expandedRowIds: () => {\n          const { onExpandedRowIdsChange } = this.props;\n          return onExpandedRowIdsChange;\n        },\n      },\n    );\n\n    this.toggleRowExpanded = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'expandedRowIds', toggleRowExpanded);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      expandedRowIds = prevState.expandedRowIds,\n    } = nextProps;\n\n    return {\n      expandedRowIds,\n    };\n  }\n\n  render() {\n    const { expandedRowIds } = this.state;\n\n    return (\n      <Plugin\n        name=\"TreeDataState\"\n      >\n        <Getter name=\"expandedRowIds\" value={expandedRowIds} />\n        {' '}\n        {/* collision =( */}\n        <Action name=\"toggleRowExpanded\" action={this.toggleRowExpanded} />\n      </Plugin>\n    );\n  }\n}\n\nTreeDataState.propTypes = {\n  expandedRowIds: PropTypes.array,\n  defaultExpandedRowIds: PropTypes.array,\n  onExpandedRowIdsChange: PropTypes.func,\n};\n\nTreeDataState.defaultProps = {\n  expandedRowIds: undefined,\n  defaultExpandedRowIds: [],\n  onExpandedRowIdsChange: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport {\n  customTreeRowLevelKeyGetter,\n  customTreeRowIdGetter,\n  customTreeRowsWithMeta,\n  expandedTreeRows,\n  collapsedTreeRowsGetter,\n  isTreeRowLeafGetter,\n  getTreeRowLevelGetter,\n  unwrappedCustomTreeRows,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'TreeDataState' },\n];\n\nconst expandedTreeRowsComputed = (\n  { rows, getRowId, expandedRowIds },\n) => expandedTreeRows(rows, getRowId, expandedRowIds);\nconst getRowIdComputed = (\n  { getRowId, rows },\n) => customTreeRowIdGetter(getRowId, rows);\nconst getRowLevelKeyComputed = (\n  { getRowLevelKey, rows },\n) => customTreeRowLevelKeyGetter(getRowLevelKey, rows);\nconst isTreeRowLeafComputed = ({ rows }) => isTreeRowLeafGetter(rows);\nconst getTreeRowLevelComputed = ({ rows }) => getTreeRowLevelGetter(rows);\nconst collapsedTreeRowsGetterComputed = (\n  { rows, getCollapsedRows },\n) => collapsedTreeRowsGetter(getCollapsedRows, rows);\nconst unwrappedTreeRowsComputed = ({ rows }) => unwrappedCustomTreeRows(rows);\n\nexport class CustomTreeData extends React.PureComponent {\n  render() {\n    const {\n      getChildRows,\n    } = this.props;\n    const treeRowsComputed = ({ rows }) => customTreeRowsWithMeta(rows, getChildRows);\n\n    return (\n      <Plugin\n        name=\"CustomTreeData\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={treeRowsComputed} />\n        <Getter name=\"getRowId\" computed={getRowIdComputed} />\n        <Getter name=\"getRowLevelKey\" computed={getRowLevelKeyComputed} />\n        <Getter name=\"isTreeRowLeaf\" computed={isTreeRowLeafComputed} />\n        <Getter name=\"getTreeRowLevel\" computed={getTreeRowLevelComputed} />\n        <Getter name=\"rows\" computed={expandedTreeRowsComputed} />\n        <Getter name=\"getCollapsedRows\" computed={collapsedTreeRowsGetterComputed} />\n        <Getter name=\"rows\" computed={unwrappedTreeRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nCustomTreeData.propTypes = {\n  getChildRows: PropTypes.func.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Template, Getter, Plugin, TemplateConnector, TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport { isTreeTableCell } from '@devexpress/dx-grid-core';\n\nexport class TableTreeColumn extends React.PureComponent {\n  render() {\n    const {\n      for: forColumnName,\n      showSelectionControls,\n      showSelectAll,\n      indentComponent: Indent,\n      expandButtonComponent: ExpandButton,\n      checkboxComponent: Checkbox,\n      contentComponent: Content,\n      cellComponent: Cell,\n    } = this.props;\n    return (\n      <Plugin\n        name=\"TableTreeColumn\"\n        dependencies={[\n          { name: 'DataTypeProvider', optional: true },\n          { name: 'TreeDataState' },\n          { name: 'SelectionState', optional: !showSelectionControls },\n          { name: 'IntegratedSelection', optional: !showSelectAll },\n          { name: 'Table' },\n          { name: 'TableHeaderRow', optional: true },\n        ]}\n      >\n        <Getter name=\"tableTreeColumnName\" value={forColumnName} />\n        <Template\n          name=\"tableHeaderCellBefore\"\n          predicate={({ column }) => column.name === forColumnName}\n        >\n          <ExpandButton\n            visible={false}\n          />\n          {showSelectionControls && showSelectAll && (\n            <TemplateConnector>\n              {({ selectAllAvailable, allSelected, someSelected }, { toggleSelectAll }) => (\n                <Checkbox\n                  disabled={!selectAllAvailable}\n                  checked={allSelected}\n                  indeterminate={someSelected}\n                  onChange={toggleSelectAll}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={(\n            { tableRow, tableColumn },\n          ) => isTreeTableCell(tableRow, tableColumn, forColumnName)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({\n                getCollapsedRows, expandedRowIds, selection, isTreeRowLeaf, getTreeRowLevel,\n                getCellValue,\n              }, {\n                toggleRowExpanded, toggleSelection,\n              }) => {\n                const { row, rowId } = params.tableRow;\n                const columnName = params.tableColumn.column.name;\n                const value = getCellValue(row, columnName);\n                const collapsedRows = getCollapsedRows(row);\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueFormatter\"\n                    params={{\n                      row,\n                      column: params.tableColumn.column,\n                      value,\n                    }}\n                  >\n                    {content => (\n                      <Cell\n                        {...params}\n                        row={row}\n                        column={params.tableColumn.column}\n                        value={value}\n                      >\n                        <Indent\n                          level={getTreeRowLevel(row)}\n                        />\n                        <ExpandButton\n                          visible={collapsedRows ? !!collapsedRows.length : !isTreeRowLeaf(row)}\n                          expanded={expandedRowIds.indexOf(rowId) > -1}\n                          onToggle={() => toggleRowExpanded({ rowId })}\n                        />\n                        {showSelectionControls && (\n                          <Checkbox\n                            disabled={false}\n                            checked={selection.indexOf(rowId) > -1}\n                            indeterminate={false}\n                            onChange={() => toggleSelection({ rowIds: [rowId] })}\n                          />\n                        )}\n                        <Content>\n                          {content || value}\n                        </Content>\n                      </Cell>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableTreeColumn.propTypes = {\n  for: PropTypes.string.isRequired,\n  showSelectionControls: PropTypes.bool,\n  showSelectAll: PropTypes.bool,\n  cellComponent: PropTypes.func.isRequired,\n  indentComponent: PropTypes.func.isRequired,\n  expandButtonComponent: PropTypes.func.isRequired,\n  checkboxComponent: PropTypes.func.isRequired,\n  contentComponent: PropTypes.func.isRequired,\n};\n\nTableTreeColumn.defaultProps = {\n  showSelectionControls: false,\n  showSelectAll: false,\n};\n\nTableTreeColumn.components = {\n  cellComponent: 'Cell',\n  contentComponent: 'Content',\n  indentComponent: 'Indent',\n  expandButtonComponent: 'ExpandButton',\n  checkboxComponent: 'Checkbox',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Action, Plugin, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport { changeSearchValue, searchFilterExpression } from '@devexpress/dx-grid-core';\n\nexport class SearchState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: props.value || props.defaultValue,\n    };\n    const stateHelper = createStateHelper(this, {\n      value: () => {\n        const { onValueChange } = this.props;\n        return onValueChange;\n      },\n    });\n\n    this.changeValue = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'value', changeSearchValue);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      value = prevState.value,\n    } = nextProps;\n\n    return {\n      value,\n    };\n  }\n\n  render() {\n    const { value } = this.state;\n    const filterExpressionComputed = (\n      { filterExpression, columns },\n    ) => searchFilterExpression(value, columns, filterExpression);\n\n    return (\n      <Plugin\n        name=\"SearchState\"\n      >\n        <Getter name=\"filterExpression\" computed={filterExpressionComputed} />\n        <Getter name=\"searchValue\" value={value} />\n        <Action name=\"changeSearchValue\" action={this.changeValue} />\n      </Plugin>\n    );\n  }\n}\n\nSearchState.propTypes = {\n  value: PropTypes.string,\n  defaultValue: PropTypes.string,\n  onValueChange: PropTypes.func,\n};\n\nSearchState.defaultProps = {\n  value: undefined,\n  defaultValue: '',\n  onValueChange: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Template,\n  TemplatePlaceholder,\n  Plugin,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\n\nconst pluginDependencies = [\n  { name: 'Toolbar' },\n  { name: 'SearchState' },\n];\n\nconst defaultMessages = {\n  searchPlaceholder: 'Search...',\n};\n\nexport class SearchPanel extends React.PureComponent {\n  render() {\n    const { inputComponent: Input, messages } = this.props;\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n\n    return (\n      <Plugin\n        name=\"SearchPanel\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ searchValue }, { changeSearchValue }) => (\n              <Input\n                value={searchValue}\n                onValueChange={changeSearchValue}\n                getMessage={getMessage}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nSearchPanel.propTypes = {\n  inputComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nSearchPanel.defaultProps = {\n  messages: {},\n};\n\nSearchPanel.components = {\n  inputComponent: 'Input',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter,\n  Template,\n  Plugin,\n  TemplatePlaceholder,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  isFixedTableRow,\n  tableColumnsWithFixed,\n  tableHeaderRowsWithFixed,\n  tableHeaderColumnChainsWithFixed,\n  calculateFixedColumnProps,\n} from '@devexpress/dx-grid-core';\n\nconst tableHeaderRowsComputed = ({ tableHeaderRows }) => tableHeaderRowsWithFixed(tableHeaderRows);\nconst tableHeaderColumnChainsComputed = ({\n  tableColumns, tableHeaderRows, tableHeaderColumnChains,\n}) => tableHeaderColumnChainsWithFixed(tableHeaderColumnChains, tableHeaderRows, tableColumns);\n\nconst CellPlaceholder = props => <TemplatePlaceholder params={props} />;\n\nconst pluginDependencies = [\n  { name: 'Table' },\n  { name: 'TableBandHeader', optional: true },\n  { name: 'TableColumnReordering', optional: true },\n  { name: 'TableEditColumn', optional: true },\n  { name: 'TableEditRow', optional: true },\n  { name: 'TableFilterRow', optional: true },\n  { name: 'TableHeaderRow', optional: true },\n  { name: 'TableSelection', optional: true },\n  { name: 'TableSummaryRow', optional: true },\n  { name: 'TableTreeColumn', optional: true },\n];\n\nexport class TableFixedColumns extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tableColumnDimensions: {},\n    };\n  }\n\n  handleListenerSizeChange(key, width) {\n    this.setState(state => ({\n      tableColumnDimensions: {\n        ...state.tableColumnDimensions,\n        [key]: width,\n      },\n    }));\n  }\n\n  render() {\n    const {\n      leftColumns,\n      rightColumns,\n      cellComponent: Cell,\n      listenerRowComponent: ListenerRow,\n      listenerCellComponent: ListenerCell,\n    } = this.props;\n\n    const tableColumnsComputed = ({ tableColumns }) => tableColumnsWithFixed(\n      tableColumns,\n      leftColumns,\n      rightColumns,\n    );\n\n    return (\n      <Plugin\n        name=\"TableFixedColumns\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Getter name=\"tableHeaderColumnChains\" computed={tableHeaderColumnChainsComputed} />\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableColumn }) => !!tableColumn.fixed}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ tableColumns, tableHeaderColumnChains }) => {\n                const { tableColumnDimensions } = this.state;\n                const fixedColumnProps = calculateFixedColumnProps(\n                  params,\n                  { leftColumns, rightColumns },\n                  tableColumns,\n                  tableColumnDimensions,\n                  tableHeaderColumnChains,\n                );\n\n                return (\n                  <Cell\n                    {...params}\n                    {...fixedColumnProps}\n                    component={CellPlaceholder}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isFixedTableRow(tableRow)}\n        >\n          {params => (\n            <ListenerRow {...params} />\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => isFixedTableRow(tableRow)}\n        >\n          {params => (\n            <ListenerCell\n              {...params}\n              listen={!!params.tableColumn.fixed}\n              onSizeChange={({\n                width,\n              }) => this.handleListenerSizeChange(params.tableColumn.key, width)}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableFixedColumns.propTypes = {\n  leftColumns: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.symbol])),\n  rightColumns: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.symbol])),\n  cellComponent: PropTypes.func.isRequired,\n  listenerRowComponent: PropTypes.func.isRequired,\n  listenerCellComponent: PropTypes.func.isRequired,\n};\n\nTableFixedColumns.defaultProps = {\n  leftColumns: [],\n  rightColumns: [],\n};\n\nTableFixedColumns.components = {\n  cellComponent: 'Cell',\n  listenerRowComponent: 'ListenerRow',\n  listenerCellComponent: 'ListenerCell',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\n\nexport class SummaryState extends React.PureComponent {\n  render() {\n    const { totalItems, groupItems, treeItems } = this.props;\n\n    return (\n      <Plugin\n        name=\"SummaryState\"\n      >\n        <Getter name=\"totalSummaryItems\" value={totalItems} />\n        <Getter name=\"groupSummaryItems\" value={groupItems} />\n        <Getter name=\"treeSummaryItems\" value={treeItems} />\n      </Plugin>\n    );\n  }\n}\n\nSummaryState.propTypes = {\n  totalItems: PropTypes.array,\n  groupItems: PropTypes.array,\n  treeItems: PropTypes.array,\n};\n\nSummaryState.defaultProps = {\n  totalItems: undefined,\n  groupItems: undefined,\n  treeItems: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport {\n  defaultSummaryCalculator,\n  totalSummaryValues,\n  groupSummaryValues,\n  treeSummaryValues,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'SummaryState' },\n];\n\nexport class IntegratedSummary extends React.PureComponent {\n  render() {\n    const { calculator } = this.props;\n\n    const totalSummaryValuesComputed = ({\n      rows,\n      totalSummaryItems,\n      getCellValue,\n      getRowLevelKey,\n      isGroupRow,\n      getCollapsedRows,\n    }) => totalSummaryValues(\n      rows,\n      totalSummaryItems,\n      getCellValue,\n      getRowLevelKey,\n      isGroupRow,\n      getCollapsedRows,\n      calculator,\n    );\n\n    const groupSummaryValuesComputed = ({\n      rows,\n      groupSummaryItems,\n      getCellValue,\n      getRowLevelKey,\n      isGroupRow,\n    }) => groupSummaryValues(\n      rows,\n      groupSummaryItems,\n      getCellValue,\n      getRowLevelKey,\n      isGroupRow,\n      calculator,\n    );\n\n    const treeSummaryValuesComputed = ({\n      rows,\n      treeSummaryItems,\n      getCellValue,\n      getRowLevelKey,\n      isGroupRow,\n      getRowId,\n    }) => treeSummaryValues(\n      rows,\n      treeSummaryItems,\n      getCellValue,\n      getRowLevelKey,\n      isGroupRow,\n      getRowId,\n      calculator,\n    );\n\n    return (\n      <Plugin\n        name=\"IntegratedSummary\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"totalSummaryValues\" computed={totalSummaryValuesComputed} />\n        <Getter name=\"groupSummaryValues\" computed={groupSummaryValuesComputed} />\n        <Getter name=\"treeSummaryValues\" computed={treeSummaryValuesComputed} />\n      </Plugin>\n    );\n  }\n}\n\nIntegratedSummary.defaultCalculator = defaultSummaryCalculator;\n\nIntegratedSummary.propTypes = {\n  calculator: PropTypes.func,\n};\n\nIntegratedSummary.defaultProps = {\n  calculator: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\n\nconst pluginDependencies = [\n  { name: 'SummaryState' },\n];\n\nexport class CustomSummary extends React.PureComponent {\n  render() {\n    const { totalValues, groupValues, treeValues } = this.props;\n\n    return (\n      <Plugin\n        name=\"CustomSummary\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"totalSummaryValues\" value={totalValues} />\n        <Getter name=\"groupSummaryValues\" value={groupValues} />\n        <Getter name=\"treeSummaryValues\" value={treeValues} />\n      </Plugin>\n    );\n  }\n}\n\nCustomSummary.propTypes = {\n  totalValues: PropTypes.array,\n  groupValues: PropTypes.object,\n  treeValues: PropTypes.object,\n};\n\nCustomSummary.defaultProps = {\n  totalValues: undefined,\n  groupValues: undefined,\n  treeValues: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Getter,\n  Template,\n  Plugin,\n  TemplateConnector,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport {\n  tableRowsWithSummaries,\n  tableRowsWithTotalSummaries,\n  isTotalSummaryTableCell,\n  isGroupSummaryTableCell,\n  isTreeSummaryTableCell,\n  isTotalSummaryTableRow,\n  isGroupSummaryTableRow,\n  isTreeSummaryTableRow,\n  getColumnSummaries,\n  TABLE_TREE_SUMMARY_TYPE,\n  TABLE_GROUP_SUMMARY_TYPE,\n  TABLE_TOTAL_SUMMARY_TYPE,\n} from '@devexpress/dx-grid-core';\n\nconst dependencies = [\n  { name: 'DataTypeProvider', optional: true },\n  { name: 'SummaryState' },\n  { name: 'CustomSummary', optional: true },\n  { name: 'IntegratedSummary', optional: true },\n  { name: 'Table' },\n  { name: 'TableTreeColumn', optional: true },\n];\n\nconst defaultMessages = {\n  sum: 'Sum',\n  min: 'Min',\n  max: 'Max',\n  avg: 'Avg',\n  count: 'Count',\n};\n\nconst tableBodyRowsComputed = ({\n  tableBodyRows,\n  getRowLevelKey,\n  isGroupRow,\n  getRowId,\n}) => tableRowsWithSummaries(tableBodyRows, getRowLevelKey, isGroupRow, getRowId);\nconst tableFooterRowsComputed = ({\n  tableFooterRows,\n}) => tableRowsWithTotalSummaries(tableFooterRows);\n\nconst defaultTypelessSummaries = ['count'];\n\nexport class TableSummaryRow extends React.PureComponent {\n  renderContent(column, columnSummaries) {\n    const {\n      formatlessSummaryTypes,\n      itemComponent: Item,\n      messages,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n    const SummaryItem = ({ summary, children }) => (\n      <Item\n        getMessage={getMessage}\n        type={summary.type}\n        value={summary.value}\n      >\n        {children || String(summary.value)}\n      </Item>\n    );\n\n    return (\n      <React.Fragment>\n        {columnSummaries.map((summary) => {\n          if (summary.value === null\n            || formatlessSummaryTypes.includes(summary.type)\n            || defaultTypelessSummaries.includes(summary.type)) {\n            return <SummaryItem key={summary.type} summary={summary} />;\n          }\n          return (\n            <TemplatePlaceholder\n              key={summary.type}\n              name=\"valueFormatter\"\n              params={{\n                column,\n                value: summary.value,\n              }}\n            >\n              {content => (\n                <SummaryItem summary={summary}>\n                  {content}\n                </SummaryItem>\n              )}\n            </TemplatePlaceholder>\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const {\n      totalRowComponent: TotalRow,\n      groupRowComponent: GroupRow,\n      treeRowComponent: TreeRow,\n      totalCellComponent: TotalCell,\n      groupCellComponent: GroupCell,\n      treeCellComponent: TreeCell,\n      treeColumnCellComponent: TreeColumnCell,\n      treeColumnContentComponent: TreeColumnContent,\n      treeColumnIndentComponent: TreeColumnIndent,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"TableSummaryRow\"\n        dependencies={dependencies}\n      >\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Getter name=\"tableFooterRows\" computed={tableFooterRowsComputed} />\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isTotalSummaryTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ totalSummaryItems, totalSummaryValues }) => {\n                const columnSummaries = getColumnSummaries(\n                  totalSummaryItems,\n                  params.tableColumn.column.name,\n                  totalSummaryValues,\n                );\n                return (\n                  <TotalCell\n                    {...params}\n                    column={params.tableColumn.column}\n                  >\n                    {this.renderContent(params.tableColumn.column, columnSummaries)}\n                  </TotalCell>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isGroupSummaryTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ groupSummaryItems, groupSummaryValues }) => {\n                const columnSummaries = getColumnSummaries(\n                  groupSummaryItems,\n                  params.tableColumn.column.name,\n                  groupSummaryValues[params.tableRow.row.compoundKey],\n                );\n                return (\n                  <GroupCell\n                    {...params}\n                    column={params.tableColumn.column}\n                  >\n                    {this.renderContent(params.tableColumn.column, columnSummaries)}\n                  </GroupCell>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isTreeSummaryTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({\n                treeSummaryItems,\n                treeSummaryValues,\n                tableTreeColumnName,\n                getRowId,\n                getTreeRowLevel,\n              }) => {\n                const columnSummaries = getColumnSummaries(\n                  treeSummaryItems,\n                  params.tableColumn.column.name,\n                  treeSummaryValues[getRowId(params.tableRow.row)],\n                );\n                if (tableTreeColumnName === params.tableColumn.column.name) {\n                  return (\n                    <TreeColumnCell\n                      {...params}\n                      column={params.tableColumn.column}\n                    >\n                      <TreeColumnIndent\n                        level={getTreeRowLevel(params.tableRow.row)}\n                      />\n                      <TreeColumnContent>\n                        {this.renderContent(params.tableColumn.column, columnSummaries)}\n                      </TreeColumnContent>\n                    </TreeColumnCell>\n                  );\n                }\n                return (\n                  <TreeCell\n                    {...params}\n                    column={params.tableColumn.column}\n                  >\n                    {this.renderContent(params.tableColumn.column, columnSummaries)}\n                  </TreeCell>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isTotalSummaryTableRow(tableRow)}\n        >\n          {params => (\n            <TotalRow\n              {...params}\n            />\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isGroupSummaryTableRow(tableRow)}\n        >\n          {params => (\n            <GroupRow\n              {...params}\n            />\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isTreeSummaryTableRow(tableRow)}\n        >\n          {params => (\n            <TreeRow\n              {...params}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableSummaryRow.TREE_ROW_TYPE = TABLE_TREE_SUMMARY_TYPE;\nTableSummaryRow.GROUP_ROW_TYPE = TABLE_GROUP_SUMMARY_TYPE;\nTableSummaryRow.TOTAL_ROW_TYPE = TABLE_TOTAL_SUMMARY_TYPE;\n\nTableSummaryRow.propTypes = {\n  formatlessSummaryTypes: PropTypes.array,\n\n  totalRowComponent: PropTypes.func.isRequired,\n  groupRowComponent: PropTypes.func.isRequired,\n  treeRowComponent: PropTypes.func.isRequired,\n\n  totalCellComponent: PropTypes.func.isRequired,\n  groupCellComponent: PropTypes.func.isRequired,\n  treeCellComponent: PropTypes.func.isRequired,\n\n  treeColumnCellComponent: PropTypes.func.isRequired,\n  treeColumnContentComponent: PropTypes.func.isRequired,\n  treeColumnIndentComponent: PropTypes.func.isRequired,\n\n  itemComponent: PropTypes.func.isRequired,\n\n  messages: PropTypes.shape({\n    sum: PropTypes.string,\n    min: PropTypes.string,\n    max: PropTypes.string,\n    avg: PropTypes.string,\n    count: PropTypes.string,\n  }),\n};\n\nTableSummaryRow.defaultProps = {\n  formatlessSummaryTypes: [],\n  messages: {},\n};\n\nTableSummaryRow.components = {\n  totalRowComponent: 'TotalRow',\n  groupRowComponent: 'GroupRow',\n  treeRowComponent: 'TreeRow',\n  totalCellComponent: 'TotalCell',\n  groupCellComponent: 'GroupCell',\n  treeCellComponent: 'TreeCell',\n  treeColumnCellComponent: 'TableTreeCell',\n  treeColumnContentComponent: 'TableTreeContent',\n  treeColumnIndentComponent: 'TableTreeIndent',\n  itemComponent: 'Item',\n};\n","/* globals requestAnimationFrame cancelAnimationFrame */\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  getAnimations,\n  filterActiveAnimations,\n  evalAnimations,\n  TABLE_FLEX_TYPE,\n} from '@devexpress/dx-grid-core';\n\nexport class TableLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      animationState: new Map(),\n    };\n\n    this.animations = new Map();\n    this.savedScrolldWidth = {};\n    this.tableRef = React.createRef();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { columns } = this.props;\n    const { columns: prevColumns } = prevProps;\n\n    const tableWidth = this.getTableWidth(prevColumns, columns);\n    this.animations = getAnimations(prevColumns, columns, tableWidth, this.animations);\n\n    cancelAnimationFrame(this.raf);\n    this.raf = requestAnimationFrame(this.processAnimationFrame.bind(this));\n  }\n\n  getTableWidth(prevColumns, columns) {\n    const { offsetWidth, scrollWidth } = this.tableRef.current;\n    const { animationState } = this.state;\n\n    const widthChanged = this.savedOffsetWidth !== offsetWidth\n      || !this.savedScrolldWidth[columns.length];\n    const columnCountChanged = columns.length !== prevColumns.length;\n\n    if (columnCountChanged || (widthChanged && !animationState.size)) {\n      this.savedScrolldWidth = {};\n      this.savedScrolldWidth[columns.length] = scrollWidth;\n      this.savedOffsetWidth = offsetWidth;\n    }\n\n    return this.savedScrolldWidth[columns.length];\n  }\n\n  getColumns() {\n    const { columns } = this.props;\n    const { animationState } = this.state;\n\n    let result = columns;\n\n    const isFixedWidth = columns.filter(column => column.width === undefined).length === 0;\n    if (isFixedWidth) {\n      result = result.slice();\n      result.push({ key: TABLE_FLEX_TYPE.toString(), type: TABLE_FLEX_TYPE });\n    }\n\n    if (animationState.size) {\n      result = result\n        .map(column => (animationState.has(column.key)\n          ? { ...column, animationState: animationState.get(column.key) }\n          : column));\n    }\n\n    return result;\n  }\n\n  processAnimationFrame() {\n    const { animationState: animationComponentState } = this.state;\n    this.animations = filterActiveAnimations(this.animations);\n\n    if (!this.animations.size) {\n      if (animationComponentState.size) {\n        this.setState({ animationState: new Map() });\n      }\n      return;\n    }\n\n    const animationState = evalAnimations(this.animations);\n    this.setState({ animationState });\n  }\n\n  render() {\n    const {\n      layoutComponent: Layout,\n      minColumnWidth,\n      ...restProps\n    } = this.props;\n    const columns = this.getColumns();\n    const minWidth = columns\n      .map(column => column.width || (column.type === TABLE_FLEX_TYPE ? 0 : minColumnWidth))\n      .reduce((acc, width) => acc + width, 0);\n\n    return (\n      <Layout\n        {...restProps}\n        tableRef={this.tableRef}\n        columns={columns}\n        minWidth={minWidth}\n        minColumnWidth={minColumnWidth}\n      />\n    );\n  }\n}\n\nTableLayout.propTypes = {\n  columns: PropTypes.array.isRequired,\n  minColumnWidth: PropTypes.number.isRequired,\n  layoutComponent: PropTypes.func.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class ColumnGroup extends React.PureComponent {\n  render() {\n    const { columns } = this.props;\n\n    return (\n      <colgroup>\n        {columns.map(column => (\n          <col\n            key={column.key}\n            style={column.width !== undefined\n              ? { width: `${column.width}px` }\n              : null}\n          />\n        ))}\n      </colgroup>\n    );\n  }\n}\n\nColumnGroup.propTypes = {\n  columns: PropTypes.array.isRequired,\n};\n","import * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport * as PropTypes from 'prop-types';\nimport { isEdgeBrowser } from '@devexpress/dx-core';\nimport { Sizer, RefHolder, RefType } from '@devexpress/dx-react-core';\nimport {\n  getCollapsedGrid,\n  TABLE_FLEX_TYPE,\n  TABLE_STUB_TYPE,\n} from '@devexpress/dx-grid-core';\nimport { ColumnGroup } from './column-group';\n\nconst AUTO_HEIGHT = 'auto';\n\nexport class VirtualTableLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rowHeights: new Map(),\n      viewportTop: 0,\n      viewportLeft: 0,\n      width: 800,\n      height: 600,\n    };\n    this.state.headerHeight = props.headerRows\n      .reduce((acc, row) => acc + this.getRowHeight(row), 0);\n    this.state.bodyHeight = 0;\n    this.state.footerHeight = props.footerRows\n      .reduce((acc, row) => acc + this.getRowHeight(row), 0);\n\n    this.rowRefs = new Map();\n    this.blockRefs = new Map();\n    this.registerRowRef = this.registerRowRef.bind(this);\n    this.getRowHeight = this.getRowHeight.bind(this);\n    this.updateViewport = this.updateViewport.bind(this);\n    this.handleContainerSizeChange = this.handleContainerSizeChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.isEdgeBrowser = isEdgeBrowser();\n\n    this.storeRowHeights();\n    this.storeBloksHeights();\n  }\n\n  componentDidUpdate() {\n    this.storeRowHeights();\n    this.storeBloksHeights();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { rowHeights: prevRowHeight } = prevState;\n    const rowHeights = [...nextProps.headerRows, ...nextProps.bodyRows, ...nextProps.footerRows]\n      .reduce(\n        (acc, row) => {\n          const rowHeight = prevRowHeight.get(row.key);\n          if (rowHeight !== undefined) {\n            acc.set(row.key, rowHeight);\n          }\n          return acc;\n        },\n        new Map(),\n      );\n    return { rowHeights };\n  }\n\n  getRowHeight(row) {\n    const { rowHeights } = this.state;\n    const { estimatedRowHeight } = this.props;\n    const storedHeight = rowHeights.get(row.key);\n    if (storedHeight !== undefined) return storedHeight;\n    if (row.height) return row.height;\n    return estimatedRowHeight;\n  }\n\n  storeRowHeights() {\n    const rowsWithChangedHeights = Array.from(this.rowRefs.entries())\n      // eslint-disable-next-line react/no-find-dom-node\n      .map(([row, ref]) => [row, findDOMNode(ref)])\n      .filter(([, node]) => !!node)\n      .map(([row, node]) => [row, node.getBoundingClientRect().height])\n      .filter(([row]) => row.type !== TABLE_STUB_TYPE)\n      .filter(([row, height]) => height !== this.getRowHeight(row));\n\n    if (rowsWithChangedHeights.length) {\n      const { rowHeights } = this.state;\n      rowsWithChangedHeights\n        .forEach(([row, height]) => rowHeights.set(row.key, height));\n\n      this.setState({\n        rowHeights,\n      });\n    }\n  }\n\n  storeBloksHeights() {\n    const headerHeight = this.blockRefs.get('header')\n      // eslint-disable-next-line react/no-find-dom-node\n      ? findDOMNode(this.blockRefs.get('header')).getBoundingClientRect().height\n      : 0;\n\n    const bodyHeight = this.blockRefs.get('body')\n      // eslint-disable-next-line react/no-find-dom-node\n      ? findDOMNode(this.blockRefs.get('body')).getBoundingClientRect().height\n      : 0;\n\n    const footerHeight = this.blockRefs.get('footer')\n      // eslint-disable-next-line react/no-find-dom-node\n      ? findDOMNode(this.blockRefs.get('footer')).getBoundingClientRect().height\n      : 0;\n\n    const {\n      headerHeight: prevHeaderHeight,\n      bodyHeight: prevBodyHeight,\n      footerHeight: prevFooterHeight,\n    } = this.state;\n\n    if (prevHeaderHeight !== headerHeight\n      || prevBodyHeight !== bodyHeight\n      || prevFooterHeight !== footerHeight) {\n      this.setState({\n        headerHeight,\n        bodyHeight,\n        footerHeight,\n      });\n    }\n  }\n\n  registerRowRef(row, ref) {\n    if (ref === null) {\n      this.rowRefs.delete(row);\n    } else {\n      this.rowRefs.set(row, ref);\n    }\n  }\n\n  registerBlockRef(name, ref) {\n    if (ref === null) {\n      this.blockRefs.delete(name);\n    } else {\n      this.blockRefs.set(name, ref);\n    }\n  }\n\n  shouldSkipScrollEvent(e) {\n    const node = e.target;\n\n    // NOTE: prevent nested scroll to update viewport\n    if (node !== e.currentTarget) {\n      return true;\n    }\n    // NOTE: prevent iOS to flicker in bounces and correct rendering on high dpi screens\n    const correction = this.isEdgeBrowser ? 1 : 0;\n    const nodeHorizontalOffset = parseInt(node.scrollLeft + node.clientWidth, 10) - correction;\n    const nodeVerticalOffset = parseInt(node.scrollTop + node.clientHeight, 10) - correction;\n    if (node.scrollTop < 0\n      || node.scrollLeft < 0\n      || nodeHorizontalOffset > Math.max(node.scrollWidth, node.clientWidth)\n      || nodeVerticalOffset > Math.max(node.scrollHeight, node.clientHeight)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  updateViewport(e) {\n    const node = e.target;\n\n    if (this.shouldSkipScrollEvent(e)) {\n      return;\n    }\n\n    this.setState({\n      viewportTop: node.scrollTop,\n      viewportLeft: node.scrollLeft,\n    });\n  }\n\n  handleContainerSizeChange({ width, height }) {\n    this.setState({ width, height });\n  }\n\n  renderRowsBlock(name, collapsedGrid, Table, Body, blockRef, marginBottom) {\n    const {\n      minWidth,\n      rowComponent: Row,\n      cellComponent: Cell,\n    } = this.props;\n\n    const tableRef = blockRef || React.createRef();\n\n    return (\n      <RefHolder\n        ref={ref => this.registerBlockRef(name, ref)}\n      >\n        <Table\n          tableRef={tableRef}\n          style={{ minWidth: `${minWidth}px`, ...marginBottom ? { marginBottom: `${marginBottom}px` } : null }}\n        >\n          <ColumnGroup\n            columns={collapsedGrid.columns}\n          />\n          <Body>\n            {collapsedGrid.rows.map((visibleRow) => {\n              const { row, cells = [] } = visibleRow;\n              return (\n                <RefHolder\n                  key={row.key}\n                  ref={ref => this.registerRowRef(row, ref)}\n                >\n                  <Row\n                    tableRow={row}\n                    style={row.height !== undefined\n                      ? { height: `${row.height}px` }\n                      : undefined}\n                  >\n                    {cells.map((cell) => {\n                      const { column } = cell;\n                      return (\n                        <Cell\n                          key={column.key}\n                          tableRow={row}\n                          tableColumn={column}\n                          style={column.animationState}\n                          colSpan={cell.colSpan}\n                        />\n                      );\n                    })}\n                  </Row>\n                </RefHolder>\n              );\n            })}\n          </Body>\n        </Table>\n      </RefHolder>\n    );\n  }\n\n  render() {\n    const {\n      headerRows,\n      bodyRows,\n      footerRows,\n      columns,\n      minColumnWidth,\n      height: propHeight,\n      containerComponent: Container,\n      headTableComponent: HeadTable,\n      footerTableComponent: FootTable,\n      tableComponent: Table,\n      headComponent: Head,\n      bodyComponent: Body,\n      footerComponent: Footer,\n      getCellColSpan,\n      tableRef,\n    } = this.props;\n\n    const {\n      viewportLeft,\n      viewportTop,\n      headerHeight,\n      bodyHeight,\n      footerHeight,\n      width,\n      height,\n    } = this.state;\n\n    const getColumnWidth = column => (column.type === TABLE_FLEX_TYPE\n      ? null\n      : column.width || minColumnWidth);\n    const getColSpan = (\n      tableRow, tableColumn,\n    ) => getCellColSpan({ tableRow, tableColumn, tableColumns: columns });\n    const collapsedHeaderGrid = getCollapsedGrid({\n      rows: headerRows,\n      columns,\n      top: 0,\n      left: viewportLeft,\n      width,\n      height: headerHeight,\n      getColumnWidth,\n      getRowHeight: this.getRowHeight,\n      getColSpan,\n    });\n    const collapsedBodyGrid = getCollapsedGrid({\n      rows: bodyRows,\n      columns,\n      top: viewportTop,\n      left: viewportLeft,\n      width,\n      height: height - headerHeight - footerHeight,\n      getColumnWidth,\n      getRowHeight: this.getRowHeight,\n      getColSpan,\n    });\n    const collapsedFooterGrid = getCollapsedGrid({\n      rows: footerRows,\n      columns,\n      top: 0,\n      left: viewportLeft,\n      width,\n      height: footerHeight,\n      getColumnWidth,\n      getRowHeight: this.getRowHeight,\n      getColSpan,\n    });\n\n    return (\n      <Sizer\n        onSizeChange={this.handleContainerSizeChange}\n        containerComponent={Container}\n        style={{\n          ...(propHeight === AUTO_HEIGHT ? null : { height: `${propHeight}px` }),\n        }}\n        onScroll={this.updateViewport}\n      >\n        {!!headerRows.length && this.renderRowsBlock('header', collapsedHeaderGrid, HeadTable, Head)}\n        {this.renderRowsBlock('body', collapsedBodyGrid, Table, Body, tableRef, Math.max(0, height - headerHeight - bodyHeight - footerHeight))}\n        {!!footerRows.length && this.renderRowsBlock('footer', collapsedFooterGrid, FootTable, Footer)}\n      </Sizer>\n    );\n  }\n}\n\nVirtualTableLayout.propTypes = {\n  minWidth: PropTypes.number.isRequired,\n  minColumnWidth: PropTypes.number.isRequired,\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]).isRequired,\n  headerRows: PropTypes.array,\n  bodyRows: PropTypes.array.isRequired,\n  footerRows: PropTypes.array,\n  columns: PropTypes.array.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  bodyComponent: PropTypes.func.isRequired,\n  headComponent: PropTypes.func,\n  footerComponent: PropTypes.func,\n  tableComponent: PropTypes.func.isRequired,\n  headTableComponent: PropTypes.func,\n  footerTableComponent: PropTypes.func,\n  containerComponent: PropTypes.func.isRequired,\n  estimatedRowHeight: PropTypes.number.isRequired,\n  getCellColSpan: PropTypes.func.isRequired,\n  tableRef: RefType.isRequired,\n};\n\nVirtualTableLayout.defaultProps = {\n  headerRows: [],\n  footerRows: [],\n  headComponent: () => null,\n  headTableComponent: () => null,\n  footerComponent: () => null,\n  footerTableComponent: () => null,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nconst getColumnStyle = ({ column }) => column.animationState;\n\nconst getRowStyle = ({ row }) => (row.height !== undefined\n  ? ({ height: `${row.height}px` })\n  : undefined);\n\nexport class RowLayout extends React.PureComponent {\n  render() {\n    const {\n      row,\n      columns,\n      rowComponent: Row,\n      cellComponent: Cell,\n      getCellColSpan,\n    } = this.props;\n    const getColSpan = (\n      tableRow, tableColumn,\n    ) => getCellColSpan({ tableRow, tableColumn, tableColumns: columns });\n\n    return (\n      <Row\n        tableRow={row}\n        style={getRowStyle({ row })}\n      >\n        {\n          columns\n            .map(column => (\n              <Cell\n                key={column.key}\n                tableRow={row}\n                tableColumn={column}\n                style={getColumnStyle({ column })}\n                colSpan={getColSpan(row, column)}\n              />\n            ))\n        }\n      </Row>\n    );\n  }\n}\n\nRowLayout.propTypes = {\n  row: PropTypes.any.isRequired,\n  columns: PropTypes.array.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  getCellColSpan: PropTypes.func.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { RowLayout } from './row-layout';\n\nexport class RowsBlockLayout extends React.PureComponent {\n  render() {\n    const {\n      rows,\n      columns,\n      blockComponent: Block,\n      rowComponent,\n      cellComponent,\n      getCellColSpan,\n    } = this.props;\n\n    return (\n      <Block>\n        {\n          rows\n            .map(row => (\n              <RowLayout\n                key={row.key}\n                row={row}\n                columns={columns}\n                rowComponent={rowComponent}\n                cellComponent={cellComponent}\n                getCellColSpan={getCellColSpan}\n              />\n            ))\n        }\n      </Block>\n    );\n  }\n}\n\nRowsBlockLayout.propTypes = {\n  rows: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  blockComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  getCellColSpan: PropTypes.func.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { RefType } from '@devexpress/dx-react-core';\nimport { ColumnGroup } from './column-group';\nimport { RowsBlockLayout } from './rows-block-layout';\n\nexport class StaticTableLayout extends React.PureComponent {\n  render() {\n    const {\n      headerRows,\n      bodyRows,\n      footerRows,\n      columns,\n      minWidth,\n      containerComponent: Container,\n      tableComponent: Table,\n      headComponent,\n      bodyComponent,\n      footerComponent,\n      rowComponent,\n      cellComponent,\n      getCellColSpan,\n      tableRef,\n    } = this.props;\n\n    return (\n      <Container>\n        <Table\n          tableRef={tableRef}\n          style={{ minWidth: `${minWidth}px` }}\n        >\n          <ColumnGroup columns={columns} />\n          {!!headerRows.length && (\n            <RowsBlockLayout\n              rows={headerRows}\n              columns={columns}\n              blockComponent={headComponent}\n              rowComponent={rowComponent}\n              cellComponent={cellComponent}\n              getCellColSpan={getCellColSpan}\n            />\n          )}\n          <RowsBlockLayout\n            rows={bodyRows}\n            columns={columns}\n            blockComponent={bodyComponent}\n            rowComponent={rowComponent}\n            cellComponent={cellComponent}\n            getCellColSpan={getCellColSpan}\n          />\n          {!!footerRows.length && (\n            <RowsBlockLayout\n              rows={footerRows}\n              columns={columns}\n              blockComponent={footerComponent}\n              rowComponent={rowComponent}\n              cellComponent={cellComponent}\n              getCellColSpan={getCellColSpan}\n            />\n          )}\n        </Table>\n      </Container>\n    );\n  }\n}\n\nStaticTableLayout.propTypes = {\n  headerRows: PropTypes.array,\n  bodyRows: PropTypes.array.isRequired,\n  footerRows: PropTypes.array,\n  columns: PropTypes.array.isRequired,\n  minWidth: PropTypes.number.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  tableComponent: PropTypes.func.isRequired,\n  headComponent: PropTypes.func,\n  bodyComponent: PropTypes.func.isRequired,\n  footerComponent: PropTypes.func,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  getCellColSpan: PropTypes.func.isRequired,\n  tableRef: RefType.isRequired,\n};\n\nStaticTableLayout.defaultProps = {\n  headerRows: [],\n  footerRows: [],\n  headComponent: () => null,\n  footerComponent: () => null,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connectProps } from '@devexpress/dx-react-core';\n\nexport const makeVirtualTable = (Table, {\n  VirtualLayout,\n  FixedHeader,\n  FixedFooter,\n  defaultEstimatedRowHeight,\n  defaultHeight,\n}) => {\n  class VirtualTable extends React.PureComponent {\n    constructor(props) {\n      super(props);\n\n      this.layoutRenderComponent = connectProps(VirtualLayout, () => {\n        const {\n          height,\n          estimatedRowHeight,\n          headTableComponent,\n          footerTableComponent,\n        } = this.props;\n\n        return {\n          height,\n          estimatedRowHeight,\n          headTableComponent,\n          footerTableComponent,\n        };\n      });\n    }\n\n    componentDidUpdate() {\n      this.layoutRenderComponent.update();\n    }\n\n    render() {\n      const {\n        height,\n        estimatedRowHeight,\n        headTableComponent,\n        ...restProps\n      } = this.props;\n\n      return (\n        <Table layoutComponent={this.layoutRenderComponent} {...restProps} />\n      );\n    }\n  }\n\n  VirtualTable.propTypes = {\n    estimatedRowHeight: PropTypes.number,\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n    headTableComponent: PropTypes.func,\n    footerTableComponent: PropTypes.func,\n  };\n\n  VirtualTable.defaultProps = {\n    estimatedRowHeight: defaultEstimatedRowHeight,\n    height: defaultHeight,\n    headTableComponent: FixedHeader,\n    footerTableComponent: FixedFooter,\n  };\n\n  Object.values(Table.components).forEach((name) => {\n    VirtualTable[name] = Table[name];\n  });\n\n  VirtualTable.FixedHeader = FixedHeader;\n  VirtualTable.FixedFooter = FixedFooter;\n\n  return VirtualTable;\n};\n"],"names":["GridCore","props","rows","columns","getRowId","getCellValue","Root","rootComponent","React.createElement","rowIdGetter","cellValueGetter","React","propTypes","PropTypes","isRequired","defaultProps","undefined","Grid","children","pluginDependencies","name","ColumnChooser","state","visible","handleToggle","bind","handleHide","setButtonRef","button","setState","Overlay","overlayComponent","Container","containerComponent","Item","itemComponent","ToggleButton","toggleButtonComponent","messages","getMessage","getMessagesFormatter","hiddenColumnNames","isColumnTogglingEnabled","toggleColumnVisibility","React.Fragment","columnChooserItems","map","item","columnName","column","togglingEnabled","components","columnExtensionValueGetter","columnExtensions","defaultValue","getColumnExtensionValueGetter","filterExpressionComputed","filters","filterExpressionValue","filterExpression","FilteringState","defaultFilters","stateHelper","createStateHelper","onFiltersChange","changeColumnFilter","applyFieldReducer","columnFilteringEnabled","nextProps","prevState","optional","getCollapsedRowsComputed","filteredCollapsedRowsGetter","unwrappedRowsComputed","unwrappedFilteredRows","IntegratedFiltering","getColumnPredicate","getColumnExtension","predicate","rowsComputed","getRowLevelKey","getCollapsedRows","filteredRows","defaultPredicate","defaultFilterPredicate","EditingState","rowChanges","defaultRowChanges","addedRows","defaultAddedRows","getRowChanges","stateRowChanges","getAddedRows","stateAddedRows","editingRowIds","defaultEditingRowIds","deletedRowIds","defaultDeletedRowIds","onEditingRowIdsChange","onAddedRowsChange","onRowChangesChange","onDeletedRowIdsChange","startEditRows","stopEditRows","changeRow","cancelChangedRows","cancelChanges","commitChangedRows","rowIds","onCommitChanges","changed","changedRowsByIds","addRow","changeAddedRow","cancelAddedRows","commitAddedRows","added","addedRowsByIds","deleteRows","cancelDeletedRows","commitDeletedRows","deleted","createRowChange","columnEditingEnabled","createRowChangeGetter","PagingState","currentPage","defaultCurrentPage","pageSize","defaultPageSize","onCurrentPageChange","onPageSizeChange","setCurrentPage","setPageSize","rowsWithHeadersComputed","rowsWithPageHeaders","totalCountComputed","rowCount","paginatedRowsComputed","page","paginatedRows","currentPageComputed","totalCount","IntegratedPaging","CustomPaging","dependencies","GroupingState","grouping","defaultGrouping","draftGrouping","expandedGroups","defaultExpandedGroups","onGroupingChange","onExpandedGroupsChange","changeColumnGrouping","toggleGroupExpanded","applyReducer","toggleExpandedGroups","draftColumnGrouping","cancelColumnGroupingDraft","changeColumnSorting","keepOther","restParams","sorting","groupingIndex","findIndex","columnGrouping","sortIndex","adjustSortIndex","getters","actions","groupIndex","nextState","prevGrouping","columnSortingIndex","columnSorting","prevGroupingIndex","length","columnGroupingEnabled","groupCollapsedRowsGetter","expandedGroupedRowsComputed","expandedGroupRows","IntegratedGrouping","getColumnCriteria","criteria","groupedRowsComputed","groupedRows","groupRowChecker","groupRowLevelKeyGetter","getRowIdComputed","customGroupingRowIdGetter","CustomGrouping","getChildGroups","appliedGrouping","appliedExpandedGroups","customGroupedRows","SelectionState","selection","defaultSelection","onSelectionChange","toggleSelection","rowsWithAvailableToSelectComputed","isGroupRow","rowsWithAvailableToSelect","allSelectedComputed","allSelected","someSelectedComputed","someSelected","selectAllAvailableComputed","availableToSelect","toggleSelectAll","unwrapRowsComputed","unwrapSelectedRows","IntegratedSelection","SortingState","defaultSorting","onSortingChange","payload","persistentSortedColumns","getPersistentSortedColumns","calculateKeepOther","columnSortingEnabled","IntegratedSorting","getColumnCompare","compare","sortedRows","getTargetColumns","filter","type","find","DragDropProvider","clientOffset","change","Column","columnComponent","DragDropProviderCore","tableHeaderRowsComputed","tableHeaderRows","tableHeaderRowsWithReordering","TableColumnReorderingRaw","order","defaultOrder","sourceColumnIndex","targetColumnIndex","onOver","handleOver","onLeave","handleLeave","onDrop","handleDrop","orderState","getState","draftOrderComputed","getDraftOrder","cellDimensionGetters","cellDimensions","getAvailableColumns","tableColumns","Object","keys","forEach","columnIndex","TABLE_DATA_TYPE","tableColumn","getter","ensureCellDimensionGetters","x","sourceColumnName","availableColumns","relativeSourceColumnIndex","indexOf","cacheCellDimensions","overlappedColumns","left","right","relativeTargetIndex","getTableTargetColumnIndex","prevSourceColumnIndex","prevTargetColumnIndex","draftOrder","resetCellDimensions","onOrderChange","nextOrder","changeColumnOrder","targetColumnName","tableContainerComponent","Row","rowComponent","Cell","cellComponent","columnsComputed","orderedColumns","params","tableRow","TABLE_REORDERING_TYPE","storeCellDimensionsGetter","TableContainer","TableColumnReordering","withComponents","RowPlaceholder","CellPlaceholder","tableBodyRowsComputed","tableRowsWithDataRows","tableFooterRows","defaultMessages","noData","Table","tableColumnsComputed","memoize","tableColumnsWithDataRows","Layout","layoutComponent","NoDataRow","noDataRowComponent","NoDataCell","noDataCellComponent","StubRow","stubRowComponent","StubCell","stubCellComponent","StubHeaderCell","stubHeaderCellComponent","tableComponent","headComponent","bodyComponent","footerComponent","tableCellColSpanGetter","headerRows","bodyRows","tableBodyRows","footerRows","getTableCellColSpan","isHeaderStubTableCell","isDataTableCell","value","row","content","isNoDataTableRow","isNoDataTableCell","isDataTableRow","COLUMN_TYPE","ROW_TYPE","NODATA_ROW_TYPE","TABLE_NODATA_TYPE","TableSelection","highlightRow","selectByRowClick","showSelectionColumn","showSelectAll","HeaderCell","headerCellComponent","selectionColumnWidth","tableColumnsWithSelection","isSelectAllTableCell","selectAllAvailable","select","isSelectTableCell","rowId","TABLE_SELECT_TYPE","RowDetailState","expandedRowIds","defaultExpandedRowIds","onExpandedRowIdsChange","toggleDetailRowExpanded","getCellColSpanComputed","tableDetailCellColSpanGetter","TableRowDetail","rowHeight","Content","contentComponent","ToggleCell","toggleCellComponent","toggleColumnWidth","tableColumnsWithDetail","expandedDetailRowIds","tableRowsWithExpandedDetail","isDetailToggleTableCell","isDetailRowExpanded","isDetailTableRow","isDetailTableCell","TABLE_DETAIL_TYPE","tableRowsWithGrouping","tableGroupCellColSpanGetter","showColumnWhenGroupedGetter","showColumnsWhenGrouped","reduce","acc","columnExtension","showWhenGrouped","TableGroupRow","GroupCell","Icon","iconComponent","GroupRow","GroupIndentCell","indentCellComponent","indentColumnWidth","tableColumnsWithGrouping","isGroupTableRow","isGroupTableCell","compoundKey","groupKey","isGroupIndentTableCell","TABLE_GROUP_TYPE","tableRowsWithHeading","TableHeaderRow","showSortingControls","showGroupingControls","HeaderRow","SortLabel","sortLabelComponent","GroupButton","groupButtonComponent","Title","titleComponent","isHeadingTableCell","draggingEnabled","tableColumnResizingEnabled","isColumnSortingEnabled","isColumnGroupingEnabled","changeTableColumnWidth","draftTableColumnWidth","cancelTableColumnWidthDraft","columnTitle","title","atLeastOneDataColumn","sortingEnabled","groupingEnabled","shift","getColumnSortingDirection","direction","align","isHeadingTableRow","TABLE_HEADING_TYPE","TableBandHeader","bandedHeaderCellComponent","InvisibleCell","invisibleCellComponent","columnBands","tableRowsWithBands","tableHeaderColumnChainsComputed","tableHeaderColumnChainsWithBands","isBandedOrHeaderRow","tableHeaderColumnChains","bandComponent","getBandComponent","BAND_DUPLICATE_RENDER","BAND_EMPTY_CELL","BAND_GROUP_CELL","BAND_HEADER_CELL","isBandedTableRow","TABLE_BAND_TYPE","filterPlaceholder","contains","notContains","startsWith","endsWith","equal","notEqual","greaterThan","greaterThanOrEqual","lessThan","lessThanOrEqual","TableFilterRow","filterOperations","showFilterSelector","FilterCell","FilterRow","FilterSelector","filterSelectorComponent","EditorComponent","editorComponent","tableHeaderRowsWithFilter","isFilterTableCell","isColumnFilteringEnabled","getAvailableFilterOperations","getColumnFilterConfig","onFilter","config","columnFilterOperations","getColumnFilterOperations","selectedFilterOperation","getSelectedFilterOperation","handleFilterOperationChange","isFilterValueEmpty","operation","handleFilterValueChange","filteringEnabled","onValueChange","isFilterTableRow","TABLE_FILTER_TYPE","TableEditRow","EditCell","EditRow","tableRowsWithEditing","isEditTableCell","isColumnEditingEnabled","isNew","isAddedTableRow","changedRow","getRowChange","newValue","changeArgs","isEditTableRow","ADDED_ROW_TYPE","TABLE_ADDED_TYPE","EDIT_ROW_TYPE","TABLE_EDIT_TYPE","addCommand","editCommand","deleteCommand","commitCommand","cancelCommand","TableEditColumn","Command","commandComponent","showAddCommand","showEditCommand","showDeleteCommand","width","tableColumnsWithEditing","isHeadingEditCommandsTableCell","isEditCommandsTableCell","isEdit","isEditing","TABLE_EDIT_COMMAND_TYPE","TableColumnResizing","columnWidths","defaultColumnWidths","draftColumnWidths","onColumnWidthsChange","tableColumnsWithWidths","tableColumnsDraftComputed","tableColumnsWithDraftWidths","minColumnWidth","showAll","info","from","to","count","PagingPanel","Pager","pageSizes","pageCount","ItemLayout","dragging","onDragStart","onDragEnd","itemElement","draft","GroupPanelLayout","targetItemIndex","handleDragEvent","eventHandler","restArgs","onEnter","onGroupDraft","items","prevTargetItemIndex","itemGeometries","itemRefs","ref","findDOMNode","getBoundingClientRect","sourceItemIndex","getGroupCellTargetIndex","draggingColumnName","resetState","onGroup","onGroupDraftCancel","EmptyMessage","emptyMessageComponent","groupPanel","element","push","args","groupByColumn","GroupingPanelRaw","LayoutComponent","EmptyMessagePlaceholder","ItemPlaceholder","groupingPanelItems","GroupingPanel","DataTypeProvider","columnNames","for","Formatter","formatterComponent","Editor","availableFilterOperations","getAvailableFilterOperationsComputed","getAvailableFilterOperationsGetter","includes","noColumns","visibleTableColumnsComputed","visibleTableColumns","TableColumnVisibility","defaultHiddenColumnNames","onHiddenColumnNamesChange","toggleColumn","columnTogglingEnabled","tableDataColumnsExist","Toolbar","FlexibleSpaceComponent","flexibleSpaceComponent","TreeDataState","toggleRowExpanded","expandedTreeRowsComputed","expandedTreeRows","customTreeRowIdGetter","getRowLevelKeyComputed","customTreeRowLevelKeyGetter","isTreeRowLeafComputed","isTreeRowLeafGetter","getTreeRowLevelComputed","getTreeRowLevelGetter","collapsedTreeRowsGetterComputed","collapsedTreeRowsGetter","unwrappedTreeRowsComputed","unwrappedCustomTreeRows","CustomTreeData","getChildRows","treeRowsComputed","customTreeRowsWithMeta","TableTreeColumn","forColumnName","showSelectionControls","Indent","indentComponent","ExpandButton","expandButtonComponent","Checkbox","checkboxComponent","isTreeTableCell","isTreeRowLeaf","getTreeRowLevel","collapsedRows","SearchState","changeValue","changeSearchValue","searchFilterExpression","searchPlaceholder","SearchPanel","Input","inputComponent","searchValue","tableHeaderRowsWithFixed","tableHeaderColumnChainsWithFixed","TableFixedColumns","tableColumnDimensions","key","leftColumns","rightColumns","ListenerRow","listenerRowComponent","ListenerCell","listenerCellComponent","tableColumnsWithFixed","fixed","fixedColumnProps","calculateFixedColumnProps","isFixedTableRow","handleListenerSizeChange","SummaryState","totalItems","groupItems","treeItems","IntegratedSummary","calculator","totalSummaryValuesComputed","totalSummaryItems","totalSummaryValues","groupSummaryValuesComputed","groupSummaryItems","groupSummaryValues","treeSummaryValuesComputed","treeSummaryItems","treeSummaryValues","defaultCalculator","defaultSummaryCalculator","CustomSummary","totalValues","groupValues","treeValues","sum","min","max","avg","tableRowsWithSummaries","tableFooterRowsComputed","tableRowsWithTotalSummaries","defaultTypelessSummaries","TableSummaryRow","columnSummaries","formatlessSummaryTypes","SummaryItem","summary","String","TotalRow","totalRowComponent","groupRowComponent","TreeRow","treeRowComponent","TotalCell","totalCellComponent","groupCellComponent","TreeCell","treeCellComponent","TreeColumnCell","treeColumnCellComponent","TreeColumnContent","treeColumnContentComponent","TreeColumnIndent","treeColumnIndentComponent","isTotalSummaryTableCell","getColumnSummaries","renderContent","isGroupSummaryTableCell","isTreeSummaryTableCell","tableTreeColumnName","isTotalSummaryTableRow","isGroupSummaryTableRow","isTreeSummaryTableRow","TREE_ROW_TYPE","TABLE_TREE_SUMMARY_TYPE","GROUP_ROW_TYPE","TABLE_GROUP_SUMMARY_TYPE","TOTAL_ROW_TYPE","TABLE_TOTAL_SUMMARY_TYPE","TableLayout","animationState","Map","animations","savedScrolldWidth","tableRef","prevProps","prevColumns","tableWidth","getTableWidth","getAnimations","cancelAnimationFrame","raf","requestAnimationFrame","processAnimationFrame","current","offsetWidth","scrollWidth","widthChanged","savedOffsetWidth","columnCountChanged","size","result","isFixedWidth","slice","TABLE_FLEX_TYPE","toString","has","get","animationComponentState","filterActiveAnimations","evalAnimations","restProps","getColumns","minWidth","ColumnGroup","AUTO_HEIGHT","VirtualTableLayout","rowHeights","viewportTop","viewportLeft","height","headerHeight","getRowHeight","bodyHeight","footerHeight","rowRefs","blockRefs","registerRowRef","updateViewport","handleContainerSizeChange","isEdgeBrowser","storeRowHeights","storeBloksHeights","estimatedRowHeight","storedHeight","rowsWithChangedHeights","Array","entries","node","TABLE_STUB_TYPE","set","prevHeaderHeight","prevBodyHeight","prevFooterHeight","delete","e","target","currentTarget","correction","nodeHorizontalOffset","parseInt","scrollLeft","clientWidth","nodeVerticalOffset","scrollTop","clientHeight","Math","scrollHeight","shouldSkipScrollEvent","collapsedGrid","Body","blockRef","marginBottom","registerBlockRef","visibleRow","cells","cell","colSpan","propHeight","HeadTable","headTableComponent","FootTable","footerTableComponent","Head","Footer","getCellColSpan","getColumnWidth","getColSpan","collapsedHeaderGrid","getCollapsedGrid","top","collapsedBodyGrid","collapsedFooterGrid","renderRowsBlock","prevRowHeight","RefType","getColumnStyle","getRowStyle","RowLayout","RowsBlockLayout","Block","blockComponent","StaticTableLayout","makeVirtualTable","VirtualLayout","FixedHeader","FixedFooter","defaultEstimatedRowHeight","defaultHeight","VirtualTable","layoutRenderComponent","connectProps","update","values"],"mappings":"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"}