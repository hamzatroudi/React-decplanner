{"version":3,"file":"dx-react-grid.umd.js","sources":["../src/plugins/grid-core.jsx","../src/grid.jsx","../src/plugins/column-chooser.jsx","../src/plugins/filtering-state.jsx","../src/plugins/integrated-filtering.jsx","../src/plugins/editing-state.jsx","../src/plugins/paging-state.jsx","../src/plugins/integrated-paging.jsx","../src/plugins/custom-paging.jsx","../src/plugins/grouping-state.jsx","../src/plugins/integrated-grouping.jsx","../src/plugins/custom-grouping.jsx","../src/plugins/selection-state.jsx","../src/plugins/integrated-selection.jsx","../src/plugins/sorting-state.jsx","../src/plugins/integrated-sorting.jsx","../src/plugins/drag-drop-provider.jsx","../src/plugins/table-column-reordering.jsx","../src/plugins/table.jsx","../src/plugins/table-selection.jsx","../src/plugins/row-detail-state.jsx","../src/plugins/table-row-detail.jsx","../src/plugins/table-group-row.jsx","../src/plugins/table-header-row.jsx","../src/plugins/table-band-header.jsx","../src/plugins/table-filter-row.jsx","../src/plugins/table-edit-row.jsx","../src/plugins/table-edit-column.jsx","../src/plugins/table-column-resizing.jsx","../src/plugins/paging-panel.jsx","../src/components/group-panel-layout/item-layout.jsx","../src/components/group-panel-layout.jsx","../src/plugins/grouping-panel.jsx","../src/plugins/data-type-provider.jsx","../src/plugins/table-column-visibility.jsx","../src/plugins/toolbar.jsx","../src/plugins/tree-data-state.jsx","../src/plugins/custom-tree-data.jsx","../src/plugins/table-tree-column.jsx","../src/plugins/search-state.jsx","../src/plugins/search-panel.jsx","../src/plugins/table-fixed-columns.jsx","../src/plugins/summary-state.jsx","../src/plugins/integrated-summary.jsx","../src/plugins/custom-summary.jsx","../src/plugins/table-summary-row.jsx","../src/components/table-layout.jsx","../src/components/table-layout/column-group.jsx","../src/components/table-layout/virtual-table-layout.jsx","../src/components/table-layout/row-layout.jsx","../src/components/table-layout/rows-block-layout.jsx","../src/components/table-layout/static-table-layout.jsx","../src/utils/virtual-table.jsx"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Plugin, Getter, Template, TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport { rowIdGetter, cellValueGetter } from '@devexpress/dx-grid-core';\n\nexport class GridCore extends React.PureComponent {\n  render() {\n    const {\n      rows,\n      columns,\n      getRowId,\n      getCellValue,\n      rootComponent: Root,\n    } = this.props;\n\n    return (\n      <Plugin>\n        <Getter name=\"rows\" value={rows} />\n        <Getter name=\"getRowId\" value={rowIdGetter(getRowId, rows)} />\n        <Getter name=\"columns\" value={columns} />\n        <Getter name=\"getCellValue\" value={cellValueGetter(getCellValue, columns)} />\n        <Template name=\"root\">\n          <Root>\n            <TemplatePlaceholder name=\"header\" />\n            <TemplatePlaceholder name=\"body\" />\n            <TemplatePlaceholder name=\"footer\" />\n          </Root>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nGridCore.propTypes = {\n  rows: PropTypes.array.isRequired,\n  getRowId: PropTypes.func,\n  getCellValue: PropTypes.func,\n  columns: PropTypes.array.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n};\n\nGridCore.defaultProps = {\n  getRowId: undefined,\n  getCellValue: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { PluginHost } from '@devexpress/dx-react-core';\nimport { GridCore } from './plugins/grid-core';\n\nexport const Grid = ({\n  rows,\n  columns,\n  getRowId,\n  getCellValue,\n  rootComponent,\n  children,\n}) => (\n  <PluginHost>\n    <GridCore\n      rows={rows}\n      columns={columns}\n      getRowId={getRowId}\n      getCellValue={getCellValue}\n      rootComponent={rootComponent}\n    />\n    {children}\n  </PluginHost>\n);\n\nGrid.propTypes = {\n  rows: PropTypes.array.isRequired,\n  getRowId: PropTypes.func,\n  getCellValue: PropTypes.func,\n  columns: PropTypes.array.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nGrid.defaultProps = {\n  getRowId: undefined,\n  getCellValue: undefined,\n  children: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Template, TemplatePlaceholder, Plugin, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport { columnChooserItems } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'TableColumnVisibility' },\n  { name: 'Toolbar' },\n];\nexport class ColumnChooser extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false,\n    };\n\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleHide = this.handleHide.bind(this);\n    this.setButtonRef = this.setButtonRef.bind(this);\n  }\n\n  setButtonRef(button) {\n    this.button = button;\n  }\n\n  handleToggle() {\n    const { visible } = this.state;\n    this.setState({ visible: !visible });\n  }\n\n  handleHide() {\n    this.setState({ visible: false });\n  }\n\n  render() {\n    const {\n      overlayComponent: Overlay,\n      containerComponent: Container,\n      itemComponent: Item,\n      toggleButtonComponent: ToggleButton,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n    const { visible } = this.state;\n\n    return (\n      <Plugin\n        name=\"ColumnChooser\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {(\n              { columns, hiddenColumnNames, isColumnTogglingEnabled },\n              { toggleColumnVisibility },\n            ) => (\n              <React.Fragment>\n                <ToggleButton\n                  buttonRef={this.setButtonRef}\n                  onToggle={this.handleToggle}\n                  getMessage={getMessage}\n                  active={visible}\n                />\n                <Overlay\n                  visible={visible}\n                  target={this.button}\n                  onHide={this.handleHide}\n                >\n                  <Container>\n                    {columnChooserItems(columns, hiddenColumnNames)\n                      .map((item) => {\n                        const { name: columnName } = item.column;\n                        const togglingEnabled = isColumnTogglingEnabled(columnName);\n                        return (\n                          <Item\n                            key={columnName}\n                            item={item}\n                            disabled={!togglingEnabled}\n                            onToggle={() => toggleColumnVisibility(columnName)}\n                          />\n                        );\n                      })}\n                  </Container>\n                </Overlay>\n              </React.Fragment>\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nColumnChooser.propTypes = {\n  overlayComponent: PropTypes.func.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  itemComponent: PropTypes.func.isRequired,\n  toggleButtonComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nColumnChooser.defaultProps = {\n  messages: {},\n};\n\nColumnChooser.components = {\n  overlayComponent: 'Overlay',\n  containerComponent: 'Container',\n  itemComponent: 'Item',\n  toggleButtonComponent: 'ToggleButton',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Action, Plugin, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport {\n  changeColumnFilter,\n  getColumnExtensionValueGetter,\n  filterExpression,\n} from '@devexpress/dx-grid-core';\n\nconst columnExtensionValueGetter = (columnExtensions, defaultValue) => getColumnExtensionValueGetter(columnExtensions, 'filteringEnabled', defaultValue);\nconst filterExpressionComputed = (\n  { filters, filterExpression: filterExpressionValue },\n) => filterExpression(filters, filterExpressionValue);\n\nexport class FilteringState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filters: props.filters || props.defaultFilters,\n    };\n    const stateHelper = createStateHelper(\n      this,\n      {\n        filters: () => {\n          const { onFiltersChange } = this.props;\n          return onFiltersChange;\n        },\n      },\n    );\n\n    this.changeColumnFilter = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'filters', changeColumnFilter);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      filters = prevState.filters,\n    } = nextProps;\n\n    return {\n      filters,\n    };\n  }\n\n  render() {\n    const { filters } = this.state;\n    const { columnExtensions, columnFilteringEnabled } = this.props;\n\n    return (\n      <Plugin\n        name=\"FilteringState\"\n      >\n        <Getter name=\"filters\" value={filters} />\n        <Getter name=\"filterExpression\" computed={filterExpressionComputed} />\n        <Getter\n          name=\"isColumnFilteringEnabled\"\n          value={columnExtensionValueGetter(columnExtensions, columnFilteringEnabled)}\n        />\n        <Action name=\"changeColumnFilter\" action={this.changeColumnFilter} />\n      </Plugin>\n    );\n  }\n}\n\nFilteringState.propTypes = {\n  filters: PropTypes.array,\n  defaultFilters: PropTypes.array,\n  onFiltersChange: PropTypes.func,\n  columnExtensions: PropTypes.array,\n  columnFilteringEnabled: PropTypes.bool,\n};\n\nFilteringState.defaultProps = {\n  filters: undefined,\n  defaultFilters: [],\n  onFiltersChange: undefined,\n  columnExtensions: undefined,\n  columnFilteringEnabled: true,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport {\n  filteredRows,\n  filteredCollapsedRowsGetter,\n  unwrappedFilteredRows,\n  getColumnExtension,\n  defaultFilterPredicate,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'FilteringState', optional: true },\n  { name: 'SearchState', optional: true },\n];\n\nconst getCollapsedRowsComputed = ({ rows }) => filteredCollapsedRowsGetter(rows);\nconst unwrappedRowsComputed = ({ rows }) => unwrappedFilteredRows(rows);\n\nexport class IntegratedFiltering extends React.PureComponent {\n  render() {\n    const { columnExtensions } = this.props;\n    const getColumnPredicate = columnName => getColumnExtension(\n      columnExtensions, columnName,\n    ).predicate;\n\n    const rowsComputed = ({\n      rows,\n      filterExpression,\n      getCellValue,\n      getRowLevelKey,\n      getCollapsedRows,\n    }) => filteredRows(\n      rows,\n      filterExpression,\n      getCellValue,\n      getColumnPredicate,\n      getRowLevelKey,\n      getCollapsedRows,\n    );\n\n    return (\n      <Plugin\n        name=\"IntegratedFiltering\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsComputed} />\n        <Getter name=\"getCollapsedRows\" computed={getCollapsedRowsComputed} />\n        <Getter name=\"rows\" computed={unwrappedRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nIntegratedFiltering.defaultPredicate = defaultFilterPredicate;\n\nIntegratedFiltering.propTypes = {\n  columnExtensions: PropTypes.array,\n};\n\nIntegratedFiltering.defaultProps = {\n  columnExtensions: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Action, Plugin, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport {\n  createRowChangeGetter,\n  startEditRows,\n  stopEditRows,\n  addRow,\n  changeAddedRow,\n  cancelAddedRows,\n  addedRowsByIds,\n  changeRow,\n  cancelChanges,\n  changedRowsByIds,\n  deleteRows,\n  cancelDeletedRows,\n  getColumnExtensionValueGetter,\n} from '@devexpress/dx-grid-core';\n\nconst columnExtensionValueGetter = (columnExtensions, defaultValue) => getColumnExtensionValueGetter(columnExtensions, 'editingEnabled', defaultValue);\n\nexport class EditingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const rowChanges = props.rowChanges || props.defaultRowChanges;\n    const addedRows = props.addedRows || props.defaultAddedRows;\n    const getRowChanges = () => {\n      const { rowChanges: stateRowChanges } = this.state;\n      return stateRowChanges;\n    };\n    const getAddedRows = () => {\n      const { addedRows: stateAddedRows } = this.state;\n      return stateAddedRows;\n    };\n\n    this.state = {\n      editingRowIds: props.editingRowIds || props.defaultEditingRowIds,\n      addedRows,\n      rowChanges,\n      deletedRowIds: props.deletedRowIds || props.defaultDeletedRowIds,\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        editingRowIds: () => {\n          const { onEditingRowIdsChange } = this.props;\n          return onEditingRowIdsChange;\n        },\n        addedRows: () => {\n          const { onAddedRowsChange } = this.props;\n          return onAddedRowsChange;\n        },\n        rowChanges: () => {\n          const { onRowChangesChange } = this.props;\n          return onRowChangesChange;\n        },\n        deletedRowIds: () => {\n          const { onDeletedRowIdsChange } = this.props;\n          return onDeletedRowIdsChange;\n        },\n      },\n    );\n\n    this.startEditRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingRowIds', startEditRows);\n    this.stopEditRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingRowIds', stopEditRows);\n\n    this.changeRow = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'rowChanges', changeRow);\n    this.cancelChangedRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'rowChanges', cancelChanges);\n    this.commitChangedRows = ({ rowIds }) => {\n      const { onCommitChanges } = this.props;\n      onCommitChanges({\n        changed: changedRowsByIds(getRowChanges(), rowIds),\n      });\n      this.cancelChangedRows({ rowIds });\n    };\n\n    this.addRow = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedRows', addRow);\n    this.changeAddedRow = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedRows', changeAddedRow);\n    this.cancelAddedRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedRows', cancelAddedRows);\n    this.commitAddedRows = ({ rowIds }) => {\n      const { onCommitChanges } = this.props;\n      onCommitChanges({\n        added: addedRowsByIds(getAddedRows(), rowIds),\n      });\n      this.cancelAddedRows({ rowIds });\n    };\n\n    this.deleteRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'deletedRowIds', deleteRows);\n    this.cancelDeletedRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'deletedRowIds', cancelDeletedRows);\n    this.commitDeletedRows = ({ rowIds }) => {\n      const { onCommitChanges } = this.props;\n      onCommitChanges({ deleted: rowIds });\n      this.cancelDeletedRows({ rowIds });\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      editingRowIds = prevState.editingRowIds,\n      rowChanges = prevState.rowChanges,\n      addedRows = prevState.addedRows,\n      deletedRowIds = prevState.deletedRowIds,\n    } = nextProps;\n\n    return {\n      editingRowIds,\n      rowChanges,\n      addedRows,\n      deletedRowIds,\n    };\n  }\n\n  render() {\n    const { createRowChange, columnExtensions, columnEditingEnabled } = this.props;\n    const {\n      editingRowIds, rowChanges, addedRows, deletedRowIds,\n    } = this.state;\n\n    return (\n      <Plugin\n        name=\"EditingState\"\n      >\n        <Getter\n          name=\"createRowChange\"\n          value={createRowChangeGetter(createRowChange, columnExtensions)}\n        />\n\n        <Getter name=\"editingRowIds\" value={editingRowIds} />\n        <Action name=\"startEditRows\" action={this.startEditRows} />\n        <Action name=\"stopEditRows\" action={this.stopEditRows} />\n\n        <Getter name=\"rowChanges\" value={rowChanges} />\n        <Action name=\"changeRow\" action={this.changeRow} />\n        <Action name=\"cancelChangedRows\" action={this.cancelChangedRows} />\n        <Action name=\"commitChangedRows\" action={this.commitChangedRows} />\n\n        <Getter name=\"addedRows\" value={addedRows} />\n        <Action name=\"addRow\" action={this.addRow} />\n        <Action name=\"changeAddedRow\" action={this.changeAddedRow} />\n        <Action name=\"cancelAddedRows\" action={this.cancelAddedRows} />\n        <Action name=\"commitAddedRows\" action={this.commitAddedRows} />\n\n        <Getter name=\"deletedRowIds\" value={deletedRowIds} />\n        <Action name=\"deleteRows\" action={this.deleteRows} />\n        <Action name=\"cancelDeletedRows\" action={this.cancelDeletedRows} />\n        <Action name=\"commitDeletedRows\" action={this.commitDeletedRows} />\n\n        <Getter\n          name=\"isColumnEditingEnabled\"\n          value={columnExtensionValueGetter(columnExtensions, columnEditingEnabled)}\n        />\n      </Plugin>\n    );\n  }\n}\n\nEditingState.propTypes = {\n  createRowChange: PropTypes.func,\n  columnEditingEnabled: PropTypes.bool,\n  columnExtensions: PropTypes.array,\n\n  editingRowIds: PropTypes.array,\n  defaultEditingRowIds: PropTypes.array,\n  onEditingRowIdsChange: PropTypes.func,\n\n  addedRows: PropTypes.array,\n  defaultAddedRows: PropTypes.array,\n  onAddedRowsChange: PropTypes.func,\n\n  rowChanges: PropTypes.object,\n  defaultRowChanges: PropTypes.object,\n  onRowChangesChange: PropTypes.func,\n\n  deletedRowIds: PropTypes.array,\n  defaultDeletedRowIds: PropTypes.array,\n  onDeletedRowIdsChange: PropTypes.func,\n\n  onCommitChanges: PropTypes.func.isRequired,\n};\n\nEditingState.defaultProps = {\n  createRowChange: undefined,\n  columnEditingEnabled: true,\n  columnExtensions: undefined,\n\n  editingRowIds: undefined,\n  defaultEditingRowIds: [],\n  onEditingRowIdsChange: undefined,\n\n  rowChanges: undefined,\n  defaultRowChanges: {},\n  onRowChangesChange: undefined,\n\n  addedRows: undefined,\n  defaultAddedRows: [],\n  onAddedRowsChange: undefined,\n\n  deletedRowIds: undefined,\n  defaultDeletedRowIds: [],\n  onDeletedRowIdsChange: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Action, Plugin, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport { setCurrentPage, setPageSize } from '@devexpress/dx-grid-core';\n\nexport class PagingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentPage: props.currentPage || props.defaultCurrentPage,\n      pageSize: props.pageSize !== undefined ? props.pageSize : props.defaultPageSize,\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        currentPage: () => {\n          const { onCurrentPageChange } = this.props;\n          return onCurrentPageChange;\n        },\n        pageSize: () => {\n          const { onPageSizeChange } = this.props;\n          return onPageSizeChange;\n        },\n      },\n    );\n\n    this.setCurrentPage = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'currentPage', setCurrentPage);\n    this.setPageSize = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'pageSize', setPageSize);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      currentPage = prevState.currentPage,\n      pageSize = prevState.pageSize,\n    } = nextProps;\n\n    return {\n      currentPage,\n      pageSize,\n    };\n  }\n\n  render() {\n    const { pageSize, currentPage } = this.state;\n\n    return (\n      <Plugin\n        name=\"PagingState\"\n      >\n        <Getter name=\"currentPage\" value={currentPage} />\n        <Getter name=\"pageSize\" value={pageSize} />\n        <Action name=\"setCurrentPage\" action={this.setCurrentPage} />\n        <Action name=\"setPageSize\" action={this.setPageSize} />\n      </Plugin>\n    );\n  }\n}\n\nPagingState.propTypes = {\n  pageSize: PropTypes.number,\n  defaultPageSize: PropTypes.number,\n  onPageSizeChange: PropTypes.func,\n  currentPage: PropTypes.number,\n  defaultCurrentPage: PropTypes.number,\n  onCurrentPageChange: PropTypes.func,\n};\n\nPagingState.defaultProps = {\n  pageSize: undefined,\n  defaultPageSize: 10,\n  onPageSizeChange: undefined,\n  currentPage: undefined,\n  defaultCurrentPage: 0,\n  onCurrentPageChange: undefined,\n};\n","import * as React from 'react';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport {\n  paginatedRows, rowsWithPageHeaders, rowCount, currentPage,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'PagingState' },\n];\n\nconst rowsWithHeadersComputed = (\n  { rows, pageSize, getRowLevelKey },\n) => rowsWithPageHeaders(rows, pageSize, getRowLevelKey);\nconst totalCountComputed = ({ rows }) => rowCount(rows);\nconst paginatedRowsComputed = (\n  { rows, pageSize, currentPage: page },\n) => paginatedRows(rows, pageSize, page);\nconst currentPageComputed = (\n  { currentPage: page, totalCount, pageSize }, { setCurrentPage },\n) => currentPage(page, totalCount, pageSize, setCurrentPage);\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class IntegratedPaging extends React.PureComponent {\n  render() {\n    return (\n      <Plugin\n        name=\"IntegratedPaging\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsWithHeadersComputed} />\n        <Getter name=\"totalCount\" computed={totalCountComputed} />\n        <Getter name=\"currentPage\" computed={currentPageComputed} />\n        <Getter name=\"rows\" computed={paginatedRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\n\nconst pluginDependencies = [\n  { name: 'PagingState' },\n];\n\nexport class CustomPaging extends React.PureComponent {\n  render() {\n    const { totalCount } = this.props;\n\n    return (\n      <Plugin\n        name=\"CustomPaging\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"totalCount\" value={totalCount} />\n      </Plugin>\n    );\n  }\n}\n\nCustomPaging.propTypes = {\n  totalCount: PropTypes.number,\n};\n\nCustomPaging.defaultProps = {\n  totalCount: 0,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Action, Plugin, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport {\n  changeColumnGrouping,\n  toggleExpandedGroups,\n  draftColumnGrouping,\n  cancelColumnGroupingDraft,\n  getColumnExtensionValueGetter,\n  adjustSortIndex,\n} from '@devexpress/dx-grid-core';\n\nconst dependencies = [\n  { name: 'SortingState', optional: true },\n];\n\nconst columnExtensionValueGetter = (\n  columnExtensions, defaultValue,\n) => getColumnExtensionValueGetter(columnExtensions, 'groupingEnabled', defaultValue);\n\nexport class GroupingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      grouping: props.grouping || props.defaultGrouping,\n      draftGrouping: null,\n      expandedGroups: props.expandedGroups || props.defaultExpandedGroups,\n    };\n\n    this.stateHelper = createStateHelper(\n      this,\n      {\n        grouping: () => {\n          const { onGroupingChange } = this.props;\n          return onGroupingChange;\n        },\n        expandedGroups: () => {\n          const { onExpandedGroupsChange } = this.props;\n          return onExpandedGroupsChange;\n        },\n      },\n    );\n\n    this.changeColumnGrouping = this.changeColumnGrouping.bind(this);\n    this.toggleGroupExpanded = this.stateHelper.applyReducer\n      .bind(this.stateHelper, toggleExpandedGroups);\n    this.draftColumnGrouping = this.stateHelper.applyReducer\n      .bind(this.stateHelper, draftColumnGrouping);\n    this.cancelColumnGroupingDraft = this.stateHelper.applyReducer\n      .bind(this.stateHelper, cancelColumnGroupingDraft);\n    this.changeColumnSorting = this.changeColumnSorting.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      grouping = prevState.grouping,\n      expandedGroups = prevState.expandedGroups,\n    } = nextProps;\n\n    return {\n      grouping,\n      expandedGroups,\n    };\n  }\n\n  changeColumnSorting(\n    { columnName, keepOther, ...restParams },\n    { sorting },\n    { changeColumnSorting },\n  ) {\n    const { grouping } = this.state;\n    const groupingIndex = grouping\n      .findIndex(columnGrouping => columnGrouping.columnName === columnName);\n    if (groupingIndex === -1) {\n      changeColumnSorting({\n        columnName,\n        keepOther: keepOther || grouping.map(columnGrouping => columnGrouping.columnName),\n        ...restParams,\n      });\n      return false;\n    }\n\n    const sortIndex = adjustSortIndex(groupingIndex, grouping, sorting);\n    changeColumnSorting({\n      columnName,\n      keepOther: true,\n      sortIndex,\n      ...restParams,\n    });\n    return false;\n  }\n\n  changeColumnGrouping({ columnName, groupIndex }, getters, actions) {\n    this.stateHelper.applyReducer(\n      changeColumnGrouping,\n      { columnName, groupIndex },\n      (nextState, state) => {\n        const { grouping } = nextState;\n        const { grouping: prevGrouping } = state;\n        const { sorting } = getters;\n        const { changeColumnSorting } = actions;\n\n        if (!sorting) return;\n\n        const columnSortingIndex = sorting\n          .findIndex(columnSorting => columnSorting.columnName === columnName);\n        const prevGroupingIndex = prevGrouping\n          .findIndex(columnGrouping => columnGrouping.columnName === columnName);\n        const groupingIndex = grouping\n          .findIndex(columnGrouping => columnGrouping.columnName === columnName);\n\n        if (columnSortingIndex === -1\n          || (prevGroupingIndex === prevGrouping.length - 1 && groupingIndex === -1)) return;\n\n        const sortIndex = adjustSortIndex(\n          groupingIndex === -1 ? grouping.length : groupingIndex,\n          grouping,\n          sorting,\n        );\n\n        if (columnSortingIndex === sortIndex) return;\n\n        changeColumnSorting({\n          keepOther: true,\n          sortIndex,\n          ...sorting[columnSortingIndex],\n        });\n      },\n    );\n  }\n\n  render() {\n    const { grouping, draftGrouping, expandedGroups } = this.state;\n    const { columnExtensions, columnGroupingEnabled } = this.props;\n\n    return (\n      <Plugin\n        name=\"GroupingState\"\n        dependencies={dependencies}\n      >\n        <Getter name=\"grouping\" value={grouping} />\n        <Getter name=\"draftGrouping\" value={draftGrouping || grouping} />\n        <Getter\n          name=\"isColumnGroupingEnabled\"\n          value={columnExtensionValueGetter(columnExtensions, columnGroupingEnabled)}\n        />\n        <Action name=\"changeColumnGrouping\" action={this.changeColumnGrouping} />\n        <Action name=\"draftColumnGrouping\" action={this.draftColumnGrouping} />\n        <Action name=\"cancelColumnGroupingDraft\" action={this.cancelColumnGroupingDraft} />\n\n        <Getter name=\"expandedGroups\" value={expandedGroups} />\n        <Action name=\"toggleGroupExpanded\" action={this.toggleGroupExpanded} />\n\n        <Action name=\"changeColumnSorting\" action={this.changeColumnSorting} />\n      </Plugin>\n    );\n  }\n}\n\nGroupingState.propTypes = {\n  grouping: PropTypes.array,\n  defaultGrouping: PropTypes.array,\n  onGroupingChange: PropTypes.func,\n  expandedGroups: PropTypes.array,\n  defaultExpandedGroups: PropTypes.array,\n  onExpandedGroupsChange: PropTypes.func,\n  columnExtensions: PropTypes.array,\n  columnGroupingEnabled: PropTypes.bool,\n};\n\nGroupingState.defaultProps = {\n  grouping: undefined,\n  defaultGrouping: [],\n  onGroupingChange: undefined,\n  expandedGroups: undefined,\n  defaultExpandedGroups: [],\n  onExpandedGroupsChange: undefined,\n  columnExtensions: undefined,\n  columnGroupingEnabled: true,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport {\n  groupRowChecker,\n  groupRowLevelKeyGetter,\n  groupCollapsedRowsGetter,\n  groupedRows,\n  expandedGroupRows,\n  getColumnExtension,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'GroupingState' },\n];\n\nconst getCollapsedRowsComputed = (\n  { getCollapsedRows },\n) => groupCollapsedRowsGetter(getCollapsedRows);\nconst expandedGroupedRowsComputed = (\n  { rows, grouping, expandedGroups },\n) => expandedGroupRows(rows, grouping, expandedGroups);\n\nexport class IntegratedGrouping extends React.PureComponent {\n  render() {\n    const { columnExtensions } = this.props;\n    const getColumnCriteria = columnName => getColumnExtension(\n      columnExtensions, columnName,\n    ).criteria;\n\n    const groupedRowsComputed = (\n      { rows, grouping, getCellValue },\n    ) => groupedRows(rows, grouping, getCellValue, getColumnCriteria);\n\n    return (\n      <Plugin\n        name=\"IntegratedGrouping\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"isGroupRow\" value={groupRowChecker} />\n        <Getter name=\"getRowLevelKey\" value={groupRowLevelKeyGetter} />\n        <Getter name=\"getCollapsedRows\" computed={getCollapsedRowsComputed} />\n        <Getter name=\"rows\" computed={groupedRowsComputed} />\n        <Getter name=\"rows\" computed={expandedGroupedRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nIntegratedGrouping.propTypes = {\n  columnExtensions: PropTypes.array,\n};\n\nIntegratedGrouping.defaultProps = {\n  columnExtensions: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport {\n  groupRowChecker,\n  groupRowLevelKeyGetter,\n  groupCollapsedRowsGetter,\n  customGroupingRowIdGetter,\n  customGroupedRows,\n  expandedGroupRows,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'GroupingState' },\n];\n\nconst getCollapsedRowsComputed = (\n  { getCollapsedRows },\n) => groupCollapsedRowsGetter(getCollapsedRows);\nconst expandedGroupedRowsComputed = (\n  { rows, grouping, expandedGroups },\n) => expandedGroupRows(rows, grouping, expandedGroups);\nconst getRowIdComputed = ({ getRowId, rows }) => customGroupingRowIdGetter(getRowId, rows);\n\nexport class CustomGrouping extends React.PureComponent {\n  render() {\n    const {\n      getChildGroups,\n      grouping: appliedGrouping,\n      expandedGroups: appliedExpandedGroups,\n    } = this.props;\n    const groupedRowsComputed = (\n      { rows, grouping },\n    ) => customGroupedRows(rows, grouping, getChildGroups);\n\n    return (\n      <Plugin\n        name=\"CustomGrouping\"\n        dependencies={pluginDependencies}\n      >\n        {appliedGrouping && (\n          <Getter name=\"grouping\" value={appliedGrouping} />\n        )}\n        {appliedExpandedGroups && (\n          <Getter name=\"expandedGroups\" value={appliedExpandedGroups} />\n        )}\n        <Getter name=\"isGroupRow\" value={groupRowChecker} />\n        <Getter name=\"getRowLevelKey\" value={groupRowLevelKeyGetter} />\n        <Getter name=\"getCollapsedRows\" computed={getCollapsedRowsComputed} />\n        <Getter name=\"rows\" computed={groupedRowsComputed} />\n        <Getter name=\"getRowId\" computed={getRowIdComputed} />\n        <Getter name=\"rows\" computed={expandedGroupedRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nCustomGrouping.propTypes = {\n  getChildGroups: PropTypes.func.isRequired,\n  grouping: PropTypes.array,\n  expandedGroups: PropTypes.array,\n};\n\nCustomGrouping.defaultProps = {\n  grouping: undefined,\n  expandedGroups: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Action, Plugin, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport { toggleSelection } from '@devexpress/dx-grid-core';\n\nexport class SelectionState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selection: props.selection || props.defaultSelection,\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        selection: () => {\n          const { onSelectionChange } = this.props;\n          return onSelectionChange;\n        },\n      },\n    );\n\n    this.toggleSelection = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'selection', toggleSelection);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      selection = prevState.selection,\n    } = nextProps;\n\n    return {\n      selection,\n    };\n  }\n\n  render() {\n    const { selection } = this.state;\n\n    return (\n      <Plugin\n        name=\"SelectionState\"\n      >\n        <Getter name=\"selection\" value={selection} />\n        <Action name=\"toggleSelection\" action={this.toggleSelection} />\n      </Plugin>\n    );\n  }\n}\n\nSelectionState.propTypes = {\n  selection: PropTypes.array,\n  defaultSelection: PropTypes.array,\n  onSelectionChange: PropTypes.func,\n};\n\nSelectionState.defaultProps = {\n  selection: undefined,\n  defaultSelection: [],\n  onSelectionChange: undefined,\n};\n","import * as React from 'react';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport {\n  rowsWithAvailableToSelect,\n  someSelected,\n  allSelected,\n  unwrapSelectedRows,\n} from '@devexpress/dx-grid-core';\n\nconst rowsWithAvailableToSelectComputed = (\n  { rows, getRowId, isGroupRow },\n) => rowsWithAvailableToSelect(rows, getRowId, isGroupRow);\nconst allSelectedComputed = ({ rows, selection }) => allSelected(rows, selection);\nconst someSelectedComputed = ({ rows, selection }) => someSelected(rows, selection);\nconst selectAllAvailableComputed = ({ rows: { availableToSelect } }) => !!availableToSelect.length;\nconst toggleSelectAll = (state, { rows: { availableToSelect } }, { toggleSelection }) => {\n  toggleSelection({ rowIds: availableToSelect, state });\n};\nconst unwrapRowsComputed = ({ rows }) => unwrapSelectedRows(rows);\n\nconst pluginDependencies = [\n  { name: 'SelectionState' },\n];\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class IntegratedSelection extends React.PureComponent {\n  render() {\n    return (\n      <Plugin\n        name=\"IntegratedSelection\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsWithAvailableToSelectComputed} />\n        <Getter name=\"allSelected\" computed={allSelectedComputed} />\n        <Getter name=\"someSelected\" computed={someSelectedComputed} />\n        <Getter name=\"selectAllAvailable\" computed={selectAllAvailableComputed} />\n        <Action name=\"toggleSelectAll\" action={toggleSelectAll} />\n        <Getter name=\"rows\" computed={unwrapRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Action, Plugin, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport {\n  changeColumnSorting,\n  getColumnExtensionValueGetter,\n  getPersistentSortedColumns,\n  calculateKeepOther,\n} from '@devexpress/dx-grid-core';\n\nconst columnExtensionValueGetter = (columnExtensions, defaultValue) => getColumnExtensionValueGetter(columnExtensions, 'sortingEnabled', defaultValue);\n\nexport class SortingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sorting: props.sorting || props.defaultSorting,\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        sorting: () => {\n          const { onSortingChange } = this.props;\n          return onSortingChange;\n        },\n      },\n    );\n\n    this.changeColumnSorting = stateHelper.applyReducer\n      .bind(stateHelper, (prevState, payload) => {\n        const { sorting = prevState.sorting } = this.props;\n        const persistentSortedColumns = getPersistentSortedColumns(sorting, props.columnExtensions);\n        const keepOther = calculateKeepOther(\n          prevState.sorting, payload.keepOther, persistentSortedColumns,\n        );\n        return changeColumnSorting(prevState, { ...payload, keepOther });\n      });\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      sorting = prevState.sorting,\n    } = nextProps;\n\n    return {\n      sorting,\n    };\n  }\n\n  render() {\n    const { sorting } = this.state;\n    const { columnExtensions, columnSortingEnabled } = this.props;\n\n    return (\n      <Plugin\n        name=\"SortingState\"\n      >\n        <Getter name=\"sorting\" value={sorting} />\n        <Getter\n          name=\"isColumnSortingEnabled\"\n          value={columnExtensionValueGetter(columnExtensions, columnSortingEnabled)}\n        />\n        <Action name=\"changeColumnSorting\" action={this.changeColumnSorting} />\n      </Plugin>\n    );\n  }\n}\n\nSortingState.propTypes = {\n  sorting: PropTypes.array,\n  defaultSorting: PropTypes.array,\n  onSortingChange: PropTypes.func,\n  columnExtensions: PropTypes.array,\n  columnSortingEnabled: PropTypes.bool,\n};\n\nSortingState.defaultProps = {\n  sorting: undefined,\n  defaultSorting: [],\n  onSortingChange: undefined,\n  columnExtensions: undefined,\n  columnSortingEnabled: true,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport { sortedRows, getColumnExtension } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'SortingState' },\n];\n\nexport class IntegratedSorting extends React.PureComponent {\n  render() {\n    const { columnExtensions } = this.props;\n    const getColumnCompare = columnName => getColumnExtension(columnExtensions, columnName).compare;\n\n    const rowsComputed = ({\n      rows, sorting, getCellValue, isGroupRow, getRowLevelKey,\n    }) => sortedRows(rows, sorting, getCellValue, getColumnCompare, isGroupRow, getRowLevelKey);\n\n    return (\n      <Plugin\n        name=\"IntegratedSorting\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nIntegratedSorting.propTypes = {\n  columnExtensions: PropTypes.array,\n};\n\nIntegratedSorting.defaultProps = {\n  columnExtensions: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Plugin, Getter, Template, TemplatePlaceholder,\n  TemplateConnector,\n  DragDropProvider as DragDropProviderCore,\n} from '@devexpress/dx-react-core';\n\nconst getTargetColumns = (payload, columns) => payload\n  .filter(item => item.type === 'column')\n  .map(item => columns.find(column => column.name === item.columnName));\n\nexport class DragDropProvider extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      payload: null,\n      clientOffset: null,\n    };\n\n    this.change = ({ payload, clientOffset }) => this.setState({ payload, clientOffset });\n  }\n\n  render() {\n    const {\n      containerComponent: Container,\n      columnComponent: Column,\n    } = this.props;\n    const {\n      payload,\n      clientOffset,\n    } = this.state;\n\n    return (\n      <Plugin\n        name=\"DragDropProvider\"\n      >\n        <Getter name=\"draggingEnabled\" value />\n        <Template name=\"root\">\n          <DragDropProviderCore\n            onChange={this.change}\n          >\n            <TemplatePlaceholder />\n          </DragDropProviderCore>\n          {payload && (\n            <TemplateConnector>\n              {({ columns }) => (\n                <Container\n                  clientOffset={clientOffset}\n                >\n                  {getTargetColumns(payload, columns)\n                    .map(column => (\n                      <Column\n                        key={column.name}\n                        column={column}\n                      />\n                    ))\n                  }\n                </Container>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nDragDropProvider.propTypes = {\n  containerComponent: PropTypes.func.isRequired,\n  columnComponent: PropTypes.func.isRequired,\n};\n\nDragDropProvider.components = {\n  containerComponent: 'Container',\n  columnComponent: 'Column',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter,\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  DropTarget,\n  withComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  TABLE_DATA_TYPE,\n  TABLE_REORDERING_TYPE,\n  orderedColumns,\n  changeColumnOrder,\n  getTableTargetColumnIndex,\n  tableHeaderRowsWithReordering,\n  draftOrder as draftOrderComputed,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'Table' },\n];\n\nconst tableHeaderRowsComputed = (\n  { tableHeaderRows },\n) => tableHeaderRowsWithReordering(tableHeaderRows);\n\nclass TableColumnReorderingRaw extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      order: props.defaultOrder,\n      sourceColumnIndex: -1,\n      targetColumnIndex: -1,\n    };\n\n    this.onOver = this.handleOver.bind(this);\n    this.onLeave = this.handleLeave.bind(this);\n    this.onDrop = this.handleDrop.bind(this);\n  }\n\n  getState() {\n    const { order: orderState } = this.state;\n    const {\n      order = orderState,\n    } = this.props;\n    return {\n      ...this.state,\n      order,\n    };\n  }\n\n  getDraftOrder() {\n    const { order, sourceColumnIndex, targetColumnIndex } = this.getState();\n    return draftOrderComputed(order, sourceColumnIndex, targetColumnIndex);\n  }\n\n  getAvailableColumns() {\n    return this.getDraftOrder()\n      .filter(columnName => !!this.cellDimensionGetters[columnName]);\n  }\n\n  cacheCellDimensions() {\n    this.cellDimensions = (this.cellDimensions && this.cellDimensions.length)\n      ? this.cellDimensions\n      : this.getAvailableColumns()\n        .map(columnName => this.cellDimensionGetters[columnName]());\n  }\n\n  resetCellDimensions() {\n    this.cellDimensions = [];\n  }\n\n  ensureCellDimensionGetters(tableColumns) {\n    Object.keys(this.cellDimensionGetters)\n      .forEach((columnName) => {\n        const columnIndex = tableColumns\n          .findIndex(({ type, column }) => type === TABLE_DATA_TYPE && column.name === columnName);\n        if (columnIndex === -1) {\n          delete this.cellDimensionGetters[columnName];\n        }\n      });\n  }\n\n  storeCellDimensionsGetter(tableColumn, getter, tableColumns) {\n    if (tableColumn.type === TABLE_DATA_TYPE) {\n      this.cellDimensionGetters[tableColumn.column.name] = getter;\n    }\n    this.ensureCellDimensionGetters(tableColumns);\n  }\n\n  handleOver({ payload, clientOffset: { x } }) {\n    const sourceColumnName = payload[0].columnName;\n    const availableColumns = this.getAvailableColumns();\n    const relativeSourceColumnIndex = availableColumns.indexOf(sourceColumnName);\n\n    if (relativeSourceColumnIndex === -1) return;\n\n    this.cacheCellDimensions();\n    const { cellDimensions } = this;\n\n    const overlappedColumns = cellDimensions\n      .filter(({ left, right }) => left <= x && x <= right);\n\n    if (overlappedColumns.length > 1) return;\n\n    const relativeTargetIndex = getTableTargetColumnIndex(\n      cellDimensions,\n      relativeSourceColumnIndex,\n      x,\n    );\n\n    if (relativeTargetIndex === -1) return;\n\n    const {\n      sourceColumnIndex: prevSourceColumnIndex,\n      targetColumnIndex: prevTargetColumnIndex,\n    } = this.getState();\n    const draftOrder = this.getDraftOrder();\n    const targetColumnIndex = draftOrder.indexOf(availableColumns[relativeTargetIndex]);\n\n    if (targetColumnIndex === prevTargetColumnIndex) return;\n\n    const sourceColumnIndex = prevSourceColumnIndex === -1\n      ? draftOrder.indexOf(sourceColumnName)\n      : prevSourceColumnIndex;\n\n    this.setState({\n      sourceColumnIndex,\n      targetColumnIndex,\n    });\n  }\n\n  handleLeave() {\n    this.setState({\n      sourceColumnIndex: -1,\n      targetColumnIndex: -1,\n    });\n\n    this.resetCellDimensions();\n  }\n\n  handleDrop() {\n    const { sourceColumnIndex, targetColumnIndex, order } = this.getState();\n    const { onOrderChange } = this.props;\n\n    if (sourceColumnIndex === -1 && targetColumnIndex === -1) return;\n\n    const nextOrder = changeColumnOrder(order, {\n      sourceColumnName: order[sourceColumnIndex],\n      targetColumnName: order[targetColumnIndex],\n    });\n\n    this.setState({\n      order: nextOrder,\n      sourceColumnIndex: -1,\n      targetColumnIndex: -1,\n    });\n\n    if (onOrderChange) {\n      onOrderChange(nextOrder);\n    }\n\n    this.resetCellDimensions();\n  }\n\n  render() {\n    const {\n      tableContainerComponent: Container,\n      rowComponent: Row,\n      cellComponent: Cell,\n    } = this.props;\n\n    const columnsComputed = (\n      { tableColumns },\n    ) => orderedColumns(tableColumns, this.getDraftOrder());\n\n    this.cellDimensionGetters = {};\n\n    return (\n      <Plugin\n        name=\"TableColumnReordering\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={columnsComputed} />\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n        <Template name=\"table\">\n          {params => (\n            <Container\n              {...params}\n              onOver={this.onOver}\n              onLeave={this.onLeave}\n              onDrop={this.onDrop}\n            >\n              <TemplatePlaceholder />\n            </Container>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => tableRow.type === TABLE_REORDERING_TYPE}\n        >\n          {params => (\n            <Row {...params} />\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => tableRow.type === TABLE_REORDERING_TYPE}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ tableColumns }) => (\n                <Cell\n                  {...params}\n                  getCellDimensions={getter => this.storeCellDimensionsGetter(\n                    params.tableColumn, getter, tableColumns,\n                  )}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableColumnReorderingRaw.propTypes = {\n  order: PropTypes.arrayOf(PropTypes.string),\n  defaultOrder: PropTypes.arrayOf(PropTypes.string),\n  onOrderChange: PropTypes.func,\n  tableContainerComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n};\n\nTableColumnReorderingRaw.defaultProps = {\n  order: undefined,\n  defaultOrder: [],\n  onOrderChange: undefined,\n};\n\nTableColumnReorderingRaw.components = {\n  tableContainerComponent: 'TableContainer',\n  rowComponent: 'Row',\n  cellComponent: 'Cell',\n};\n\nconst TableContainer = ({\n  onOver, onLeave, onDrop, children, // eslint-disable-line react/prop-types\n}) => (\n  <DropTarget\n    onOver={onOver}\n    onLeave={onLeave}\n    onDrop={onDrop}\n  >\n    {children}\n  </DropTarget>\n);\n\nexport const TableColumnReordering = withComponents({ TableContainer })(TableColumnReorderingRaw);\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { memoize, getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Getter,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  Plugin,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithDataRows,\n  tableRowsWithDataRows,\n  tableCellColSpanGetter,\n  isNoDataTableRow,\n  isNoDataTableCell,\n  isDataTableCell,\n  isHeaderStubTableCell,\n  isDataTableRow,\n  TABLE_DATA_TYPE,\n  TABLE_NODATA_TYPE,\n} from '@devexpress/dx-grid-core';\n\nconst RowPlaceholder = props => <TemplatePlaceholder name=\"tableRow\" params={props} />;\nconst CellPlaceholder = props => <TemplatePlaceholder name=\"tableCell\" params={props} />;\n\nconst tableHeaderRows = [];\nconst tableBodyRowsComputed = ({ rows, getRowId }) => tableRowsWithDataRows(rows, getRowId);\nconst tableFooterRows = [];\n\nconst defaultMessages = {\n  noData: 'No data',\n};\n\nexport class Table extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.tableColumnsComputed = memoize(\n      columnExtensions => ({\n        columns,\n      }) => tableColumnsWithDataRows(columns, columnExtensions),\n    );\n  }\n\n  render() {\n    const {\n      layoutComponent: Layout,\n      cellComponent: Cell,\n      rowComponent: Row,\n      noDataRowComponent: NoDataRow,\n      noDataCellComponent: NoDataCell,\n      stubRowComponent: StubRow,\n      stubCellComponent: StubCell,\n      stubHeaderCellComponent: StubHeaderCell,\n      columnExtensions,\n      messages,\n      containerComponent,\n      tableComponent,\n      headComponent,\n      bodyComponent,\n      footerComponent,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n    const tableColumnsComputed = this.tableColumnsComputed(columnExtensions);\n\n    return (\n      <Plugin\n        name=\"Table\"\n      >\n        <Getter name=\"tableHeaderRows\" value={tableHeaderRows} />\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Getter name=\"tableFooterRows\" value={tableFooterRows} />\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Getter name=\"getTableCellColSpan\" value={tableCellColSpanGetter} />\n\n        <Template name=\"body\">\n          <TemplatePlaceholder name=\"table\" />\n        </Template>\n        <Template name=\"table\">\n          <TemplateConnector>\n            {({\n              tableHeaderRows: headerRows,\n              tableBodyRows: bodyRows,\n              tableFooterRows: footerRows,\n              tableColumns: columns,\n              getTableCellColSpan,\n            }) => (\n              <Layout\n                tableComponent={tableComponent}\n                headComponent={headComponent}\n                bodyComponent={bodyComponent}\n                footerComponent={footerComponent}\n                containerComponent={containerComponent}\n                headerRows={headerRows}\n                bodyRows={bodyRows}\n                footerRows={footerRows}\n                columns={columns}\n                rowComponent={RowPlaceholder}\n                cellComponent={CellPlaceholder}\n                getCellColSpan={getTableCellColSpan}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n        <Template name=\"tableCell\">\n          {params => (\n            <TemplateConnector>\n              {(\n                { tableHeaderRows: headerRows },\n              ) => (isHeaderStubTableCell(params.tableRow, headerRows)\n                ? <StubHeaderCell {...params} />\n                : <StubCell {...params} />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isDataTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ getCellValue }) => {\n                const columnName = params.tableColumn.column.name;\n                const value = getCellValue(params.tableRow.row, columnName);\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueFormatter\"\n                    params={{\n                      row: params.tableRow.row,\n                      column: params.tableColumn.column,\n                      value,\n                    }}\n                  >\n                    {content => (\n                      <Cell\n                        {...params}\n                        row={params.tableRow.row}\n                        column={params.tableColumn.column}\n                        value={value}\n                      >\n                        {content}\n                      </Cell>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => isNoDataTableRow(tableRow)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ tableColumns }) => {\n                if (isNoDataTableCell(params.tableColumn, tableColumns)) {\n                  return (\n                    <NoDataCell\n                      {...params}\n                      getMessage={getMessage}\n                    />\n                  );\n                }\n                return null;\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template name=\"tableRow\">\n          {params => (\n            <StubRow {...params} />\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isDataTableRow(tableRow)}\n        >\n          {params => (\n            <Row\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isNoDataTableRow(tableRow)}\n        >\n          {params => <NoDataRow {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTable.COLUMN_TYPE = TABLE_DATA_TYPE;\nTable.ROW_TYPE = TABLE_DATA_TYPE;\nTable.NODATA_ROW_TYPE = TABLE_NODATA_TYPE;\n\nTable.propTypes = {\n  layoutComponent: PropTypes.func.isRequired,\n  tableComponent: PropTypes.func.isRequired,\n  headComponent: PropTypes.func.isRequired,\n  bodyComponent: PropTypes.func.isRequired,\n  footerComponent: PropTypes.func.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  noDataCellComponent: PropTypes.func.isRequired,\n  noDataRowComponent: PropTypes.func.isRequired,\n  stubRowComponent: PropTypes.func.isRequired,\n  stubCellComponent: PropTypes.func.isRequired,\n  stubHeaderCellComponent: PropTypes.func.isRequired,\n  columnExtensions: PropTypes.array,\n  messages: PropTypes.shape({\n    noData: PropTypes.string,\n  }),\n};\n\nTable.defaultProps = {\n  columnExtensions: undefined,\n  messages: {},\n};\n\nTable.components = {\n  tableComponent: 'Table',\n  headComponent: 'TableHead',\n  bodyComponent: 'TableBody',\n  footerComponent: 'TableFooter',\n  containerComponent: 'Container',\n  layoutComponent: 'Layout',\n  rowComponent: 'Row',\n  cellComponent: 'Cell',\n  noDataRowComponent: 'NoDataRow',\n  noDataCellComponent: 'NoDataCell',\n  stubRowComponent: 'StubRow',\n  stubCellComponent: 'StubCell',\n  stubHeaderCellComponent: 'StubHeaderCell',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Template, Plugin,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  TABLE_SELECT_TYPE,\n  tableColumnsWithSelection,\n  isSelectTableCell,\n  isSelectAllTableCell,\n  isDataTableRow,\n} from '@devexpress/dx-grid-core';\n\nexport class TableSelection extends React.PureComponent {\n  render() {\n    const {\n      highlightRow,\n      selectByRowClick,\n      showSelectionColumn,\n      showSelectAll,\n      headerCellComponent: HeaderCell,\n      cellComponent: Cell,\n      rowComponent: Row,\n      selectionColumnWidth,\n    } = this.props;\n\n    const tableColumnsComputed = (\n      { tableColumns },\n    ) => tableColumnsWithSelection(tableColumns, selectionColumnWidth);\n\n    return (\n      <Plugin\n        name=\"TableSelection\"\n        dependencies={[\n          { name: 'Table' },\n          { name: 'SelectionState' },\n          { name: 'IntegratedSelection', optional: !showSelectAll },\n        ]}\n      >\n        {showSelectionColumn && (\n          <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        )}\n\n        {(showSelectionColumn && showSelectAll) && (\n          <Template\n            name=\"tableCell\"\n            predicate={({ tableRow, tableColumn }) => isSelectAllTableCell(tableRow, tableColumn)}\n          >\n            {params => (\n              <TemplateConnector>\n                {({ selectAllAvailable, allSelected, someSelected }, { toggleSelectAll }) => (\n                  <HeaderCell\n                    {...params}\n                    disabled={!selectAllAvailable}\n                    allSelected={allSelected}\n                    someSelected={someSelected}\n                    onToggle={select => toggleSelectAll(select)}\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </Template>\n        )}\n        {showSelectionColumn && (\n          <Template\n            name=\"tableCell\"\n            predicate={({ tableRow, tableColumn }) => isSelectTableCell(tableRow, tableColumn)}\n          >\n            {params => (\n              <TemplateConnector>\n                {({ selection }, { toggleSelection }) => (\n                  <Cell\n                    {...params}\n                    row={params.tableRow.row}\n                    selected={selection.indexOf(params.tableRow.rowId) !== -1}\n                    onToggle={() => toggleSelection({ rowIds: [params.tableRow.rowId] })}\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </Template>\n        )}\n        {(highlightRow || selectByRowClick) && (\n          <Template\n            name=\"tableRow\"\n            predicate={({ tableRow }) => isDataTableRow(tableRow)}\n          >\n            {params => (\n              <TemplateConnector>\n                {({ selection }, { toggleSelection }) => (\n                  <Row\n                    {...params}\n                    selectByRowClick={selectByRowClick}\n                    selected={highlightRow && selection.indexOf(params.tableRow.rowId) !== -1}\n                    onToggle={() => toggleSelection({ rowIds: [params.tableRow.rowId] })}\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </Template>\n        )}\n      </Plugin>\n    );\n  }\n}\n\nTableSelection.COLUMN_TYPE = TABLE_SELECT_TYPE;\n\nTableSelection.propTypes = {\n  headerCellComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  highlightRow: PropTypes.bool,\n  selectByRowClick: PropTypes.bool,\n  showSelectAll: PropTypes.bool,\n  showSelectionColumn: PropTypes.bool,\n  selectionColumnWidth: PropTypes.number.isRequired,\n};\n\nTableSelection.defaultProps = {\n  highlightRow: false,\n  selectByRowClick: false,\n  showSelectAll: false,\n  showSelectionColumn: true,\n};\n\nTableSelection.components = {\n  rowComponent: 'Row',\n  cellComponent: 'Cell',\n  headerCellComponent: 'HeaderCell',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Action, Plugin, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport { toggleDetailRowExpanded } from '@devexpress/dx-grid-core';\n\nexport class RowDetailState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expandedRowIds: props.expandedRowIds || props.defaultExpandedRowIds,\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        expandedRowIds: () => {\n          const { onExpandedRowIdsChange } = this.props;\n          return onExpandedRowIdsChange;\n        },\n      },\n    );\n\n    this.toggleDetailRowExpanded = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'expandedRowIds', toggleDetailRowExpanded);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      expandedRowIds = prevState.expandedRowIds,\n    } = nextProps;\n\n    return {\n      expandedRowIds,\n    };\n  }\n\n  render() {\n    const { expandedRowIds } = this.state;\n\n    return (\n      <Plugin\n        name=\"RowDetailState\"\n      >\n        <Getter name=\"expandedDetailRowIds\" value={expandedRowIds} />\n        <Action name=\"toggleDetailRowExpanded\" action={this.toggleDetailRowExpanded} />\n      </Plugin>\n    );\n  }\n}\n\nRowDetailState.propTypes = {\n  expandedRowIds: PropTypes.array,\n  defaultExpandedRowIds: PropTypes.array,\n  onExpandedRowIdsChange: PropTypes.func,\n};\n\nRowDetailState.defaultProps = {\n  expandedRowIds: undefined,\n  defaultExpandedRowIds: [],\n  onExpandedRowIdsChange: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Template, Plugin, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  tableRowsWithExpandedDetail,\n  tableDetailCellColSpanGetter,\n  isDetailRowExpanded,\n  tableColumnsWithDetail,\n  isDetailToggleTableCell,\n  isDetailTableRow,\n  isDetailTableCell,\n  TABLE_DETAIL_TYPE,\n} from '@devexpress/dx-grid-core';\n\nconst getCellColSpanComputed = (\n  { getTableCellColSpan },\n) => tableDetailCellColSpanGetter(getTableCellColSpan);\n\nconst pluginDependencies = [\n  { name: 'RowDetailState' },\n  { name: 'Table' },\n];\n\nexport class TableRowDetail extends React.PureComponent {\n  render() {\n    const {\n      rowHeight,\n      contentComponent: Content,\n      toggleCellComponent: ToggleCell,\n      cellComponent: Cell,\n      rowComponent: Row,\n      toggleColumnWidth,\n    } = this.props;\n\n    const tableColumnsComputed = (\n      { tableColumns },\n    ) => tableColumnsWithDetail(tableColumns, toggleColumnWidth);\n    const tableBodyRowsComputed = (\n      { tableBodyRows, expandedDetailRowIds },\n    ) => tableRowsWithExpandedDetail(tableBodyRows, expandedDetailRowIds, rowHeight);\n\n    return (\n      <Plugin\n        name=\"TableRowDetail\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Getter name=\"getTableCellColSpan\" computed={getCellColSpanComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isDetailToggleTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ expandedDetailRowIds }, { toggleDetailRowExpanded }) => (\n                <ToggleCell\n                  {...params}\n                  row={params.tableRow.row}\n                  expanded={isDetailRowExpanded(expandedDetailRowIds, params.tableRow.rowId)}\n                  onToggle={() => toggleDetailRowExpanded({ rowId: params.tableRow.rowId })}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => isDetailTableRow(tableRow)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ tableColumns }) => {\n                if (isDetailTableCell(params.tableColumn, tableColumns)) {\n                  return (\n                    <Cell\n                      {...params}\n                      row={params.tableRow.row}\n                    >\n                      <Content row={params.tableRow.row} />\n                    </Cell>\n                  );\n                }\n                return null;\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isDetailTableRow(tableRow)}\n        >\n          {params => (\n            <Row\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableRowDetail.ROW_TYPE = TABLE_DETAIL_TYPE;\nTableRowDetail.COLUMN_TYPE = TABLE_DETAIL_TYPE;\n\nTableRowDetail.propTypes = {\n  contentComponent: PropTypes.func,\n  toggleCellComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  toggleColumnWidth: PropTypes.number.isRequired,\n  rowHeight: PropTypes.number,\n};\n\nTableRowDetail.defaultProps = {\n  contentComponent: () => null,\n  rowHeight: undefined,\n};\n\nTableRowDetail.components = {\n  rowComponent: 'Row',\n  cellComponent: 'Cell',\n  toggleCellComponent: 'ToggleCell',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Template, Plugin, TemplatePlaceholder, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithGrouping,\n  tableRowsWithGrouping,\n  tableGroupCellColSpanGetter,\n  isGroupTableCell,\n  isGroupIndentTableCell,\n  isGroupTableRow,\n  TABLE_GROUP_TYPE,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'GroupingState' },\n  { name: 'Table' },\n  { name: 'DataTypeProvider', optional: true },\n];\n\nconst tableBodyRowsComputed = (\n  { tableBodyRows, isGroupRow },\n) => tableRowsWithGrouping(tableBodyRows, isGroupRow);\nconst getCellColSpanComputed = (\n  { getTableCellColSpan },\n) => tableGroupCellColSpanGetter(getTableCellColSpan);\n\nconst showColumnWhenGroupedGetter = (showColumnsWhenGrouped, columnExtensions = []) => {\n  const map = columnExtensions.reduce((acc, columnExtension) => {\n    acc[columnExtension.columnName] = columnExtension.showWhenGrouped;\n    return acc;\n  }, {});\n\n  return columnName => map[columnName] || showColumnsWhenGrouped;\n};\n\nexport class TableGroupRow extends React.PureComponent {\n  render() {\n    const {\n      cellComponent: GroupCell,\n      contentComponent: Content,\n      iconComponent: Icon,\n      rowComponent: GroupRow,\n      indentCellComponent: GroupIndentCell,\n      indentColumnWidth,\n      showColumnsWhenGrouped,\n      columnExtensions,\n    } = this.props;\n\n    const tableColumnsComputed = ({\n      columns, tableColumns, grouping, draftGrouping,\n    }) => tableColumnsWithGrouping(\n      columns,\n      tableColumns,\n      grouping,\n      draftGrouping,\n      indentColumnWidth,\n      showColumnWhenGroupedGetter(showColumnsWhenGrouped, columnExtensions),\n    );\n\n    return (\n      <Plugin\n        name=\"TableGroupRow\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Getter name=\"getTableCellColSpan\" computed={getCellColSpanComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => isGroupTableRow(tableRow)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ grouping, expandedGroups }, { toggleGroupExpanded }) => {\n                if (isGroupTableCell(params.tableRow, params.tableColumn)) {\n                  return (\n                    <TemplatePlaceholder\n                      name=\"valueFormatter\"\n                      params={{\n                        column: params.tableColumn.column,\n                        value: params.tableRow.row.value,\n                      }}\n                    >\n                      {content => (\n                        <GroupCell\n                          {...params}\n                          contentComponent={Content}\n                          iconComponent={Icon}\n                          row={params.tableRow.row}\n                          column={params.tableColumn.column}\n                          expanded={expandedGroups.indexOf(params.tableRow.row.compoundKey) !== -1}\n                          onToggle={\n                            () => toggleGroupExpanded({ groupKey: params.tableRow.row.compoundKey })\n                          }\n                        >\n                          {content}\n                        </GroupCell>\n                      )}\n                    </TemplatePlaceholder>\n                  );\n                }\n                if (isGroupIndentTableCell(params.tableRow, params.tableColumn, grouping)) {\n                  if (GroupIndentCell) {\n                    return (\n                      <GroupIndentCell\n                        {...params}\n                        row={params.tableRow.row}\n                        column={params.tableColumn.column}\n                      />\n                    );\n                  }\n                  return <TemplatePlaceholder />;\n                }\n                return null;\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isGroupTableRow(tableRow)}\n        >\n          {params => (\n            <GroupRow\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableGroupRow.ROW_TYPE = TABLE_GROUP_TYPE;\nTableGroupRow.COLUMN_TYPE = TABLE_GROUP_TYPE;\n\nTableGroupRow.propTypes = {\n  cellComponent: PropTypes.func.isRequired,\n  contentComponent: PropTypes.func.isRequired,\n  iconComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  indentCellComponent: PropTypes.func,\n  indentColumnWidth: PropTypes.number.isRequired,\n  showColumnsWhenGrouped: PropTypes.bool,\n  columnExtensions: PropTypes.array,\n};\n\nTableGroupRow.defaultProps = {\n  indentCellComponent: null,\n  showColumnsWhenGrouped: false,\n  columnExtensions: undefined,\n};\n\nTableGroupRow.components = {\n  rowComponent: 'Row',\n  cellComponent: 'Cell',\n  contentComponent: 'Content',\n  iconComponent: 'Icon',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Template, Plugin, TemplateConnector, TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  getColumnSortingDirection,\n  tableRowsWithHeading,\n  isHeadingTableCell,\n  isHeadingTableRow,\n  TABLE_DATA_TYPE,\n  TABLE_HEADING_TYPE,\n} from '@devexpress/dx-grid-core';\n\nconst tableHeaderRowsComputed = ({ tableHeaderRows }) => tableRowsWithHeading(tableHeaderRows);\n\nexport class TableHeaderRow extends React.PureComponent {\n  render() {\n    const {\n      showSortingControls,\n      showGroupingControls,\n      cellComponent: HeaderCell,\n      rowComponent: HeaderRow,\n      contentComponent: Content,\n      sortLabelComponent: SortLabel,\n      groupButtonComponent: GroupButton,\n      titleComponent: Title,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n\n    return (\n      <Plugin\n        name=\"TableHeaderRow\"\n        dependencies={[\n          { name: 'Table' },\n          { name: 'SortingState', optional: !showSortingControls },\n          { name: 'GroupingState', optional: !showGroupingControls },\n          { name: 'DragDropProvider', optional: true },\n          { name: 'TableColumnResizing', optional: true },\n        ]}\n      >\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isHeadingTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({\n                sorting, tableColumns, draggingEnabled, tableColumnResizingEnabled,\n                isColumnSortingEnabled, isColumnGroupingEnabled,\n              }, {\n                changeColumnSorting, changeColumnGrouping,\n                changeTableColumnWidth, draftTableColumnWidth, cancelTableColumnWidthDraft,\n              }) => {\n                const { name: columnName, title: columnTitle } = params.tableColumn.column;\n                const atLeastOneDataColumn = tableColumns\n                  .filter(({ type }) => type === TABLE_DATA_TYPE).length > 1;\n                const sortingEnabled = isColumnSortingEnabled\n                  && isColumnSortingEnabled(columnName);\n                const groupingEnabled = isColumnGroupingEnabled\n                  && isColumnGroupingEnabled(columnName)\n                  && atLeastOneDataColumn;\n\n                return (\n                  <HeaderCell\n                    {...params}\n                    column={params.tableColumn.column}\n                    getMessage={getMessage}\n                    draggingEnabled={draggingEnabled && atLeastOneDataColumn}\n                    resizingEnabled={tableColumnResizingEnabled}\n                    onWidthChange={({ shift }) => changeTableColumnWidth({ columnName, shift })}\n                    onWidthDraft={({ shift }) => draftTableColumnWidth({ columnName, shift })}\n                    onWidthDraftCancel={() => cancelTableColumnWidthDraft()}\n                    // @deprecated\n                    sortingEnabled={sortingEnabled}\n                    // @deprecated\n                    groupingEnabled={groupingEnabled}\n                    // @deprecated\n                    showSortingControls={showSortingControls}\n                    // @deprecated\n                    showGroupingControls={showGroupingControls}\n                    // @deprecated\n                    sortingDirection={showSortingControls && sorting !== undefined\n                      ? getColumnSortingDirection(sorting, columnName) : undefined}\n                    // @deprecated\n                    onSort={\n                      ({ direction, keepOther }) => changeColumnSorting({\n                        columnName, direction, keepOther,\n                      })}\n                    // @deprecated\n                    onGroup={() => changeColumnGrouping({ columnName })}\n                    // @deprecated\n                    before={(\n                      <TemplatePlaceholder\n                        name=\"tableHeaderCellBefore\"\n                        params={{\n                          column: params.tableColumn.column,\n                        }}\n                      />\n                    )}\n                  >\n                    <TemplatePlaceholder\n                      name=\"tableHeaderCellBefore\"\n                      params={{\n                        column: params.tableColumn.column,\n                      }}\n                    />\n                    <Content\n                      column={params.tableColumn.column}\n                      align={params.tableColumn.align}\n                    >\n                      {showSortingControls ? (\n                        <SortLabel\n                          column={params.tableColumn.column}\n                          align={params.tableColumn.align}\n                          direction={getColumnSortingDirection(sorting, columnName)}\n                          disabled={!sortingEnabled}\n                          onSort={({ direction, keepOther }) => {\n                            changeColumnSorting({ columnName, direction, keepOther });\n                          }}\n                          getMessage={getMessage}\n                        >\n                          <Title>\n                            {columnTitle || columnName}\n                          </Title>\n                        </SortLabel>\n                      ) : (\n                        <Title>\n                          {columnTitle || columnName}\n                        </Title>\n                      )}\n                    </Content>\n                    {showGroupingControls ? (\n                      <GroupButton\n                        disabled={!groupingEnabled}\n                        onGroup={() => changeColumnGrouping({ columnName })}\n                      />\n                    ) : null}\n                  </HeaderCell>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isHeadingTableRow(tableRow)}\n        >\n          {params => <HeaderRow {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableHeaderRow.ROW_TYPE = TABLE_HEADING_TYPE;\n\nTableHeaderRow.propTypes = {\n  showSortingControls: PropTypes.bool,\n  showGroupingControls: PropTypes.bool,\n  cellComponent: PropTypes.func.isRequired,\n  contentComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  titleComponent: PropTypes.func.isRequired,\n  sortLabelComponent: PropTypes.func.isRequired,\n  groupButtonComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nTableHeaderRow.defaultProps = {\n  showSortingControls: false,\n  showGroupingControls: false,\n  messages: null,\n};\n\nTableHeaderRow.components = {\n  cellComponent: 'Cell',\n  rowComponent: 'Row',\n  contentComponent: 'Content',\n  sortLabelComponent: 'SortLabel',\n  titleComponent: 'Title',\n  groupButtonComponent: 'GroupButton',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Template, Plugin,\n  TemplateConnector, TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport {\n  getBandComponent, tableHeaderColumnChainsWithBands,\n  isBandedTableRow, isBandedOrHeaderRow,\n  tableRowsWithBands, isHeadingTableCell,\n  BAND_GROUP_CELL, BAND_HEADER_CELL,\n  BAND_EMPTY_CELL, BAND_DUPLICATE_RENDER,\n  TABLE_BAND_TYPE,\n} from '@devexpress/dx-grid-core';\n\nconst CellPlaceholder = props => <TemplatePlaceholder params={props} />;\n\nexport class TableBandHeader extends React.PureComponent {\n  render() {\n    const {\n      cellComponent: Cell,\n      rowComponent: Row,\n      bandedHeaderCellComponent: HeaderCell,\n      invisibleCellComponent: InvisibleCell,\n      columnBands,\n    } = this.props;\n\n    const tableHeaderRowsComputed = ({ tableHeaderRows, tableColumns }) => tableRowsWithBands(\n      tableHeaderRows, columnBands, tableColumns,\n    );\n    const tableHeaderColumnChainsComputed = ({\n      tableHeaderRows, tableColumns,\n    }) => tableHeaderColumnChainsWithBands(\n      tableHeaderRows, tableColumns, columnBands,\n    );\n\n    return (\n      <Plugin\n        name=\"TableBandHeader\"\n        dependencies={[\n          { name: 'Table' },\n          { name: 'TableHeaderRow' },\n          { name: 'TableSelection', optional: true },\n          { name: 'TableEditColumn', optional: true },\n        ]}\n      >\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n        <Getter name=\"tableHeaderColumnChains\" computed={tableHeaderColumnChainsComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => isBandedOrHeaderRow(tableRow)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({\n                tableColumns,\n                tableHeaderRows,\n                tableHeaderColumnChains,\n              }) => {\n                const bandComponent = getBandComponent(\n                  params,\n                  tableHeaderRows, tableColumns,\n                  columnBands, tableHeaderColumnChains,\n                );\n                switch (bandComponent.type) {\n                  case BAND_DUPLICATE_RENDER:\n                    return <TemplatePlaceholder />;\n                  case BAND_EMPTY_CELL:\n                    return <InvisibleCell />;\n                  case BAND_GROUP_CELL: {\n                    const { value, ...payload } = bandComponent.payload;\n                    return (\n                      <Cell {...params} {...payload}>\n                        {value}\n                      </Cell>\n                    );\n                  }\n                  case BAND_HEADER_CELL:\n                    return (\n                      <TemplatePlaceholder\n                        name=\"tableCell\"\n                        params={{ ...params, ...bandComponent.payload }}\n                      />\n                    );\n                  default:\n                    return null;\n                }\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isHeadingTableCell(tableRow, tableColumn)}\n        >\n          {params => <HeaderCell component={CellPlaceholder} {...params} />}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isBandedTableRow(tableRow)}\n        >\n          {params => <Row {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableBandHeader.ROW_TYPE = TABLE_BAND_TYPE;\n\nTableBandHeader.propTypes = {\n  columnBands: PropTypes.array.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  bandedHeaderCellComponent: PropTypes.func.isRequired,\n  invisibleCellComponent: PropTypes.func.isRequired,\n};\n\nTableBandHeader.components = {\n  cellComponent: 'Cell',\n  rowComponent: 'Row',\n  bandedHeaderCellComponent: 'BandedHeaderCell',\n  invisibleCellComponent: 'InvisibleCell',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Template, TemplatePlaceholder, TemplateConnector, Plugin,\n} from '@devexpress/dx-react-core';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  getColumnFilterConfig,\n  tableHeaderRowsWithFilter,\n  isFilterTableCell,\n  isFilterTableRow,\n  getColumnFilterOperations,\n  isFilterValueEmpty,\n  getSelectedFilterOperation,\n  TABLE_FILTER_TYPE,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'FilteringState' },\n  { name: 'Table' },\n  { name: 'DataTypeProvider', optional: true },\n];\n\nconst defaultMessages = {\n  filterPlaceholder: 'Filter...',\n  contains: 'Contains',\n  notContains: 'Does not contain',\n  startsWith: 'Starts with',\n  endsWith: 'Ends with',\n  equal: 'Equals',\n  notEqual: 'Does not equal',\n  greaterThan: 'Greater than',\n  greaterThanOrEqual: 'Greater than or equal to',\n  lessThan: 'Less than',\n  lessThanOrEqual: 'Less than or equal to',\n};\n\nexport class TableFilterRow extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filterOperations: {},\n    };\n  }\n\n  render() {\n    const {\n      rowHeight,\n      showFilterSelector,\n      cellComponent: FilterCell,\n      rowComponent: FilterRow,\n      filterSelectorComponent: FilterSelector,\n      iconComponent,\n      toggleButtonComponent,\n      editorComponent: EditorComponent,\n      messages,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n\n    const tableHeaderRowsComputed = (\n      { tableHeaderRows },\n    ) => tableHeaderRowsWithFilter(tableHeaderRows, rowHeight);\n\n    return (\n      <Plugin\n        name=\"TableFilterRow\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isFilterTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(\n                { filters, isColumnFilteringEnabled, getAvailableFilterOperations },\n                { changeColumnFilter },\n              ) => {\n                const { filterOperations } = this.state;\n                const { name: columnName } = params.tableColumn.column;\n                const filter = getColumnFilterConfig(filters, columnName);\n                const onFilter = config => changeColumnFilter({ columnName, config });\n                const columnFilterOperations = getColumnFilterOperations(\n                  getAvailableFilterOperations, columnName,\n                );\n                const selectedFilterOperation = getSelectedFilterOperation(\n                  filterOperations, columnName, filter, columnFilterOperations,\n                );\n                const handleFilterOperationChange = (value) => {\n                  this.setState({\n                    filterOperations: {\n                      ...filterOperations,\n                      [columnName]: value,\n                    },\n                  });\n                  if (filter && !isFilterValueEmpty(filter.value)) {\n                    onFilter({ value: filter.value, operation: value });\n                  }\n                };\n                const handleFilterValueChange = value => onFilter(!isFilterValueEmpty(value)\n                  ? { value, operation: selectedFilterOperation }\n                  : null);\n                const filteringEnabled = isColumnFilteringEnabled(columnName);\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueEditor\"\n                    params={{\n                      column: params.tableColumn.column,\n                      value: filter ? filter.value : undefined,\n                      onValueChange: handleFilterValueChange,\n                    }}\n                  >\n                    {content => (\n                      <FilterCell\n                        {...params}\n                        getMessage={getMessage}\n                        column={params.tableColumn.column}\n                        filter={filter}\n                        filteringEnabled={filteringEnabled}\n                        onFilter={onFilter}\n                      >\n                        {showFilterSelector\n                          ? (\n                            <FilterSelector\n                              toggleButtonComponent={toggleButtonComponent}\n                              iconComponent={iconComponent}\n                              value={selectedFilterOperation}\n                              availableValues={columnFilterOperations}\n                              onChange={handleFilterOperationChange}\n                              disabled={!filteringEnabled}\n                              getMessage={getMessage}\n                            />\n                          ) : null\n                        }\n                        {content || (\n                          <EditorComponent\n                            value={filter ? filter.value : undefined}\n                            disabled={!filteringEnabled}\n                            getMessage={getMessage}\n                            onChange={handleFilterValueChange}\n                          />\n                        )}\n                      </FilterCell>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isFilterTableRow(tableRow)}\n        >\n          {params => <FilterRow {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableFilterRow.ROW_TYPE = TABLE_FILTER_TYPE;\n\nTableFilterRow.propTypes = {\n  rowHeight: PropTypes.any,\n  showFilterSelector: PropTypes.bool,\n  messages: PropTypes.shape({\n    filterPlaceholder: PropTypes.string,\n    contains: PropTypes.string,\n    notContains: PropTypes.string,\n    startsWith: PropTypes.string,\n    endsWith: PropTypes.string,\n    equal: PropTypes.string,\n    notEqual: PropTypes.string,\n    greaterThan: PropTypes.string,\n    greaterThanOrEqual: PropTypes.string,\n    lessThan: PropTypes.string,\n    lessThanOrEqual: PropTypes.string,\n  }),\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  filterSelectorComponent: PropTypes.func.isRequired,\n  toggleButtonComponent: PropTypes.func.isRequired,\n  iconComponent: PropTypes.func.isRequired,\n  editorComponent: PropTypes.func.isRequired,\n};\n\nTableFilterRow.defaultProps = {\n  rowHeight: undefined,\n  showFilterSelector: false,\n  messages: {},\n};\n\nTableFilterRow.components = {\n  rowComponent: 'Row',\n  cellComponent: 'Cell',\n  filterSelectorComponent: 'FilterSelector',\n  iconComponent: 'Icon',\n  editorComponent: 'Editor',\n  toggleButtonComponent: 'ToggleButton',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Template, TemplatePlaceholder, TemplateConnector, Plugin,\n} from '@devexpress/dx-react-core';\nimport {\n  getRowChange,\n  tableRowsWithEditing,\n  isEditTableRow,\n  isAddedTableRow,\n  isEditTableCell,\n  TABLE_EDIT_TYPE,\n  TABLE_ADDED_TYPE,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n  { name: 'Table' },\n  { name: 'DataTypeProvider', optional: true },\n];\n\nexport class TableEditRow extends React.PureComponent {\n  render() {\n    const {\n      cellComponent: EditCell,\n      rowComponent: EditRow,\n      rowHeight,\n    } = this.props;\n\n    const tableBodyRowsComputed = (\n      { tableBodyRows, editingRowIds, addedRows },\n    ) => tableRowsWithEditing(tableBodyRows, editingRowIds, addedRows, rowHeight);\n\n    return (\n      <Plugin\n        name=\"TableEditRow\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isEditTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({\n                getCellValue,\n                createRowChange,\n                rowChanges,\n                isColumnEditingEnabled,\n              }, {\n                changeAddedRow,\n                changeRow,\n              }) => {\n                const { rowId, row } = params.tableRow;\n                const { column } = params.tableColumn;\n                const { name: columnName } = column;\n\n                const isNew = isAddedTableRow(params.tableRow);\n                const changedRow = isNew\n                  ? row\n                  : { ...row, ...getRowChange(rowChanges, rowId) };\n\n                const value = getCellValue(changedRow, columnName);\n                const onValueChange = (newValue) => {\n                  const changeArgs = {\n                    rowId,\n                    change: createRowChange(changedRow, newValue, columnName),\n                  };\n                  if (isNew) {\n                    changeAddedRow(changeArgs);\n                  } else {\n                    changeRow(changeArgs);\n                  }\n                };\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueEditor\"\n                    params={{\n                      column,\n                      row,\n                      value,\n                      onValueChange,\n                    }}\n                  >\n                    {content => (\n                      <EditCell\n                        {...params}\n                        row={row}\n                        column={column}\n                        value={value}\n                        editingEnabled={isColumnEditingEnabled(columnName)}\n                        onValueChange={onValueChange}\n                      >\n                        {content}\n                      </EditCell>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => (isEditTableRow(tableRow) || isAddedTableRow(tableRow))}\n        >\n          {params => (\n            <EditRow\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableEditRow.ADDED_ROW_TYPE = TABLE_ADDED_TYPE;\nTableEditRow.EDIT_ROW_TYPE = TABLE_EDIT_TYPE;\n\nTableEditRow.propTypes = {\n  rowHeight: PropTypes.any,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n};\n\nTableEditRow.defaultProps = {\n  rowHeight: undefined,\n};\n\nTableEditRow.components = {\n  rowComponent: 'Row',\n  cellComponent: 'Cell',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Getter, Template, Plugin, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  TABLE_EDIT_COMMAND_TYPE,\n  tableColumnsWithEditing,\n  isHeadingEditCommandsTableCell,\n  isEditCommandsTableCell,\n  isAddedTableRow,\n  isEditTableRow,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n  { name: 'Table' },\n];\n\nconst defaultMessages = {\n  addCommand: 'New',\n  editCommand: 'Edit',\n  deleteCommand: 'Delete',\n  commitCommand: 'Save',\n  cancelCommand: 'Cancel',\n};\n\nexport class TableEditColumn extends React.PureComponent {\n  render() {\n    const {\n      cellComponent: Cell,\n      headerCellComponent: HeaderCell,\n      commandComponent: Command,\n      showAddCommand,\n      showEditCommand,\n      showDeleteCommand,\n      width,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n    const tableColumnsComputed = ({ tableColumns }) => tableColumnsWithEditing(tableColumns, width);\n\n    return (\n      <Plugin\n        name=\"TableEditColumn\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={(\n            { tableRow, tableColumn },\n          ) => isHeadingEditCommandsTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(getters, actions) => (\n                <HeaderCell {...params}>\n                  {showAddCommand && (\n                    <Command\n                      id=\"add\"\n                      text={getMessage('addCommand')}\n                      onExecute={() => actions.addRow()}\n                    />\n                  )}\n                </HeaderCell>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isEditCommandsTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(getters, actions) => {\n                const isEdit = isEditTableRow(params.tableRow);\n                const isNew = isAddedTableRow(params.tableRow);\n                const isEditing = isEdit || isNew;\n                const rowIds = [params.tableRow.rowId];\n                return (\n                  <Cell\n                    {...params}\n                    row={params.tableRow.row}\n                  >\n                    {showEditCommand && !isEditing && (\n                      <Command\n                        id=\"edit\"\n                        text={getMessage('editCommand')}\n                        onExecute={() => actions.startEditRows({ rowIds })}\n                      />\n                    )}\n                    {showDeleteCommand && !isEditing && (\n                      <Command\n                        id=\"delete\"\n                        text={getMessage('deleteCommand')}\n                        onExecute={() => {\n                          actions.deleteRows({ rowIds });\n                          actions.commitDeletedRows({ rowIds });\n                        }}\n                      />\n                    )}\n                    {isEditing && (\n                      <Command\n                        id=\"commit\"\n                        text={getMessage('commitCommand')}\n                        onExecute={() => {\n                          if (isNew) {\n                            actions.commitAddedRows({ rowIds });\n                          } else {\n                            actions.stopEditRows({ rowIds });\n                            actions.commitChangedRows({ rowIds });\n                          }\n                        }}\n                      />\n                    )}\n                    {isEditing && (\n                      <Command\n                        id=\"cancel\"\n                        text={getMessage('cancelCommand')}\n                        onExecute={() => {\n                          if (isNew) {\n                            actions.cancelAddedRows({ rowIds });\n                          } else {\n                            actions.stopEditRows({ rowIds });\n                            actions.cancelChangedRows({ rowIds });\n                          }\n                        }}\n                      />\n                    )}\n                  </Cell>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableEditColumn.COLUMN_TYPE = TABLE_EDIT_COMMAND_TYPE;\n\nTableEditColumn.propTypes = {\n  cellComponent: PropTypes.func.isRequired,\n  headerCellComponent: PropTypes.func.isRequired,\n  commandComponent: PropTypes.func.isRequired,\n  showAddCommand: PropTypes.bool,\n  showEditCommand: PropTypes.bool,\n  showDeleteCommand: PropTypes.bool,\n  width: PropTypes.number,\n  messages: PropTypes.shape({\n    addCommand: PropTypes.string,\n    editCommand: PropTypes.string,\n    deleteCommand: PropTypes.string,\n    commitCommand: PropTypes.string,\n    cancelCommand: PropTypes.string,\n  }),\n};\n\nTableEditColumn.defaultProps = {\n  showAddCommand: false,\n  showEditCommand: false,\n  showDeleteCommand: false,\n  width: 140,\n  messages: {},\n};\n\nTableEditColumn.components = {\n  cellComponent: 'Cell',\n  headerCellComponent: 'HeaderCell',\n  commandComponent: 'Command',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { memoize } from '@devexpress/dx-core';\nimport {\n  Plugin, Getter, Action, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithWidths,\n  tableColumnsWithDraftWidths,\n  changeTableColumnWidth,\n  draftTableColumnWidth,\n  cancelTableColumnWidthDraft,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'Table' },\n];\n\nexport class TableColumnResizing extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columnWidths: props.columnWidths || props.defaultColumnWidths,\n      draftColumnWidths: [],\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        columnWidths: () => {\n          const { onColumnWidthsChange } = this.props;\n          return onColumnWidthsChange;\n        },\n      },\n    );\n\n    this.tableColumnsComputed = memoize(\n      columnWidths => ({ tableColumns }) => tableColumnsWithWidths(tableColumns, columnWidths),\n    );\n    this.tableColumnsDraftComputed = memoize(\n      draftColumnWidths => (\n        { tableColumns },\n      ) => tableColumnsWithDraftWidths(tableColumns, draftColumnWidths),\n    );\n\n    this.changeTableColumnWidth = stateHelper.applyReducer.bind(\n      stateHelper, (prevState, payload) => {\n        const { minColumnWidth } = this.props;\n        return changeTableColumnWidth(\n          prevState,\n          { ...payload, minColumnWidth },\n        );\n      },\n    );\n    this.draftTableColumnWidth = stateHelper.applyReducer.bind(\n      stateHelper, (prevState, payload) => {\n        const { minColumnWidth } = this.props;\n        return draftTableColumnWidth(\n          prevState,\n          { ...payload, minColumnWidth },\n        );\n      },\n    );\n    this.cancelTableColumnWidthDraft = stateHelper.applyReducer.bind(\n      stateHelper, cancelTableColumnWidthDraft,\n    );\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      columnWidths = prevState.columnWidths,\n    } = nextProps;\n\n    return {\n      columnWidths,\n    };\n  }\n\n  render() {\n    const { columnWidths, draftColumnWidths } = this.state;\n\n    const tableColumnsComputed = this.tableColumnsComputed(columnWidths);\n    const tableColumnsDraftComputed = this.tableColumnsDraftComputed(draftColumnWidths);\n\n    return (\n      <Plugin\n        name=\"TableColumnResizing\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumnResizingEnabled\" value />\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Getter name=\"tableColumns\" computed={tableColumnsDraftComputed} />\n        <Action name=\"changeTableColumnWidth\" action={this.changeTableColumnWidth} />\n        <Action name=\"draftTableColumnWidth\" action={this.draftTableColumnWidth} />\n        <Action name=\"cancelTableColumnWidthDraft\" action={this.cancelTableColumnWidthDraft} />\n      </Plugin>\n    );\n  }\n}\n\nTableColumnResizing.propTypes = {\n  defaultColumnWidths: PropTypes.array,\n  columnWidths: PropTypes.array,\n  onColumnWidthsChange: PropTypes.func,\n  minColumnWidth: PropTypes.number.isRequired,\n};\n\nTableColumnResizing.defaultProps = {\n  defaultColumnWidths: [],\n  columnWidths: undefined,\n  onColumnWidthsChange: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Template, TemplatePlaceholder, Plugin,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport { pageCount } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'PagingState' },\n];\n\nconst defaultMessages = {\n  showAll: 'All',\n  info: ({ from, to, count }) => `${from}${from < to ? `-${to}` : ''} of ${count}`,\n};\n\nexport class PagingPanel extends React.PureComponent {\n  render() {\n    const {\n      containerComponent: Pager,\n      pageSizes,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n\n    return (\n      <Plugin\n        name=\"PagingPanel\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"footer\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ currentPage, pageSize, totalCount }, { setCurrentPage, setPageSize }) => (\n              <Pager\n                currentPage={currentPage}\n                pageSize={pageSize}\n                totalCount={totalCount}\n                totalPages={pageCount(totalCount, pageSize)}\n                pageSizes={pageSizes}\n                getMessage={getMessage}\n                onCurrentPageChange={setCurrentPage}\n                onPageSizeChange={setPageSize}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nPagingPanel.propTypes = {\n  pageSizes: PropTypes.arrayOf(PropTypes.number),\n  containerComponent: PropTypes.func.isRequired,\n  messages: PropTypes.shape({\n    showAll: PropTypes.string,\n    info: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]),\n  }),\n};\n\nPagingPanel.defaultProps = {\n  pageSizes: [],\n  messages: {},\n};\n\nPagingPanel.components = {\n  containerComponent: 'Container',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { DragSource } from '@devexpress/dx-react-core';\n\nexport class ItemLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dragging: false,\n    };\n  }\n\n  render() {\n    const {\n      item,\n      itemComponent: Item,\n      draggingEnabled,\n      onDragStart,\n      onDragEnd,\n    } = this.props;\n    const { dragging } = this.state;\n\n    const itemElement = <Item item={{ ...item, draft: dragging || item.draft }} />;\n\n    return (draggingEnabled ? (\n      <DragSource\n        payload={[{ type: 'column', columnName: item.column.name }]}\n        onStart={() => {\n          this.setState({ dragging: true });\n          onDragStart();\n        }}\n        onEnd={() => {\n          this.setState({ dragging: false });\n          onDragEnd();\n        }}\n      >\n        {itemElement}\n      </DragSource>\n    ) : (\n      itemElement\n    ));\n  }\n}\n\nItemLayout.propTypes = {\n  item: PropTypes.shape({\n    column: PropTypes.object,\n    draft: PropTypes.bool,\n  }).isRequired,\n  itemComponent: PropTypes.func.isRequired,\n  draggingEnabled: PropTypes.bool,\n  onDragStart: PropTypes.func,\n  onDragEnd: PropTypes.func,\n};\n\nItemLayout.defaultProps = {\n  draggingEnabled: false,\n  onDragStart: () => {},\n  onDragEnd: () => {},\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport { DropTarget } from '@devexpress/dx-react-core';\nimport { getGroupCellTargetIndex } from '@devexpress/dx-grid-core';\nimport { ItemLayout } from './group-panel-layout/item-layout';\n\nexport class GroupPanelLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sourceColumnName: null,\n      targetItemIndex: -1,\n    };\n    this.handleDragEvent = (eventHandler, { payload, ...restArgs }) => {\n      const { isColumnGroupingEnabled } = this.props;\n      const { columnName } = payload[0];\n\n      if (isColumnGroupingEnabled(columnName)) {\n        eventHandler({ payload, ...restArgs });\n      }\n    };\n    this.onEnter = ({ payload }) => {\n      this.setState({\n        sourceColumnName: payload[0].columnName,\n      });\n    };\n    this.onOver = ({ clientOffset }) => {\n      const { onGroupDraft, items } = this.props;\n      const { sourceColumnName, targetItemIndex: prevTargetItemIndex } = this.state;\n      // eslint-disable-next-line react/no-find-dom-node\n      const itemGeometries = this.itemRefs.map(ref => findDOMNode(ref).getBoundingClientRect());\n      const sourceItemIndex = items.findIndex(({ column }) => column.name === sourceColumnName);\n      const targetItemIndex = getGroupCellTargetIndex(\n        itemGeometries,\n        sourceItemIndex,\n        clientOffset,\n      );\n\n      if (prevTargetItemIndex === targetItemIndex) return;\n\n      onGroupDraft({\n        columnName: sourceColumnName,\n        groupIndex: targetItemIndex,\n      });\n      this.setState({ targetItemIndex });\n    };\n    this.onLeave = () => {\n      const { onGroupDraft } = this.props;\n      const { sourceColumnName } = this.state;\n      if (!this.draggingColumnName) {\n        this.resetState();\n        return;\n      }\n      onGroupDraft({\n        columnName: sourceColumnName,\n        groupIndex: -1,\n      });\n      this.setState({\n        targetItemIndex: -1,\n      });\n    };\n    this.onDrop = () => {\n      const { onGroup } = this.props;\n      const { sourceColumnName, targetItemIndex } = this.state;\n      this.resetState();\n      onGroup({\n        columnName: sourceColumnName,\n        groupIndex: targetItemIndex,\n      });\n    };\n    this.onDragStart = (columnName) => {\n      this.draggingColumnName = columnName;\n    };\n    this.onDragEnd = () => {\n      this.draggingColumnName = null;\n      const { sourceColumnName, targetItemIndex } = this.state;\n      const { onGroup } = this.props;\n      if (sourceColumnName && targetItemIndex === -1) {\n        onGroup({\n          columnName: sourceColumnName,\n        });\n      }\n      this.resetState();\n    };\n  }\n\n  resetState() {\n    const { onGroupDraftCancel } = this.props;\n    onGroupDraftCancel();\n    this.setState({\n      sourceColumnName: null,\n      targetItemIndex: -1,\n    });\n  }\n\n  render() {\n    const {\n      items,\n      emptyMessageComponent: EmptyMessage,\n      containerComponent: Container,\n      itemComponent: Item,\n      draggingEnabled,\n      isColumnGroupingEnabled,\n    } = this.props;\n\n    this.itemRefs = [];\n\n    const groupPanel = (items.length ? (\n      <Container>\n        {items.map((item) => {\n          const { name: columnName } = item.column;\n          return (\n            <ItemLayout\n              key={columnName}\n              ref={element => element && this.itemRefs.push(element)}\n              item={item}\n              itemComponent={Item}\n              draggingEnabled={draggingEnabled && isColumnGroupingEnabled(columnName)}\n              onDragStart={() => this.onDragStart(columnName)}\n              onDragEnd={this.onDragEnd}\n            />\n          );\n        })}\n      </Container>\n    ) : (\n      <EmptyMessage />\n    ));\n\n    return draggingEnabled\n      ? (\n        <DropTarget\n          onEnter={args => this.handleDragEvent(this.onEnter, args)}\n          onOver={args => this.handleDragEvent(this.onOver, args)}\n          onLeave={args => this.handleDragEvent(this.onLeave, args)}\n          onDrop={args => this.handleDragEvent(this.onDrop, args)}\n        >\n          {groupPanel}\n        </DropTarget>\n      )\n      : groupPanel;\n  }\n}\n\nGroupPanelLayout.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    column: PropTypes.object,\n    draft: PropTypes.bool,\n  })).isRequired,\n  onGroup: PropTypes.func,\n  itemComponent: PropTypes.func.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  emptyMessageComponent: PropTypes.func.isRequired,\n  draggingEnabled: PropTypes.bool,\n  isColumnGroupingEnabled: PropTypes.func,\n  onGroupDraft: PropTypes.func,\n  onGroupDraftCancel: PropTypes.func,\n};\n\nGroupPanelLayout.defaultProps = {\n  onGroup: () => {},\n  draggingEnabled: false,\n  isColumnGroupingEnabled: () => {},\n  onGroupDraft: () => {},\n  onGroupDraftCancel: () => {},\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Template, TemplatePlaceholder, Plugin, TemplateConnector, withComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  groupingPanelItems,\n  getColumnSortingDirection,\n} from '@devexpress/dx-grid-core';\nimport { GroupPanelLayout as Layout } from '../components/group-panel-layout';\n\nconst defaultMessages = {\n  groupByColumn: 'Drag a column header here to group by that column',\n};\n\nclass GroupingPanelRaw extends React.PureComponent {\n  render() {\n    const {\n      layoutComponent: LayoutComponent,\n      containerComponent: Container,\n      itemComponent: Item,\n      emptyMessageComponent: EmptyMessage,\n      showSortingControls,\n      showGroupingControls,\n      messages,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n\n    const EmptyMessagePlaceholder = () => (\n      <EmptyMessage\n        getMessage={getMessage}\n      />\n    );\n\n    const ItemPlaceholder = ({ item }) => {\n      const { name: columnName } = item.column;\n\n      return (\n        <TemplateConnector>\n          {(\n            { sorting, isColumnSortingEnabled, isColumnGroupingEnabled },\n            { changeColumnGrouping, changeColumnSorting },\n          ) => {\n            const sortingEnabled = isColumnSortingEnabled && isColumnSortingEnabled(columnName);\n            const groupingEnabled = isColumnGroupingEnabled && isColumnGroupingEnabled(columnName);\n\n            return (\n              <Item\n                item={item}\n                sortingEnabled={sortingEnabled}\n                groupingEnabled={groupingEnabled}\n                showSortingControls={showSortingControls}\n                sortingDirection={showSortingControls\n                  ? getColumnSortingDirection(sorting, columnName) : undefined}\n                showGroupingControls={showGroupingControls}\n                onGroup={() => changeColumnGrouping({ columnName })}\n                onSort={(\n                  { direction, keepOther },\n                ) => changeColumnSorting({ columnName, direction, keepOther })}\n              />\n            );\n          }}\n        </TemplateConnector>\n      );\n    };\n\n    return (\n      <Plugin\n        name=\"GroupingPanel\"\n        dependencies={[\n          { name: 'GroupingState' },\n          { name: 'Toolbar' },\n          { name: 'SortingState', optional: !showSortingControls },\n        ]}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplateConnector>\n            {({\n              columns, grouping, draftGrouping, draggingEnabled, isColumnGroupingEnabled,\n            }, {\n              changeColumnGrouping, draftColumnGrouping, cancelColumnGroupingDraft,\n            }) => (\n              <LayoutComponent\n                items={groupingPanelItems(columns, grouping, draftGrouping)}\n                isColumnGroupingEnabled={isColumnGroupingEnabled}\n                draggingEnabled={draggingEnabled}\n                onGroup={changeColumnGrouping}\n                onGroupDraft={draftColumnGrouping}\n                onGroupDraftCancel={cancelColumnGroupingDraft}\n                itemComponent={ItemPlaceholder}\n                emptyMessageComponent={EmptyMessagePlaceholder}\n                containerComponent={Container}\n              />\n            )}\n          </TemplateConnector>\n          <TemplatePlaceholder />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nGroupingPanelRaw.propTypes = {\n  showSortingControls: PropTypes.bool,\n  showGroupingControls: PropTypes.bool,\n  layoutComponent: PropTypes.func.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  itemComponent: PropTypes.func.isRequired,\n  emptyMessageComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nGroupingPanelRaw.defaultProps = {\n  showSortingControls: false,\n  showGroupingControls: false,\n  messages: {},\n};\n\nGroupingPanelRaw.components = {\n  layoutComponent: 'Layout',\n  containerComponent: 'Container',\n  itemComponent: 'Item',\n  emptyMessageComponent: 'EmptyMessage',\n};\n\nexport const GroupingPanel = withComponents({ Layout })(GroupingPanelRaw);\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Plugin, Template, Getter } from '@devexpress/dx-react-core';\nimport { getAvailableFilterOperationsGetter } from '@devexpress/dx-grid-core';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class DataTypeProvider extends React.PureComponent {\n  render() {\n    const {\n      for: columnNames,\n      formatterComponent: Formatter,\n      editorComponent: Editor,\n      availableFilterOperations,\n    } = this.props;\n\n    const getAvailableFilterOperationsComputed = (\n      { getAvailableFilterOperations },\n    ) => getAvailableFilterOperationsGetter(\n      getAvailableFilterOperations,\n      availableFilterOperations,\n      columnNames,\n    );\n\n    return (\n      <Plugin name=\"DataTypeProvider\">\n        <Getter name=\"getAvailableFilterOperations\" computed={getAvailableFilterOperationsComputed} />\n        {Formatter\n          ? (\n            <Template\n              name=\"valueFormatter\"\n              predicate={({ column }) => columnNames.includes(column.name)}\n            >\n              {params => <Formatter {...params} />}\n            </Template>\n          )\n          : null\n        }\n        {Editor\n          ? (\n            <Template\n              name=\"valueEditor\"\n              predicate={({ column }) => columnNames.includes(column.name)}\n            >\n              {params => <Editor {...params} />}\n            </Template>\n          )\n          : null\n        }\n      </Plugin>\n    );\n  }\n}\n\nDataTypeProvider.propTypes = {\n  for: PropTypes.arrayOf(PropTypes.string).isRequired,\n  formatterComponent: PropTypes.func,\n  editorComponent: PropTypes.func,\n  availableFilterOperations: PropTypes.arrayOf(PropTypes.string),\n};\n\nDataTypeProvider.defaultProps = {\n  formatterComponent: undefined,\n  editorComponent: undefined,\n  availableFilterOperations: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Action,\n  Getter,\n  Plugin,\n  Template,\n  TemplateConnector,\n  TemplatePlaceholder,\n  createStateHelper,\n} from '@devexpress/dx-react-core';\nimport {\n  toggleColumn,\n  visibleTableColumns,\n  tableDataColumnsExist,\n  getColumnExtensionValueGetter,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'Table' },\n];\n\nconst defaultMessages = {\n  noColumns: 'Nothing to show',\n};\n\nconst visibleTableColumnsComputed = (\n  { tableColumns, hiddenColumnNames },\n) => visibleTableColumns(tableColumns, hiddenColumnNames);\n\nconst columnExtensionValueGetter = (columnExtensions, defaultValue) => getColumnExtensionValueGetter(columnExtensions, 'togglingEnabled', defaultValue);\n\nexport class TableColumnVisibility extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hiddenColumnNames: props.hiddenColumnNames || props.defaultHiddenColumnNames,\n    };\n    const stateHelper = createStateHelper(\n      this,\n      {\n        hiddenColumnNames: () => {\n          const { onHiddenColumnNamesChange } = this.props;\n          return onHiddenColumnNamesChange;\n        },\n      },\n    );\n\n    this.toggleColumnVisibility = stateHelper.applyFieldReducer.bind(stateHelper, 'hiddenColumnNames', toggleColumn);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      hiddenColumnNames = prevState.hiddenColumnNames,\n    } = nextProps;\n\n    return {\n      hiddenColumnNames,\n    };\n  }\n\n  render() {\n    const {\n      emptyMessageComponent: EmptyMessage,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n    const { hiddenColumnNames } = this.state;\n    const { columnExtensions, columnTogglingEnabled } = this.props;\n\n    return (\n      <Plugin\n        name=\"TableColumnVisibility\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"hiddenColumnNames\" value={hiddenColumnNames} />\n        <Getter name=\"tableColumns\" computed={visibleTableColumnsComputed} />\n        <Getter\n          name=\"isColumnTogglingEnabled\"\n          value={columnExtensionValueGetter(columnExtensions, columnTogglingEnabled)}\n        />\n        <Action\n          name=\"toggleColumnVisibility\"\n          action={this.toggleColumnVisibility}\n        />\n\n        <Template name=\"table\">\n          {params => (\n            <TemplateConnector>\n              {({ tableColumns }) => (tableDataColumnsExist(tableColumns)\n                ? <TemplatePlaceholder />\n                : (\n                  <EmptyMessage\n                    getMessage={getMessage}\n                    {...params}\n                  />\n                )\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableColumnVisibility.propTypes = {\n  hiddenColumnNames: PropTypes.arrayOf(PropTypes.string),\n  defaultHiddenColumnNames: PropTypes.arrayOf(PropTypes.string),\n  emptyMessageComponent: PropTypes.func.isRequired,\n  onHiddenColumnNamesChange: PropTypes.func,\n  messages: PropTypes.object,\n  columnExtensions: PropTypes.array,\n  columnTogglingEnabled: PropTypes.bool,\n};\n\nTableColumnVisibility.defaultProps = {\n  hiddenColumnNames: undefined,\n  defaultHiddenColumnNames: [],\n  onHiddenColumnNamesChange: undefined,\n  messages: {},\n  columnExtensions: undefined,\n  columnTogglingEnabled: true,\n};\n\nTableColumnVisibility.components = {\n  emptyMessageComponent: 'EmptyMessage',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport {\n  Template,\n  Plugin,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\n\nexport class Toolbar extends React.PureComponent {\n  render() {\n    const {\n      rootComponent: Root,\n      flexibleSpaceComponent: FlexibleSpaceComponent,\n    } = this.props;\n    return (\n      <Plugin\n        name=\"Toolbar\"\n      >\n        <Template name=\"header\">\n          <Root>\n            <TemplatePlaceholder name=\"toolbarContent\" />\n          </Root>\n          <TemplatePlaceholder />\n        </Template>\n        <Template name=\"toolbarContent\">\n          <FlexibleSpaceComponent />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nToolbar.propTypes = {\n  rootComponent: PropTypes.func.isRequired,\n  flexibleSpaceComponent: PropTypes.func.isRequired,\n};\n\nToolbar.components = {\n  rootComponent: 'Root',\n  flexibleSpaceComponent: 'FlexibleSpace',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Action, Plugin, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport { toggleRowExpanded } from '@devexpress/dx-grid-core';\n\nexport class TreeDataState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expandedRowIds: props.expandedRowIds || props.defaultExpandedRowIds,\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        expandedRowIds: () => {\n          const { onExpandedRowIdsChange } = this.props;\n          return onExpandedRowIdsChange;\n        },\n      },\n    );\n\n    this.toggleRowExpanded = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'expandedRowIds', toggleRowExpanded);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      expandedRowIds = prevState.expandedRowIds,\n    } = nextProps;\n\n    return {\n      expandedRowIds,\n    };\n  }\n\n  render() {\n    const { expandedRowIds } = this.state;\n\n    return (\n      <Plugin\n        name=\"TreeDataState\"\n      >\n        <Getter name=\"expandedRowIds\" value={expandedRowIds} />\n        {' '}\n        {/* collision =( */}\n        <Action name=\"toggleRowExpanded\" action={this.toggleRowExpanded} />\n      </Plugin>\n    );\n  }\n}\n\nTreeDataState.propTypes = {\n  expandedRowIds: PropTypes.array,\n  defaultExpandedRowIds: PropTypes.array,\n  onExpandedRowIdsChange: PropTypes.func,\n};\n\nTreeDataState.defaultProps = {\n  expandedRowIds: undefined,\n  defaultExpandedRowIds: [],\n  onExpandedRowIdsChange: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport {\n  customTreeRowLevelKeyGetter,\n  customTreeRowIdGetter,\n  customTreeRowsWithMeta,\n  expandedTreeRows,\n  collapsedTreeRowsGetter,\n  isTreeRowLeafGetter,\n  getTreeRowLevelGetter,\n  unwrappedCustomTreeRows,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'TreeDataState' },\n];\n\nconst expandedTreeRowsComputed = (\n  { rows, getRowId, expandedRowIds },\n) => expandedTreeRows(rows, getRowId, expandedRowIds);\nconst getRowIdComputed = (\n  { getRowId, rows },\n) => customTreeRowIdGetter(getRowId, rows);\nconst getRowLevelKeyComputed = (\n  { getRowLevelKey, rows },\n) => customTreeRowLevelKeyGetter(getRowLevelKey, rows);\nconst isTreeRowLeafComputed = ({ rows }) => isTreeRowLeafGetter(rows);\nconst getTreeRowLevelComputed = ({ rows }) => getTreeRowLevelGetter(rows);\nconst collapsedTreeRowsGetterComputed = (\n  { rows, getCollapsedRows },\n) => collapsedTreeRowsGetter(getCollapsedRows, rows);\nconst unwrappedTreeRowsComputed = ({ rows }) => unwrappedCustomTreeRows(rows);\n\nexport class CustomTreeData extends React.PureComponent {\n  render() {\n    const {\n      getChildRows,\n    } = this.props;\n    const treeRowsComputed = ({ rows }) => customTreeRowsWithMeta(rows, getChildRows);\n\n    return (\n      <Plugin\n        name=\"CustomTreeData\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={treeRowsComputed} />\n        <Getter name=\"getRowId\" computed={getRowIdComputed} />\n        <Getter name=\"getRowLevelKey\" computed={getRowLevelKeyComputed} />\n        <Getter name=\"isTreeRowLeaf\" computed={isTreeRowLeafComputed} />\n        <Getter name=\"getTreeRowLevel\" computed={getTreeRowLevelComputed} />\n        <Getter name=\"rows\" computed={expandedTreeRowsComputed} />\n        <Getter name=\"getCollapsedRows\" computed={collapsedTreeRowsGetterComputed} />\n        <Getter name=\"rows\" computed={unwrappedTreeRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nCustomTreeData.propTypes = {\n  getChildRows: PropTypes.func.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Template, Getter, Plugin, TemplateConnector, TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport { isTreeTableCell } from '@devexpress/dx-grid-core';\n\nexport class TableTreeColumn extends React.PureComponent {\n  render() {\n    const {\n      for: forColumnName,\n      showSelectionControls,\n      showSelectAll,\n      indentComponent: Indent,\n      expandButtonComponent: ExpandButton,\n      checkboxComponent: Checkbox,\n      contentComponent: Content,\n      cellComponent: Cell,\n    } = this.props;\n    return (\n      <Plugin\n        name=\"TableTreeColumn\"\n        dependencies={[\n          { name: 'DataTypeProvider', optional: true },\n          { name: 'TreeDataState' },\n          { name: 'SelectionState', optional: !showSelectionControls },\n          { name: 'IntegratedSelection', optional: !showSelectAll },\n          { name: 'Table' },\n          { name: 'TableHeaderRow', optional: true },\n        ]}\n      >\n        <Getter name=\"tableTreeColumnName\" value={forColumnName} />\n        <Template\n          name=\"tableHeaderCellBefore\"\n          predicate={({ column }) => column.name === forColumnName}\n        >\n          <ExpandButton\n            visible={false}\n          />\n          {showSelectionControls && showSelectAll && (\n            <TemplateConnector>\n              {({ selectAllAvailable, allSelected, someSelected }, { toggleSelectAll }) => (\n                <Checkbox\n                  disabled={!selectAllAvailable}\n                  checked={allSelected}\n                  indeterminate={someSelected}\n                  onChange={toggleSelectAll}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={(\n            { tableRow, tableColumn },\n          ) => isTreeTableCell(tableRow, tableColumn, forColumnName)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({\n                getCollapsedRows, expandedRowIds, selection, isTreeRowLeaf, getTreeRowLevel,\n                getCellValue,\n              }, {\n                toggleRowExpanded, toggleSelection,\n              }) => {\n                const { row, rowId } = params.tableRow;\n                const columnName = params.tableColumn.column.name;\n                const value = getCellValue(row, columnName);\n                const collapsedRows = getCollapsedRows(row);\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueFormatter\"\n                    params={{\n                      row,\n                      column: params.tableColumn.column,\n                      value,\n                    }}\n                  >\n                    {content => (\n                      <Cell\n                        {...params}\n                        row={row}\n                        column={params.tableColumn.column}\n                        value={value}\n                      >\n                        <Indent\n                          level={getTreeRowLevel(row)}\n                        />\n                        <ExpandButton\n                          visible={collapsedRows ? !!collapsedRows.length : !isTreeRowLeaf(row)}\n                          expanded={expandedRowIds.indexOf(rowId) > -1}\n                          onToggle={() => toggleRowExpanded({ rowId })}\n                        />\n                        {showSelectionControls && (\n                          <Checkbox\n                            disabled={false}\n                            checked={selection.indexOf(rowId) > -1}\n                            indeterminate={false}\n                            onChange={() => toggleSelection({ rowIds: [rowId] })}\n                          />\n                        )}\n                        <Content>\n                          {content || value}\n                        </Content>\n                      </Cell>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableTreeColumn.propTypes = {\n  for: PropTypes.string.isRequired,\n  showSelectionControls: PropTypes.bool,\n  showSelectAll: PropTypes.bool,\n  cellComponent: PropTypes.func.isRequired,\n  indentComponent: PropTypes.func.isRequired,\n  expandButtonComponent: PropTypes.func.isRequired,\n  checkboxComponent: PropTypes.func.isRequired,\n  contentComponent: PropTypes.func.isRequired,\n};\n\nTableTreeColumn.defaultProps = {\n  showSelectionControls: false,\n  showSelectAll: false,\n};\n\nTableTreeColumn.components = {\n  cellComponent: 'Cell',\n  contentComponent: 'Content',\n  indentComponent: 'Indent',\n  expandButtonComponent: 'ExpandButton',\n  checkboxComponent: 'Checkbox',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Action, Plugin, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport { changeSearchValue, searchFilterExpression } from '@devexpress/dx-grid-core';\n\nexport class SearchState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: props.value || props.defaultValue,\n    };\n    const stateHelper = createStateHelper(this, {\n      value: () => {\n        const { onValueChange } = this.props;\n        return onValueChange;\n      },\n    });\n\n    this.changeValue = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'value', changeSearchValue);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      value = prevState.value,\n    } = nextProps;\n\n    return {\n      value,\n    };\n  }\n\n  render() {\n    const { value } = this.state;\n    const filterExpressionComputed = (\n      { filterExpression, columns },\n    ) => searchFilterExpression(value, columns, filterExpression);\n\n    return (\n      <Plugin\n        name=\"SearchState\"\n      >\n        <Getter name=\"filterExpression\" computed={filterExpressionComputed} />\n        <Getter name=\"searchValue\" value={value} />\n        <Action name=\"changeSearchValue\" action={this.changeValue} />\n      </Plugin>\n    );\n  }\n}\n\nSearchState.propTypes = {\n  value: PropTypes.string,\n  defaultValue: PropTypes.string,\n  onValueChange: PropTypes.func,\n};\n\nSearchState.defaultProps = {\n  value: undefined,\n  defaultValue: '',\n  onValueChange: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Template,\n  TemplatePlaceholder,\n  Plugin,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\n\nconst pluginDependencies = [\n  { name: 'Toolbar' },\n  { name: 'SearchState' },\n];\n\nconst defaultMessages = {\n  searchPlaceholder: 'Search...',\n};\n\nexport class SearchPanel extends React.PureComponent {\n  render() {\n    const { inputComponent: Input, messages } = this.props;\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n\n    return (\n      <Plugin\n        name=\"SearchPanel\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ searchValue }, { changeSearchValue }) => (\n              <Input\n                value={searchValue}\n                onValueChange={changeSearchValue}\n                getMessage={getMessage}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nSearchPanel.propTypes = {\n  inputComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nSearchPanel.defaultProps = {\n  messages: {},\n};\n\nSearchPanel.components = {\n  inputComponent: 'Input',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter,\n  Template,\n  Plugin,\n  TemplatePlaceholder,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  isFixedTableRow,\n  tableColumnsWithFixed,\n  tableHeaderRowsWithFixed,\n  tableHeaderColumnChainsWithFixed,\n  calculateFixedColumnProps,\n} from '@devexpress/dx-grid-core';\n\nconst tableHeaderRowsComputed = ({ tableHeaderRows }) => tableHeaderRowsWithFixed(tableHeaderRows);\nconst tableHeaderColumnChainsComputed = ({\n  tableColumns, tableHeaderRows, tableHeaderColumnChains,\n}) => tableHeaderColumnChainsWithFixed(tableHeaderColumnChains, tableHeaderRows, tableColumns);\n\nconst CellPlaceholder = props => <TemplatePlaceholder params={props} />;\n\nconst pluginDependencies = [\n  { name: 'Table' },\n  { name: 'TableBandHeader', optional: true },\n  { name: 'TableColumnReordering', optional: true },\n  { name: 'TableEditColumn', optional: true },\n  { name: 'TableEditRow', optional: true },\n  { name: 'TableFilterRow', optional: true },\n  { name: 'TableHeaderRow', optional: true },\n  { name: 'TableSelection', optional: true },\n  { name: 'TableSummaryRow', optional: true },\n  { name: 'TableTreeColumn', optional: true },\n];\n\nexport class TableFixedColumns extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tableColumnDimensions: {},\n    };\n  }\n\n  handleListenerSizeChange(key, width) {\n    this.setState(state => ({\n      tableColumnDimensions: {\n        ...state.tableColumnDimensions,\n        [key]: width,\n      },\n    }));\n  }\n\n  render() {\n    const {\n      leftColumns,\n      rightColumns,\n      cellComponent: Cell,\n      listenerRowComponent: ListenerRow,\n      listenerCellComponent: ListenerCell,\n    } = this.props;\n\n    const tableColumnsComputed = ({ tableColumns }) => tableColumnsWithFixed(\n      tableColumns,\n      leftColumns,\n      rightColumns,\n    );\n\n    return (\n      <Plugin\n        name=\"TableFixedColumns\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Getter name=\"tableHeaderColumnChains\" computed={tableHeaderColumnChainsComputed} />\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableColumn }) => !!tableColumn.fixed}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ tableColumns, tableHeaderColumnChains }) => {\n                const { tableColumnDimensions } = this.state;\n                const fixedColumnProps = calculateFixedColumnProps(\n                  params,\n                  { leftColumns, rightColumns },\n                  tableColumns,\n                  tableColumnDimensions,\n                  tableHeaderColumnChains,\n                );\n\n                return (\n                  <Cell\n                    {...params}\n                    {...fixedColumnProps}\n                    component={CellPlaceholder}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isFixedTableRow(tableRow)}\n        >\n          {params => (\n            <ListenerRow {...params} />\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => isFixedTableRow(tableRow)}\n        >\n          {params => (\n            <ListenerCell\n              {...params}\n              listen={!!params.tableColumn.fixed}\n              onSizeChange={({\n                width,\n              }) => this.handleListenerSizeChange(params.tableColumn.key, width)}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableFixedColumns.propTypes = {\n  leftColumns: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.symbol])),\n  rightColumns: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.symbol])),\n  cellComponent: PropTypes.func.isRequired,\n  listenerRowComponent: PropTypes.func.isRequired,\n  listenerCellComponent: PropTypes.func.isRequired,\n};\n\nTableFixedColumns.defaultProps = {\n  leftColumns: [],\n  rightColumns: [],\n};\n\nTableFixedColumns.components = {\n  cellComponent: 'Cell',\n  listenerRowComponent: 'ListenerRow',\n  listenerCellComponent: 'ListenerCell',\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\n\nexport class SummaryState extends React.PureComponent {\n  render() {\n    const { totalItems, groupItems, treeItems } = this.props;\n\n    return (\n      <Plugin\n        name=\"SummaryState\"\n      >\n        <Getter name=\"totalSummaryItems\" value={totalItems} />\n        <Getter name=\"groupSummaryItems\" value={groupItems} />\n        <Getter name=\"treeSummaryItems\" value={treeItems} />\n      </Plugin>\n    );\n  }\n}\n\nSummaryState.propTypes = {\n  totalItems: PropTypes.array,\n  groupItems: PropTypes.array,\n  treeItems: PropTypes.array,\n};\n\nSummaryState.defaultProps = {\n  totalItems: undefined,\n  groupItems: undefined,\n  treeItems: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport {\n  defaultSummaryCalculator,\n  totalSummaryValues,\n  groupSummaryValues,\n  treeSummaryValues,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'SummaryState' },\n];\n\nexport class IntegratedSummary extends React.PureComponent {\n  render() {\n    const { calculator } = this.props;\n\n    const totalSummaryValuesComputed = ({\n      rows,\n      totalSummaryItems,\n      getCellValue,\n      getRowLevelKey,\n      isGroupRow,\n      getCollapsedRows,\n    }) => totalSummaryValues(\n      rows,\n      totalSummaryItems,\n      getCellValue,\n      getRowLevelKey,\n      isGroupRow,\n      getCollapsedRows,\n      calculator,\n    );\n\n    const groupSummaryValuesComputed = ({\n      rows,\n      groupSummaryItems,\n      getCellValue,\n      getRowLevelKey,\n      isGroupRow,\n    }) => groupSummaryValues(\n      rows,\n      groupSummaryItems,\n      getCellValue,\n      getRowLevelKey,\n      isGroupRow,\n      calculator,\n    );\n\n    const treeSummaryValuesComputed = ({\n      rows,\n      treeSummaryItems,\n      getCellValue,\n      getRowLevelKey,\n      isGroupRow,\n      getRowId,\n    }) => treeSummaryValues(\n      rows,\n      treeSummaryItems,\n      getCellValue,\n      getRowLevelKey,\n      isGroupRow,\n      getRowId,\n      calculator,\n    );\n\n    return (\n      <Plugin\n        name=\"IntegratedSummary\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"totalSummaryValues\" computed={totalSummaryValuesComputed} />\n        <Getter name=\"groupSummaryValues\" computed={groupSummaryValuesComputed} />\n        <Getter name=\"treeSummaryValues\" computed={treeSummaryValuesComputed} />\n      </Plugin>\n    );\n  }\n}\n\nIntegratedSummary.defaultCalculator = defaultSummaryCalculator;\n\nIntegratedSummary.propTypes = {\n  calculator: PropTypes.func,\n};\n\nIntegratedSummary.defaultProps = {\n  calculator: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\n\nconst pluginDependencies = [\n  { name: 'SummaryState' },\n];\n\nexport class CustomSummary extends React.PureComponent {\n  render() {\n    const { totalValues, groupValues, treeValues } = this.props;\n\n    return (\n      <Plugin\n        name=\"CustomSummary\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"totalSummaryValues\" value={totalValues} />\n        <Getter name=\"groupSummaryValues\" value={groupValues} />\n        <Getter name=\"treeSummaryValues\" value={treeValues} />\n      </Plugin>\n    );\n  }\n}\n\nCustomSummary.propTypes = {\n  totalValues: PropTypes.array,\n  groupValues: PropTypes.object,\n  treeValues: PropTypes.object,\n};\n\nCustomSummary.defaultProps = {\n  totalValues: undefined,\n  groupValues: undefined,\n  treeValues: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Getter,\n  Template,\n  Plugin,\n  TemplateConnector,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport {\n  tableRowsWithSummaries,\n  tableRowsWithTotalSummaries,\n  isTotalSummaryTableCell,\n  isGroupSummaryTableCell,\n  isTreeSummaryTableCell,\n  isTotalSummaryTableRow,\n  isGroupSummaryTableRow,\n  isTreeSummaryTableRow,\n  getColumnSummaries,\n  TABLE_TREE_SUMMARY_TYPE,\n  TABLE_GROUP_SUMMARY_TYPE,\n  TABLE_TOTAL_SUMMARY_TYPE,\n} from '@devexpress/dx-grid-core';\n\nconst dependencies = [\n  { name: 'DataTypeProvider', optional: true },\n  { name: 'SummaryState' },\n  { name: 'CustomSummary', optional: true },\n  { name: 'IntegratedSummary', optional: true },\n  { name: 'Table' },\n  { name: 'TableTreeColumn', optional: true },\n];\n\nconst defaultMessages = {\n  sum: 'Sum',\n  min: 'Min',\n  max: 'Max',\n  avg: 'Avg',\n  count: 'Count',\n};\n\nconst tableBodyRowsComputed = ({\n  tableBodyRows,\n  getRowLevelKey,\n  isGroupRow,\n  getRowId,\n}) => tableRowsWithSummaries(tableBodyRows, getRowLevelKey, isGroupRow, getRowId);\nconst tableFooterRowsComputed = ({\n  tableFooterRows,\n}) => tableRowsWithTotalSummaries(tableFooterRows);\n\nconst defaultTypelessSummaries = ['count'];\n\nexport class TableSummaryRow extends React.PureComponent {\n  renderContent(column, columnSummaries) {\n    const {\n      formatlessSummaryTypes,\n      itemComponent: Item,\n      messages,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n    const SummaryItem = ({ summary, children }) => (\n      <Item\n        getMessage={getMessage}\n        type={summary.type}\n        value={summary.value}\n      >\n        {children || String(summary.value)}\n      </Item>\n    );\n\n    return (\n      <React.Fragment>\n        {columnSummaries.map((summary) => {\n          if (summary.value === null\n            || formatlessSummaryTypes.includes(summary.type)\n            || defaultTypelessSummaries.includes(summary.type)) {\n            return <SummaryItem key={summary.type} summary={summary} />;\n          }\n          return (\n            <TemplatePlaceholder\n              key={summary.type}\n              name=\"valueFormatter\"\n              params={{\n                column,\n                value: summary.value,\n              }}\n            >\n              {content => (\n                <SummaryItem summary={summary}>\n                  {content}\n                </SummaryItem>\n              )}\n            </TemplatePlaceholder>\n          );\n        })}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const {\n      totalRowComponent: TotalRow,\n      groupRowComponent: GroupRow,\n      treeRowComponent: TreeRow,\n      totalCellComponent: TotalCell,\n      groupCellComponent: GroupCell,\n      treeCellComponent: TreeCell,\n      treeColumnCellComponent: TreeColumnCell,\n      treeColumnContentComponent: TreeColumnContent,\n      treeColumnIndentComponent: TreeColumnIndent,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"TableSummaryRow\"\n        dependencies={dependencies}\n      >\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Getter name=\"tableFooterRows\" computed={tableFooterRowsComputed} />\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isTotalSummaryTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ totalSummaryItems, totalSummaryValues }) => {\n                const columnSummaries = getColumnSummaries(\n                  totalSummaryItems,\n                  params.tableColumn.column.name,\n                  totalSummaryValues,\n                );\n                return (\n                  <TotalCell\n                    {...params}\n                    column={params.tableColumn.column}\n                  >\n                    {this.renderContent(params.tableColumn.column, columnSummaries)}\n                  </TotalCell>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isGroupSummaryTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ groupSummaryItems, groupSummaryValues }) => {\n                const columnSummaries = getColumnSummaries(\n                  groupSummaryItems,\n                  params.tableColumn.column.name,\n                  groupSummaryValues[params.tableRow.row.compoundKey],\n                );\n                return (\n                  <GroupCell\n                    {...params}\n                    column={params.tableColumn.column}\n                  >\n                    {this.renderContent(params.tableColumn.column, columnSummaries)}\n                  </GroupCell>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isTreeSummaryTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({\n                treeSummaryItems,\n                treeSummaryValues,\n                tableTreeColumnName,\n                getRowId,\n                getTreeRowLevel,\n              }) => {\n                const columnSummaries = getColumnSummaries(\n                  treeSummaryItems,\n                  params.tableColumn.column.name,\n                  treeSummaryValues[getRowId(params.tableRow.row)],\n                );\n                if (tableTreeColumnName === params.tableColumn.column.name) {\n                  return (\n                    <TreeColumnCell\n                      {...params}\n                      column={params.tableColumn.column}\n                    >\n                      <TreeColumnIndent\n                        level={getTreeRowLevel(params.tableRow.row)}\n                      />\n                      <TreeColumnContent>\n                        {this.renderContent(params.tableColumn.column, columnSummaries)}\n                      </TreeColumnContent>\n                    </TreeColumnCell>\n                  );\n                }\n                return (\n                  <TreeCell\n                    {...params}\n                    column={params.tableColumn.column}\n                  >\n                    {this.renderContent(params.tableColumn.column, columnSummaries)}\n                  </TreeCell>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isTotalSummaryTableRow(tableRow)}\n        >\n          {params => (\n            <TotalRow\n              {...params}\n            />\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isGroupSummaryTableRow(tableRow)}\n        >\n          {params => (\n            <GroupRow\n              {...params}\n            />\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isTreeSummaryTableRow(tableRow)}\n        >\n          {params => (\n            <TreeRow\n              {...params}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableSummaryRow.TREE_ROW_TYPE = TABLE_TREE_SUMMARY_TYPE;\nTableSummaryRow.GROUP_ROW_TYPE = TABLE_GROUP_SUMMARY_TYPE;\nTableSummaryRow.TOTAL_ROW_TYPE = TABLE_TOTAL_SUMMARY_TYPE;\n\nTableSummaryRow.propTypes = {\n  formatlessSummaryTypes: PropTypes.array,\n\n  totalRowComponent: PropTypes.func.isRequired,\n  groupRowComponent: PropTypes.func.isRequired,\n  treeRowComponent: PropTypes.func.isRequired,\n\n  totalCellComponent: PropTypes.func.isRequired,\n  groupCellComponent: PropTypes.func.isRequired,\n  treeCellComponent: PropTypes.func.isRequired,\n\n  treeColumnCellComponent: PropTypes.func.isRequired,\n  treeColumnContentComponent: PropTypes.func.isRequired,\n  treeColumnIndentComponent: PropTypes.func.isRequired,\n\n  itemComponent: PropTypes.func.isRequired,\n\n  messages: PropTypes.shape({\n    sum: PropTypes.string,\n    min: PropTypes.string,\n    max: PropTypes.string,\n    avg: PropTypes.string,\n    count: PropTypes.string,\n  }),\n};\n\nTableSummaryRow.defaultProps = {\n  formatlessSummaryTypes: [],\n  messages: {},\n};\n\nTableSummaryRow.components = {\n  totalRowComponent: 'TotalRow',\n  groupRowComponent: 'GroupRow',\n  treeRowComponent: 'TreeRow',\n  totalCellComponent: 'TotalCell',\n  groupCellComponent: 'GroupCell',\n  treeCellComponent: 'TreeCell',\n  treeColumnCellComponent: 'TableTreeCell',\n  treeColumnContentComponent: 'TableTreeContent',\n  treeColumnIndentComponent: 'TableTreeIndent',\n  itemComponent: 'Item',\n};\n","/* globals requestAnimationFrame cancelAnimationFrame */\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  getAnimations,\n  filterActiveAnimations,\n  evalAnimations,\n  TABLE_FLEX_TYPE,\n} from '@devexpress/dx-grid-core';\n\nexport class TableLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      animationState: new Map(),\n    };\n\n    this.animations = new Map();\n    this.savedScrolldWidth = {};\n    this.tableRef = React.createRef();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { columns } = this.props;\n    const { columns: prevColumns } = prevProps;\n\n    const tableWidth = this.getTableWidth(prevColumns, columns);\n    this.animations = getAnimations(prevColumns, columns, tableWidth, this.animations);\n\n    cancelAnimationFrame(this.raf);\n    this.raf = requestAnimationFrame(this.processAnimationFrame.bind(this));\n  }\n\n  getTableWidth(prevColumns, columns) {\n    const { offsetWidth, scrollWidth } = this.tableRef.current;\n    const { animationState } = this.state;\n\n    const widthChanged = this.savedOffsetWidth !== offsetWidth\n      || !this.savedScrolldWidth[columns.length];\n    const columnCountChanged = columns.length !== prevColumns.length;\n\n    if (columnCountChanged || (widthChanged && !animationState.size)) {\n      this.savedScrolldWidth = {};\n      this.savedScrolldWidth[columns.length] = scrollWidth;\n      this.savedOffsetWidth = offsetWidth;\n    }\n\n    return this.savedScrolldWidth[columns.length];\n  }\n\n  getColumns() {\n    const { columns } = this.props;\n    const { animationState } = this.state;\n\n    let result = columns;\n\n    const isFixedWidth = columns.filter(column => column.width === undefined).length === 0;\n    if (isFixedWidth) {\n      result = result.slice();\n      result.push({ key: TABLE_FLEX_TYPE.toString(), type: TABLE_FLEX_TYPE });\n    }\n\n    if (animationState.size) {\n      result = result\n        .map(column => (animationState.has(column.key)\n          ? { ...column, animationState: animationState.get(column.key) }\n          : column));\n    }\n\n    return result;\n  }\n\n  processAnimationFrame() {\n    const { animationState: animationComponentState } = this.state;\n    this.animations = filterActiveAnimations(this.animations);\n\n    if (!this.animations.size) {\n      if (animationComponentState.size) {\n        this.setState({ animationState: new Map() });\n      }\n      return;\n    }\n\n    const animationState = evalAnimations(this.animations);\n    this.setState({ animationState });\n  }\n\n  render() {\n    const {\n      layoutComponent: Layout,\n      minColumnWidth,\n      ...restProps\n    } = this.props;\n    const columns = this.getColumns();\n    const minWidth = columns\n      .map(column => column.width || (column.type === TABLE_FLEX_TYPE ? 0 : minColumnWidth))\n      .reduce((acc, width) => acc + width, 0);\n\n    return (\n      <Layout\n        {...restProps}\n        tableRef={this.tableRef}\n        columns={columns}\n        minWidth={minWidth}\n        minColumnWidth={minColumnWidth}\n      />\n    );\n  }\n}\n\nTableLayout.propTypes = {\n  columns: PropTypes.array.isRequired,\n  minColumnWidth: PropTypes.number.isRequired,\n  layoutComponent: PropTypes.func.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class ColumnGroup extends React.PureComponent {\n  render() {\n    const { columns } = this.props;\n\n    return (\n      <colgroup>\n        {columns.map(column => (\n          <col\n            key={column.key}\n            style={column.width !== undefined\n              ? { width: `${column.width}px` }\n              : null}\n          />\n        ))}\n      </colgroup>\n    );\n  }\n}\n\nColumnGroup.propTypes = {\n  columns: PropTypes.array.isRequired,\n};\n","import * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport * as PropTypes from 'prop-types';\nimport { isEdgeBrowser } from '@devexpress/dx-core';\nimport { Sizer, RefHolder, RefType } from '@devexpress/dx-react-core';\nimport {\n  getCollapsedGrid,\n  TABLE_FLEX_TYPE,\n  TABLE_STUB_TYPE,\n} from '@devexpress/dx-grid-core';\nimport { ColumnGroup } from './column-group';\n\nconst AUTO_HEIGHT = 'auto';\n\nexport class VirtualTableLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rowHeights: new Map(),\n      viewportTop: 0,\n      viewportLeft: 0,\n      width: 800,\n      height: 600,\n    };\n    this.state.headerHeight = props.headerRows\n      .reduce((acc, row) => acc + this.getRowHeight(row), 0);\n    this.state.bodyHeight = 0;\n    this.state.footerHeight = props.footerRows\n      .reduce((acc, row) => acc + this.getRowHeight(row), 0);\n\n    this.rowRefs = new Map();\n    this.blockRefs = new Map();\n    this.registerRowRef = this.registerRowRef.bind(this);\n    this.getRowHeight = this.getRowHeight.bind(this);\n    this.updateViewport = this.updateViewport.bind(this);\n    this.handleContainerSizeChange = this.handleContainerSizeChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.isEdgeBrowser = isEdgeBrowser();\n\n    this.storeRowHeights();\n    this.storeBloksHeights();\n  }\n\n  componentDidUpdate() {\n    this.storeRowHeights();\n    this.storeBloksHeights();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { rowHeights: prevRowHeight } = prevState;\n    const rowHeights = [...nextProps.headerRows, ...nextProps.bodyRows, ...nextProps.footerRows]\n      .reduce(\n        (acc, row) => {\n          const rowHeight = prevRowHeight.get(row.key);\n          if (rowHeight !== undefined) {\n            acc.set(row.key, rowHeight);\n          }\n          return acc;\n        },\n        new Map(),\n      );\n    return { rowHeights };\n  }\n\n  getRowHeight(row) {\n    const { rowHeights } = this.state;\n    const { estimatedRowHeight } = this.props;\n    const storedHeight = rowHeights.get(row.key);\n    if (storedHeight !== undefined) return storedHeight;\n    if (row.height) return row.height;\n    return estimatedRowHeight;\n  }\n\n  storeRowHeights() {\n    const rowsWithChangedHeights = Array.from(this.rowRefs.entries())\n      // eslint-disable-next-line react/no-find-dom-node\n      .map(([row, ref]) => [row, findDOMNode(ref)])\n      .filter(([, node]) => !!node)\n      .map(([row, node]) => [row, node.getBoundingClientRect().height])\n      .filter(([row]) => row.type !== TABLE_STUB_TYPE)\n      .filter(([row, height]) => height !== this.getRowHeight(row));\n\n    if (rowsWithChangedHeights.length) {\n      const { rowHeights } = this.state;\n      rowsWithChangedHeights\n        .forEach(([row, height]) => rowHeights.set(row.key, height));\n\n      this.setState({\n        rowHeights,\n      });\n    }\n  }\n\n  storeBloksHeights() {\n    const headerHeight = this.blockRefs.get('header')\n      // eslint-disable-next-line react/no-find-dom-node\n      ? findDOMNode(this.blockRefs.get('header')).getBoundingClientRect().height\n      : 0;\n\n    const bodyHeight = this.blockRefs.get('body')\n      // eslint-disable-next-line react/no-find-dom-node\n      ? findDOMNode(this.blockRefs.get('body')).getBoundingClientRect().height\n      : 0;\n\n    const footerHeight = this.blockRefs.get('footer')\n      // eslint-disable-next-line react/no-find-dom-node\n      ? findDOMNode(this.blockRefs.get('footer')).getBoundingClientRect().height\n      : 0;\n\n    const {\n      headerHeight: prevHeaderHeight,\n      bodyHeight: prevBodyHeight,\n      footerHeight: prevFooterHeight,\n    } = this.state;\n\n    if (prevHeaderHeight !== headerHeight\n      || prevBodyHeight !== bodyHeight\n      || prevFooterHeight !== footerHeight) {\n      this.setState({\n        headerHeight,\n        bodyHeight,\n        footerHeight,\n      });\n    }\n  }\n\n  registerRowRef(row, ref) {\n    if (ref === null) {\n      this.rowRefs.delete(row);\n    } else {\n      this.rowRefs.set(row, ref);\n    }\n  }\n\n  registerBlockRef(name, ref) {\n    if (ref === null) {\n      this.blockRefs.delete(name);\n    } else {\n      this.blockRefs.set(name, ref);\n    }\n  }\n\n  shouldSkipScrollEvent(e) {\n    const node = e.target;\n\n    // NOTE: prevent nested scroll to update viewport\n    if (node !== e.currentTarget) {\n      return true;\n    }\n    // NOTE: prevent iOS to flicker in bounces and correct rendering on high dpi screens\n    const correction = this.isEdgeBrowser ? 1 : 0;\n    const nodeHorizontalOffset = parseInt(node.scrollLeft + node.clientWidth, 10) - correction;\n    const nodeVerticalOffset = parseInt(node.scrollTop + node.clientHeight, 10) - correction;\n    if (node.scrollTop < 0\n      || node.scrollLeft < 0\n      || nodeHorizontalOffset > Math.max(node.scrollWidth, node.clientWidth)\n      || nodeVerticalOffset > Math.max(node.scrollHeight, node.clientHeight)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  updateViewport(e) {\n    const node = e.target;\n\n    if (this.shouldSkipScrollEvent(e)) {\n      return;\n    }\n\n    this.setState({\n      viewportTop: node.scrollTop,\n      viewportLeft: node.scrollLeft,\n    });\n  }\n\n  handleContainerSizeChange({ width, height }) {\n    this.setState({ width, height });\n  }\n\n  renderRowsBlock(name, collapsedGrid, Table, Body, blockRef, marginBottom) {\n    const {\n      minWidth,\n      rowComponent: Row,\n      cellComponent: Cell,\n    } = this.props;\n\n    const tableRef = blockRef || React.createRef();\n\n    return (\n      <RefHolder\n        ref={ref => this.registerBlockRef(name, ref)}\n      >\n        <Table\n          tableRef={tableRef}\n          style={{ minWidth: `${minWidth}px`, ...marginBottom ? { marginBottom: `${marginBottom}px` } : null }}\n        >\n          <ColumnGroup\n            columns={collapsedGrid.columns}\n          />\n          <Body>\n            {collapsedGrid.rows.map((visibleRow) => {\n              const { row, cells = [] } = visibleRow;\n              return (\n                <RefHolder\n                  key={row.key}\n                  ref={ref => this.registerRowRef(row, ref)}\n                >\n                  <Row\n                    tableRow={row}\n                    style={row.height !== undefined\n                      ? { height: `${row.height}px` }\n                      : undefined}\n                  >\n                    {cells.map((cell) => {\n                      const { column } = cell;\n                      return (\n                        <Cell\n                          key={column.key}\n                          tableRow={row}\n                          tableColumn={column}\n                          style={column.animationState}\n                          colSpan={cell.colSpan}\n                        />\n                      );\n                    })}\n                  </Row>\n                </RefHolder>\n              );\n            })}\n          </Body>\n        </Table>\n      </RefHolder>\n    );\n  }\n\n  render() {\n    const {\n      headerRows,\n      bodyRows,\n      footerRows,\n      columns,\n      minColumnWidth,\n      height: propHeight,\n      containerComponent: Container,\n      headTableComponent: HeadTable,\n      footerTableComponent: FootTable,\n      tableComponent: Table,\n      headComponent: Head,\n      bodyComponent: Body,\n      footerComponent: Footer,\n      getCellColSpan,\n      tableRef,\n    } = this.props;\n\n    const {\n      viewportLeft,\n      viewportTop,\n      headerHeight,\n      bodyHeight,\n      footerHeight,\n      width,\n      height,\n    } = this.state;\n\n    const getColumnWidth = column => (column.type === TABLE_FLEX_TYPE\n      ? null\n      : column.width || minColumnWidth);\n    const getColSpan = (\n      tableRow, tableColumn,\n    ) => getCellColSpan({ tableRow, tableColumn, tableColumns: columns });\n    const collapsedHeaderGrid = getCollapsedGrid({\n      rows: headerRows,\n      columns,\n      top: 0,\n      left: viewportLeft,\n      width,\n      height: headerHeight,\n      getColumnWidth,\n      getRowHeight: this.getRowHeight,\n      getColSpan,\n    });\n    const collapsedBodyGrid = getCollapsedGrid({\n      rows: bodyRows,\n      columns,\n      top: viewportTop,\n      left: viewportLeft,\n      width,\n      height: height - headerHeight - footerHeight,\n      getColumnWidth,\n      getRowHeight: this.getRowHeight,\n      getColSpan,\n    });\n    const collapsedFooterGrid = getCollapsedGrid({\n      rows: footerRows,\n      columns,\n      top: 0,\n      left: viewportLeft,\n      width,\n      height: footerHeight,\n      getColumnWidth,\n      getRowHeight: this.getRowHeight,\n      getColSpan,\n    });\n\n    return (\n      <Sizer\n        onSizeChange={this.handleContainerSizeChange}\n        containerComponent={Container}\n        style={{\n          ...(propHeight === AUTO_HEIGHT ? null : { height: `${propHeight}px` }),\n        }}\n        onScroll={this.updateViewport}\n      >\n        {!!headerRows.length && this.renderRowsBlock('header', collapsedHeaderGrid, HeadTable, Head)}\n        {this.renderRowsBlock('body', collapsedBodyGrid, Table, Body, tableRef, Math.max(0, height - headerHeight - bodyHeight - footerHeight))}\n        {!!footerRows.length && this.renderRowsBlock('footer', collapsedFooterGrid, FootTable, Footer)}\n      </Sizer>\n    );\n  }\n}\n\nVirtualTableLayout.propTypes = {\n  minWidth: PropTypes.number.isRequired,\n  minColumnWidth: PropTypes.number.isRequired,\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]).isRequired,\n  headerRows: PropTypes.array,\n  bodyRows: PropTypes.array.isRequired,\n  footerRows: PropTypes.array,\n  columns: PropTypes.array.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  bodyComponent: PropTypes.func.isRequired,\n  headComponent: PropTypes.func,\n  footerComponent: PropTypes.func,\n  tableComponent: PropTypes.func.isRequired,\n  headTableComponent: PropTypes.func,\n  footerTableComponent: PropTypes.func,\n  containerComponent: PropTypes.func.isRequired,\n  estimatedRowHeight: PropTypes.number.isRequired,\n  getCellColSpan: PropTypes.func.isRequired,\n  tableRef: RefType.isRequired,\n};\n\nVirtualTableLayout.defaultProps = {\n  headerRows: [],\n  footerRows: [],\n  headComponent: () => null,\n  headTableComponent: () => null,\n  footerComponent: () => null,\n  footerTableComponent: () => null,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nconst getColumnStyle = ({ column }) => column.animationState;\n\nconst getRowStyle = ({ row }) => (row.height !== undefined\n  ? ({ height: `${row.height}px` })\n  : undefined);\n\nexport class RowLayout extends React.PureComponent {\n  render() {\n    const {\n      row,\n      columns,\n      rowComponent: Row,\n      cellComponent: Cell,\n      getCellColSpan,\n    } = this.props;\n    const getColSpan = (\n      tableRow, tableColumn,\n    ) => getCellColSpan({ tableRow, tableColumn, tableColumns: columns });\n\n    return (\n      <Row\n        tableRow={row}\n        style={getRowStyle({ row })}\n      >\n        {\n          columns\n            .map(column => (\n              <Cell\n                key={column.key}\n                tableRow={row}\n                tableColumn={column}\n                style={getColumnStyle({ column })}\n                colSpan={getColSpan(row, column)}\n              />\n            ))\n        }\n      </Row>\n    );\n  }\n}\n\nRowLayout.propTypes = {\n  row: PropTypes.any.isRequired,\n  columns: PropTypes.array.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  getCellColSpan: PropTypes.func.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { RowLayout } from './row-layout';\n\nexport class RowsBlockLayout extends React.PureComponent {\n  render() {\n    const {\n      rows,\n      columns,\n      blockComponent: Block,\n      rowComponent,\n      cellComponent,\n      getCellColSpan,\n    } = this.props;\n\n    return (\n      <Block>\n        {\n          rows\n            .map(row => (\n              <RowLayout\n                key={row.key}\n                row={row}\n                columns={columns}\n                rowComponent={rowComponent}\n                cellComponent={cellComponent}\n                getCellColSpan={getCellColSpan}\n              />\n            ))\n        }\n      </Block>\n    );\n  }\n}\n\nRowsBlockLayout.propTypes = {\n  rows: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  blockComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  getCellColSpan: PropTypes.func.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { RefType } from '@devexpress/dx-react-core';\nimport { ColumnGroup } from './column-group';\nimport { RowsBlockLayout } from './rows-block-layout';\n\nexport class StaticTableLayout extends React.PureComponent {\n  render() {\n    const {\n      headerRows,\n      bodyRows,\n      footerRows,\n      columns,\n      minWidth,\n      containerComponent: Container,\n      tableComponent: Table,\n      headComponent,\n      bodyComponent,\n      footerComponent,\n      rowComponent,\n      cellComponent,\n      getCellColSpan,\n      tableRef,\n    } = this.props;\n\n    return (\n      <Container>\n        <Table\n          tableRef={tableRef}\n          style={{ minWidth: `${minWidth}px` }}\n        >\n          <ColumnGroup columns={columns} />\n          {!!headerRows.length && (\n            <RowsBlockLayout\n              rows={headerRows}\n              columns={columns}\n              blockComponent={headComponent}\n              rowComponent={rowComponent}\n              cellComponent={cellComponent}\n              getCellColSpan={getCellColSpan}\n            />\n          )}\n          <RowsBlockLayout\n            rows={bodyRows}\n            columns={columns}\n            blockComponent={bodyComponent}\n            rowComponent={rowComponent}\n            cellComponent={cellComponent}\n            getCellColSpan={getCellColSpan}\n          />\n          {!!footerRows.length && (\n            <RowsBlockLayout\n              rows={footerRows}\n              columns={columns}\n              blockComponent={footerComponent}\n              rowComponent={rowComponent}\n              cellComponent={cellComponent}\n              getCellColSpan={getCellColSpan}\n            />\n          )}\n        </Table>\n      </Container>\n    );\n  }\n}\n\nStaticTableLayout.propTypes = {\n  headerRows: PropTypes.array,\n  bodyRows: PropTypes.array.isRequired,\n  footerRows: PropTypes.array,\n  columns: PropTypes.array.isRequired,\n  minWidth: PropTypes.number.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  tableComponent: PropTypes.func.isRequired,\n  headComponent: PropTypes.func,\n  bodyComponent: PropTypes.func.isRequired,\n  footerComponent: PropTypes.func,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  getCellColSpan: PropTypes.func.isRequired,\n  tableRef: RefType.isRequired,\n};\n\nStaticTableLayout.defaultProps = {\n  headerRows: [],\n  footerRows: [],\n  headComponent: () => null,\n  footerComponent: () => null,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connectProps } from '@devexpress/dx-react-core';\n\nexport const makeVirtualTable = (Table, {\n  VirtualLayout,\n  FixedHeader,\n  FixedFooter,\n  defaultEstimatedRowHeight,\n  defaultHeight,\n}) => {\n  class VirtualTable extends React.PureComponent {\n    constructor(props) {\n      super(props);\n\n      this.layoutRenderComponent = connectProps(VirtualLayout, () => {\n        const {\n          height,\n          estimatedRowHeight,\n          headTableComponent,\n          footerTableComponent,\n        } = this.props;\n\n        return {\n          height,\n          estimatedRowHeight,\n          headTableComponent,\n          footerTableComponent,\n        };\n      });\n    }\n\n    componentDidUpdate() {\n      this.layoutRenderComponent.update();\n    }\n\n    render() {\n      const {\n        height,\n        estimatedRowHeight,\n        headTableComponent,\n        ...restProps\n      } = this.props;\n\n      return (\n        <Table layoutComponent={this.layoutRenderComponent} {...restProps} />\n      );\n    }\n  }\n\n  VirtualTable.propTypes = {\n    estimatedRowHeight: PropTypes.number,\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n    headTableComponent: PropTypes.func,\n    footerTableComponent: PropTypes.func,\n  };\n\n  VirtualTable.defaultProps = {\n    estimatedRowHeight: defaultEstimatedRowHeight,\n    height: defaultHeight,\n    headTableComponent: FixedHeader,\n    footerTableComponent: FixedFooter,\n  };\n\n  Object.values(Table.components).forEach((name) => {\n    VirtualTable[name] = Table[name];\n  });\n\n  VirtualTable.FixedHeader = FixedHeader;\n  VirtualTable.FixedFooter = FixedFooter;\n\n  return VirtualTable;\n};\n"],"names":["GridCore","props","rows","columns","getRowId","getCellValue","Root","rootComponent","React.createElement","Plugin","Getter","rowIdGetter","cellValueGetter","Template","TemplatePlaceholder","React","propTypes","PropTypes","isRequired","defaultProps","undefined","Grid","children","PluginHost","pluginDependencies","name","ColumnChooser","state","visible","handleToggle","bind","handleHide","setButtonRef","button","setState","Overlay","overlayComponent","Container","containerComponent","Item","itemComponent","ToggleButton","toggleButtonComponent","messages","getMessage","getMessagesFormatter","TemplateConnector","hiddenColumnNames","isColumnTogglingEnabled","toggleColumnVisibility","React.Fragment","columnChooserItems","map","item","columnName","column","togglingEnabled","components","columnExtensionValueGetter","columnExtensions","defaultValue","getColumnExtensionValueGetter","filterExpressionComputed","filters","filterExpressionValue","filterExpression","FilteringState","defaultFilters","stateHelper","createStateHelper","onFiltersChange","changeColumnFilter","applyFieldReducer","columnFilteringEnabled","Action","nextProps","prevState","optional","getCollapsedRowsComputed","filteredCollapsedRowsGetter","unwrappedRowsComputed","unwrappedFilteredRows","IntegratedFiltering","getColumnPredicate","getColumnExtension","predicate","rowsComputed","getRowLevelKey","getCollapsedRows","filteredRows","defaultPredicate","defaultFilterPredicate","EditingState","rowChanges","defaultRowChanges","addedRows","defaultAddedRows","getRowChanges","stateRowChanges","getAddedRows","stateAddedRows","editingRowIds","defaultEditingRowIds","deletedRowIds","defaultDeletedRowIds","onEditingRowIdsChange","onAddedRowsChange","onRowChangesChange","onDeletedRowIdsChange","startEditRows","stopEditRows","changeRow","cancelChangedRows","cancelChanges","commitChangedRows","rowIds","onCommitChanges","changed","changedRowsByIds","addRow","changeAddedRow","cancelAddedRows","commitAddedRows","added","addedRowsByIds","deleteRows","cancelDeletedRows","commitDeletedRows","deleted","createRowChange","columnEditingEnabled","createRowChangeGetter","PagingState","currentPage","defaultCurrentPage","pageSize","defaultPageSize","onCurrentPageChange","onPageSizeChange","setCurrentPage","setPageSize","rowsWithHeadersComputed","rowsWithPageHeaders","totalCountComputed","rowCount","paginatedRowsComputed","page","paginatedRows","currentPageComputed","totalCount","IntegratedPaging","CustomPaging","dependencies","GroupingState","grouping","defaultGrouping","draftGrouping","expandedGroups","defaultExpandedGroups","onGroupingChange","onExpandedGroupsChange","changeColumnGrouping","toggleGroupExpanded","applyReducer","toggleExpandedGroups","draftColumnGrouping","cancelColumnGroupingDraft","changeColumnSorting","keepOther","restParams","sorting","groupingIndex","findIndex","columnGrouping","sortIndex","adjustSortIndex","getters","actions","groupIndex","nextState","prevGrouping","columnSortingIndex","columnSorting","prevGroupingIndex","length","columnGroupingEnabled","groupCollapsedRowsGetter","expandedGroupedRowsComputed","expandedGroupRows","IntegratedGrouping","getColumnCriteria","criteria","groupedRowsComputed","groupedRows","groupRowChecker","groupRowLevelKeyGetter","getRowIdComputed","customGroupingRowIdGetter","CustomGrouping","getChildGroups","appliedGrouping","appliedExpandedGroups","customGroupedRows","SelectionState","selection","defaultSelection","onSelectionChange","toggleSelection","rowsWithAvailableToSelectComputed","isGroupRow","rowsWithAvailableToSelect","allSelectedComputed","allSelected","someSelectedComputed","someSelected","selectAllAvailableComputed","availableToSelect","toggleSelectAll","unwrapRowsComputed","unwrapSelectedRows","IntegratedSelection","SortingState","defaultSorting","onSortingChange","payload","persistentSortedColumns","getPersistentSortedColumns","calculateKeepOther","columnSortingEnabled","IntegratedSorting","getColumnCompare","compare","sortedRows","getTargetColumns","filter","type","find","DragDropProvider","clientOffset","change","Column","columnComponent","DragDropProviderCore","tableHeaderRowsComputed","tableHeaderRows","tableHeaderRowsWithReordering","TableColumnReorderingRaw","order","defaultOrder","sourceColumnIndex","targetColumnIndex","onOver","handleOver","onLeave","handleLeave","onDrop","handleDrop","orderState","getState","draftOrderComputed","getDraftOrder","cellDimensionGetters","cellDimensions","getAvailableColumns","tableColumns","Object","keys","forEach","columnIndex","TABLE_DATA_TYPE","tableColumn","getter","ensureCellDimensionGetters","x","sourceColumnName","availableColumns","relativeSourceColumnIndex","indexOf","cacheCellDimensions","overlappedColumns","left","right","relativeTargetIndex","getTableTargetColumnIndex","prevSourceColumnIndex","prevTargetColumnIndex","draftOrder","resetCellDimensions","onOrderChange","nextOrder","changeColumnOrder","targetColumnName","tableContainerComponent","Row","rowComponent","Cell","cellComponent","columnsComputed","orderedColumns","params","tableRow","TABLE_REORDERING_TYPE","storeCellDimensionsGetter","TableContainer","DropTarget","TableColumnReordering","withComponents","RowPlaceholder","CellPlaceholder","tableBodyRowsComputed","tableRowsWithDataRows","tableFooterRows","defaultMessages","noData","Table","tableColumnsComputed","memoize","tableColumnsWithDataRows","Layout","layoutComponent","NoDataRow","noDataRowComponent","NoDataCell","noDataCellComponent","StubRow","stubRowComponent","StubCell","stubCellComponent","StubHeaderCell","stubHeaderCellComponent","tableComponent","headComponent","bodyComponent","footerComponent","tableCellColSpanGetter","headerRows","bodyRows","tableBodyRows","footerRows","getTableCellColSpan","isHeaderStubTableCell","isDataTableCell","value","row","content","isNoDataTableRow","isNoDataTableCell","isDataTableRow","COLUMN_TYPE","ROW_TYPE","NODATA_ROW_TYPE","TABLE_NODATA_TYPE","TableSelection","highlightRow","selectByRowClick","showSelectionColumn","showSelectAll","HeaderCell","headerCellComponent","selectionColumnWidth","tableColumnsWithSelection","isSelectAllTableCell","selectAllAvailable","select","isSelectTableCell","rowId","TABLE_SELECT_TYPE","RowDetailState","expandedRowIds","defaultExpandedRowIds","onExpandedRowIdsChange","toggleDetailRowExpanded","getCellColSpanComputed","tableDetailCellColSpanGetter","TableRowDetail","rowHeight","Content","contentComponent","ToggleCell","toggleCellComponent","toggleColumnWidth","tableColumnsWithDetail","expandedDetailRowIds","tableRowsWithExpandedDetail","isDetailToggleTableCell","isDetailRowExpanded","isDetailTableRow","isDetailTableCell","TABLE_DETAIL_TYPE","tableRowsWithGrouping","tableGroupCellColSpanGetter","showColumnWhenGroupedGetter","showColumnsWhenGrouped","reduce","acc","columnExtension","showWhenGrouped","TableGroupRow","GroupCell","Icon","iconComponent","GroupRow","GroupIndentCell","indentCellComponent","indentColumnWidth","tableColumnsWithGrouping","isGroupTableRow","isGroupTableCell","compoundKey","groupKey","isGroupIndentTableCell","TABLE_GROUP_TYPE","tableRowsWithHeading","TableHeaderRow","showSortingControls","showGroupingControls","HeaderRow","SortLabel","sortLabelComponent","GroupButton","groupButtonComponent","Title","titleComponent","isHeadingTableCell","draggingEnabled","tableColumnResizingEnabled","isColumnSortingEnabled","isColumnGroupingEnabled","changeTableColumnWidth","draftTableColumnWidth","cancelTableColumnWidthDraft","columnTitle","title","atLeastOneDataColumn","sortingEnabled","groupingEnabled","shift","getColumnSortingDirection","direction","align","isHeadingTableRow","TABLE_HEADING_TYPE","TableBandHeader","bandedHeaderCellComponent","InvisibleCell","invisibleCellComponent","columnBands","tableRowsWithBands","tableHeaderColumnChainsComputed","tableHeaderColumnChainsWithBands","isBandedOrHeaderRow","tableHeaderColumnChains","bandComponent","getBandComponent","BAND_DUPLICATE_RENDER","BAND_EMPTY_CELL","BAND_GROUP_CELL","BAND_HEADER_CELL","isBandedTableRow","TABLE_BAND_TYPE","filterPlaceholder","contains","notContains","startsWith","endsWith","equal","notEqual","greaterThan","greaterThanOrEqual","lessThan","lessThanOrEqual","TableFilterRow","filterOperations","showFilterSelector","FilterCell","FilterRow","FilterSelector","filterSelectorComponent","EditorComponent","editorComponent","tableHeaderRowsWithFilter","isFilterTableCell","isColumnFilteringEnabled","getAvailableFilterOperations","getColumnFilterConfig","onFilter","config","columnFilterOperations","getColumnFilterOperations","selectedFilterOperation","getSelectedFilterOperation","handleFilterOperationChange","isFilterValueEmpty","operation","handleFilterValueChange","filteringEnabled","onValueChange","isFilterTableRow","TABLE_FILTER_TYPE","TableEditRow","EditCell","EditRow","tableRowsWithEditing","isEditTableCell","isColumnEditingEnabled","isNew","isAddedTableRow","changedRow","getRowChange","newValue","changeArgs","isEditTableRow","ADDED_ROW_TYPE","TABLE_ADDED_TYPE","EDIT_ROW_TYPE","TABLE_EDIT_TYPE","addCommand","editCommand","deleteCommand","commitCommand","cancelCommand","TableEditColumn","Command","commandComponent","showAddCommand","showEditCommand","showDeleteCommand","width","tableColumnsWithEditing","isHeadingEditCommandsTableCell","isEditCommandsTableCell","isEdit","isEditing","TABLE_EDIT_COMMAND_TYPE","TableColumnResizing","columnWidths","defaultColumnWidths","draftColumnWidths","onColumnWidthsChange","tableColumnsWithWidths","tableColumnsDraftComputed","tableColumnsWithDraftWidths","minColumnWidth","showAll","info","from","to","count","PagingPanel","Pager","pageSizes","pageCount","ItemLayout","dragging","onDragStart","onDragEnd","itemElement","draft","DragSource","GroupPanelLayout","targetItemIndex","handleDragEvent","eventHandler","restArgs","onEnter","onGroupDraft","items","prevTargetItemIndex","itemGeometries","itemRefs","ref","findDOMNode","getBoundingClientRect","sourceItemIndex","getGroupCellTargetIndex","draggingColumnName","resetState","onGroup","onGroupDraftCancel","EmptyMessage","emptyMessageComponent","groupPanel","element","push","args","groupByColumn","GroupingPanelRaw","LayoutComponent","EmptyMessagePlaceholder","ItemPlaceholder","groupingPanelItems","GroupingPanel","DataTypeProvider","columnNames","for","Formatter","formatterComponent","Editor","availableFilterOperations","getAvailableFilterOperationsComputed","getAvailableFilterOperationsGetter","includes","noColumns","visibleTableColumnsComputed","visibleTableColumns","TableColumnVisibility","defaultHiddenColumnNames","onHiddenColumnNamesChange","toggleColumn","columnTogglingEnabled","tableDataColumnsExist","Toolbar","FlexibleSpaceComponent","flexibleSpaceComponent","TreeDataState","toggleRowExpanded","expandedTreeRowsComputed","expandedTreeRows","customTreeRowIdGetter","getRowLevelKeyComputed","customTreeRowLevelKeyGetter","isTreeRowLeafComputed","isTreeRowLeafGetter","getTreeRowLevelComputed","getTreeRowLevelGetter","collapsedTreeRowsGetterComputed","collapsedTreeRowsGetter","unwrappedTreeRowsComputed","unwrappedCustomTreeRows","CustomTreeData","getChildRows","treeRowsComputed","customTreeRowsWithMeta","TableTreeColumn","forColumnName","showSelectionControls","Indent","indentComponent","ExpandButton","expandButtonComponent","Checkbox","checkboxComponent","isTreeTableCell","isTreeRowLeaf","getTreeRowLevel","collapsedRows","SearchState","changeValue","changeSearchValue","searchFilterExpression","searchPlaceholder","SearchPanel","Input","inputComponent","searchValue","tableHeaderRowsWithFixed","tableHeaderColumnChainsWithFixed","TableFixedColumns","tableColumnDimensions","key","leftColumns","rightColumns","ListenerRow","listenerRowComponent","ListenerCell","listenerCellComponent","tableColumnsWithFixed","fixed","fixedColumnProps","calculateFixedColumnProps","isFixedTableRow","handleListenerSizeChange","SummaryState","totalItems","groupItems","treeItems","IntegratedSummary","calculator","totalSummaryValuesComputed","totalSummaryItems","totalSummaryValues","groupSummaryValuesComputed","groupSummaryItems","groupSummaryValues","treeSummaryValuesComputed","treeSummaryItems","treeSummaryValues","defaultCalculator","defaultSummaryCalculator","CustomSummary","totalValues","groupValues","treeValues","sum","min","max","avg","tableRowsWithSummaries","tableFooterRowsComputed","tableRowsWithTotalSummaries","defaultTypelessSummaries","TableSummaryRow","columnSummaries","formatlessSummaryTypes","SummaryItem","summary","String","TotalRow","totalRowComponent","groupRowComponent","TreeRow","treeRowComponent","TotalCell","totalCellComponent","groupCellComponent","TreeCell","treeCellComponent","TreeColumnCell","treeColumnCellComponent","TreeColumnContent","treeColumnContentComponent","TreeColumnIndent","treeColumnIndentComponent","isTotalSummaryTableCell","getColumnSummaries","renderContent","isGroupSummaryTableCell","isTreeSummaryTableCell","tableTreeColumnName","isTotalSummaryTableRow","isGroupSummaryTableRow","isTreeSummaryTableRow","TREE_ROW_TYPE","TABLE_TREE_SUMMARY_TYPE","GROUP_ROW_TYPE","TABLE_GROUP_SUMMARY_TYPE","TOTAL_ROW_TYPE","TABLE_TOTAL_SUMMARY_TYPE","TableLayout","animationState","Map","animations","savedScrolldWidth","tableRef","prevProps","prevColumns","tableWidth","getTableWidth","getAnimations","cancelAnimationFrame","raf","requestAnimationFrame","processAnimationFrame","current","offsetWidth","scrollWidth","widthChanged","savedOffsetWidth","columnCountChanged","size","result","isFixedWidth","slice","TABLE_FLEX_TYPE","toString","has","get","animationComponentState","filterActiveAnimations","evalAnimations","restProps","getColumns","minWidth","ColumnGroup","AUTO_HEIGHT","VirtualTableLayout","rowHeights","viewportTop","viewportLeft","height","headerHeight","getRowHeight","bodyHeight","footerHeight","rowRefs","blockRefs","registerRowRef","updateViewport","handleContainerSizeChange","isEdgeBrowser","storeRowHeights","storeBloksHeights","estimatedRowHeight","storedHeight","rowsWithChangedHeights","Array","entries","node","TABLE_STUB_TYPE","set","prevHeaderHeight","prevBodyHeight","prevFooterHeight","delete","e","target","currentTarget","correction","nodeHorizontalOffset","parseInt","scrollLeft","clientWidth","nodeVerticalOffset","scrollTop","clientHeight","Math","scrollHeight","shouldSkipScrollEvent","collapsedGrid","Body","blockRef","marginBottom","RefHolder","registerBlockRef","visibleRow","cells","cell","colSpan","propHeight","HeadTable","headTableComponent","FootTable","footerTableComponent","Head","Footer","getCellColSpan","getColumnWidth","getColSpan","collapsedHeaderGrid","getCollapsedGrid","top","collapsedBodyGrid","collapsedFooterGrid","Sizer","renderRowsBlock","prevRowHeight","RefType","getColumnStyle","getRowStyle","RowLayout","RowsBlockLayout","Block","blockComponent","StaticTableLayout","makeVirtualTable","VirtualLayout","FixedHeader","FixedFooter","defaultEstimatedRowHeight","defaultHeight","VirtualTable","layoutRenderComponent","connectProps","update","values"],"mappings":"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"}