{"ast":null,"code":"/**\n * Bundle of @devexpress/dx-core\n * Generated: 2018-12-25\n * Version: 1.10.0\n * License: https://js.devexpress.com/Licensing\n */\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar DELAY = 200;\n\nvar compare = function compare(a, b) {\n  var aPosition = a.position();\n  var bPosition = b.position();\n\n  for (var i = 0; i < Math.min(aPosition.length, bPosition.length); i += 1) {\n    if (aPosition[i] < bPosition[i]) return -1;\n    if (aPosition[i] > bPosition[i]) return 1;\n  }\n\n  return aPosition.length - bPosition.length;\n};\n\nvar insertPlugin = function insertPlugin(array, newItem) {\n  var result = array.slice();\n  var nextItemIndex = array.findIndex(function (item) {\n    return compare(newItem, item) <= 0;\n  });\n  var targetIndex = nextItemIndex < 0 ? array.length : nextItemIndex;\n  var alreadyExists = targetIndex >= 0 && targetIndex < array.length && compare(newItem, array[targetIndex]) === 0;\n  result.splice(targetIndex, alreadyExists ? 1 : 0, newItem);\n  return result;\n};\n\nvar createClickHandlers = function createClickHandlers(click, dblClick) {\n  var timeoutId;\n  var events = {};\n\n  if (click) {\n    events.onClick = function (e) {\n      if (!timeoutId) {\n        timeoutId = setTimeout(function () {\n          clearTimeout(timeoutId);\n          click(e);\n        }, DELAY);\n      }\n    };\n  }\n\n  if (dblClick) {\n    events.onDoubleClick = function (e) {\n      clearTimeout(timeoutId);\n      dblClick(e);\n    };\n  }\n\n  return events;\n};\n/* globals window:true */\n\n\nvar isEdgeBrowser = function isEdgeBrowser() {\n  return /Edge/.test(window.navigator.userAgent);\n};\n\nvar getDependencyError = function getDependencyError(pluginName, dependencyName) {\n  return new Error(\"The '\".concat(pluginName, \"' plugin requires '\").concat(dependencyName, \"' to be defined before it.\"));\n};\n\nvar PluginHost =\n/*#__PURE__*/\nfunction () {\n  function PluginHost() {\n    _classCallCheck(this, PluginHost);\n\n    this.plugins = [];\n    this.subscriptions = new Set();\n    this.gettersCache = {};\n  }\n\n  _createClass(PluginHost, [{\n    key: \"ensureDependencies\",\n    value: function ensureDependencies() {\n      var defined = new Set();\n      var knownOptionals = new Map();\n      this.plugins.filter(function (plugin) {\n        return plugin.container;\n      }).forEach(function (plugin) {\n        if (knownOptionals.has(plugin.name)) {\n          throw getDependencyError(knownOptionals.get(plugin.name), plugin.name);\n        }\n\n        plugin.dependencies.forEach(function (dependency) {\n          if (defined.has(dependency.name)) return;\n\n          if (dependency.optional) {\n            if (!knownOptionals.has(dependency.name)) {\n              knownOptionals.set(dependency.name, plugin.name);\n            }\n\n            return;\n          }\n\n          throw getDependencyError(plugin.name, dependency.name);\n        });\n        defined.add(plugin.name);\n      });\n    }\n  }, {\n    key: \"registerPlugin\",\n    value: function registerPlugin(plugin) {\n      this.plugins = insertPlugin(this.plugins, plugin);\n      this.cleanPluginsCache();\n    }\n  }, {\n    key: \"unregisterPlugin\",\n    value: function unregisterPlugin(plugin) {\n      this.plugins.splice(this.plugins.indexOf(plugin), 1);\n      this.cleanPluginsCache();\n    }\n  }, {\n    key: \"cleanPluginsCache\",\n    value: function cleanPluginsCache() {\n      this.validationRequired = true;\n      this.gettersCache = {};\n      this.knownKeysCache = {};\n    }\n  }, {\n    key: \"knownKeys\",\n    value: function knownKeys(postfix) {\n      if (!this.knownKeysCache[postfix]) {\n        this.knownKeysCache[postfix] = Array.from(this.plugins.map(function (plugin) {\n          return Object.keys(plugin);\n        }).map(function (keys) {\n          return keys.filter(function (key) {\n            return key.endsWith(postfix);\n          })[0];\n        }).filter(function (key) {\n          return !!key;\n        }).reduce(function (acc, key) {\n          return acc.add(key);\n        }, new Set())).map(function (key) {\n          return key.replace(postfix, '');\n        });\n      }\n\n      return this.knownKeysCache[postfix];\n    }\n  }, {\n    key: \"collect\",\n    value: function collect(key, upTo) {\n      var _this = this;\n\n      if (this.validationRequired) {\n        this.ensureDependencies();\n        this.validationRequired = false;\n      }\n\n      if (!this.gettersCache[key]) {\n        this.gettersCache[key] = this.plugins.map(function (plugin) {\n          return plugin[key];\n        }).filter(function (plugin) {\n          return !!plugin;\n        });\n      }\n\n      if (!upTo) return this.gettersCache[key];\n      var upToIndex = this.plugins.indexOf(upTo);\n      return this.gettersCache[key].filter(function (getter) {\n        var pluginIndex = _this.plugins.findIndex(function (plugin) {\n          return plugin[key] === getter;\n        });\n\n        return pluginIndex < upToIndex;\n      });\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, upTo) {\n      var plugins = this.collect(key, upTo);\n      if (!plugins.length) return undefined;\n      var result = plugins[0]();\n      plugins.slice(1).forEach(function (plugin) {\n        result = plugin(result);\n      });\n      return result;\n    }\n  }, {\n    key: \"registerSubscription\",\n    value: function registerSubscription(subscription) {\n      this.subscriptions.add(subscription);\n    }\n  }, {\n    key: \"unregisterSubscription\",\n    value: function unregisterSubscription(subscription) {\n      this.subscriptions.delete(subscription);\n    }\n  }, {\n    key: \"broadcast\",\n    value: function broadcast(event, message) {\n      this.subscriptions.forEach(function (subscription) {\n        return subscription[event] && subscription[event](message);\n      });\n    }\n  }]);\n\n  return PluginHost;\n}();\n\nvar EventEmitter =\n/*#__PURE__*/\nfunction () {\n  function EventEmitter() {\n    _classCallCheck(this, EventEmitter);\n\n    this.handlers = [];\n  }\n\n  _createClass(EventEmitter, [{\n    key: \"emit\",\n    value: function emit(e) {\n      this.handlers.forEach(function (handler) {\n        return handler(e);\n      });\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(handler) {\n      this.handlers.push(handler);\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(handler) {\n      this.handlers.splice(this.handlers.indexOf(handler), 1);\n    }\n  }]);\n\n  return EventEmitter;\n}();\n\nfunction shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  } // Test for A's keys different from B.\n\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n\n  for (var i = 0; i < keysA.length; i += 1) {\n    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n      return false;\n    }\n\n    var valA = objA[keysA[i]];\n    var valB = objB[keysA[i]];\n\n    if (valA !== valB) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction argumentsShallowEqual(prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  for (var i = 0; i < prev.length; i += 1) {\n    if (prev[i] !== next[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar memoize = function memoize(func) {\n  var lastArgs = null;\n  var lastResult = null;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (lastArgs === null || !argumentsShallowEqual(lastArgs, args)) {\n      lastResult = func.apply(void 0, args);\n    }\n\n    lastArgs = args;\n    return lastResult;\n  };\n};\n\nvar easeInQuad = function easeInQuad(t) {\n  return t * t;\n};\n\nvar easeOutQuad = function easeOutQuad(t) {\n  return t * (2 - t);\n};\n\nvar easeInOutQuad = function easeInOutQuad(t) {\n  return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n};\n\nvar easeInCubic = function easeInCubic(t) {\n  return t * t * t;\n};\n\nvar easeOutCubic = function easeOutCubic(t) {\n  return (t - 1) * (t - 1) * (t - 1) + 1;\n};\n\nvar easeInOutCubic = function easeInOutCubic(t) {\n  return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n};\n\nvar easeInQuart = function easeInQuart(t) {\n  return t * t * t * t;\n};\n\nvar easeOutQuart = function easeOutQuart(t) {\n  return 1 - (t - 1) * (t - 1) * (t - 1) * (t - 1);\n};\n\nvar easeInOutQuart = function easeInOutQuart(t) {\n  return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * (t - 1) * (t - 1) * (t - 1) * (t - 1);\n};\n\nvar easeInQuint = function easeInQuint(t) {\n  return t * t * t * t * t;\n};\n\nvar easeOutQuint = function easeOutQuint(t) {\n  return 1 + (t - 1) * (t - 1) * (t - 1) * (t - 1) * (t - 1);\n};\n\nvar easeInOutQuint = function easeInOutQuint(t) {\n  return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * (t - 1) * (t - 1) * (t - 1) * (t - 1) * (t - 1);\n};\n\nvar processPattern = function processPattern(pattern, params) {\n  return Object.keys(params).reduce(function (msg, key) {\n    return msg.replace(\"{\".concat(key, \"}\"), params[key]);\n  }, pattern);\n};\n\nvar getMessagesFormatter = function getMessagesFormatter(messages) {\n  return function (key, params) {\n    var message = messages[key];\n\n    if (typeof message === 'function') {\n      return message(params);\n    }\n\n    if (params) {\n      return processPattern(message, params);\n    }\n\n    return message;\n  };\n};\n\nexport { PluginHost, EventEmitter, memoize, shallowEqual, argumentsShallowEqual, getMessagesFormatter, createClickHandlers, isEdgeBrowser, easeInQuad, easeOutQuad, easeInOutQuad, easeInCubic, easeOutCubic, easeInOutCubic, easeInQuart, easeOutQuart, easeInOutQuart, easeInQuint, easeOutQuint, easeInOutQuint };","map":null,"metadata":{},"sourceType":"module"}